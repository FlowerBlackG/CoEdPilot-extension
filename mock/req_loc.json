{
    "files": [
        [
            "compat/src/portals.js",
            "import { createElement, render } from 'preact';\r\n\r\n/**\r\n * @param {import('../../src/index').RenderableProps<{ context: any }>} props\r\n */\r\nfunction ContextProvider(props) {\r\n\tthis.getChildContext = () => props.context;\r\n\treturn props.children;\r\n}\r\n\r\n/**\r\n * Portal component\r\n * @this {import('./internal').Component}\r\n * @param {object | null | undefined} props\r\n *\r\n * TODO: use createRoot() instead of fake root\r\n */\r\nfunction Portal(props) {\r\n\tconst _this = this;\r\n\tlet container = props._container;\r\n\r\n\t_this.componentWillUnmount = function () {\r\n\t\trender(null, _this._temp);\r\n\t\t_this._temp = null;\r\n\t\t_this._container = null;\r\n\t};\r\n\r\n\t// When we change container we should clear our old container and\r\n\t// indicate a new mount.\r\n\tif (_this._container && _this._container !== container) {\r\n\t\t_this.componentWillUnmount();\r\n\t}\r\n\r\n\tif (!_this._temp) {\r\n\t\t_this._container = container;\r\n\r\n\t\t// Create a fake DOM parent node that manages a subset of `container`'s children:\r\n\t\t_this._temp = {\r\n\t\t\tnodeType: 1,\r\n\t\t\tparentNode: container,\r\n\t\t\tchildNodes: [],\r\n\t\t\tappendChild(child) {\r\n\t\t\t\tthis.childNodes.push(child);\r\n\t\t\t\t_this._container.appendChild(child);\r\n\t\t\t},\r\n\t\t\tinsertBefore(child, before) {\r\n\t\t\t\tthis.childNodes.push(child);\r\n\t\t\t\t_this._container.appendChild(child);\r\n\t\t\t},\r\n\t\t\tremoveChild(child) {\r\n\t\t\t\tthis.childNodes.splice(this.childNodes.indexOf(child) >>> 1, 1);\r\n\t\t\t\t_this._container.removeChild(child);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t// Render our wrapping element into temp.\r\n\trender(\r\n\t\tcreateElement(ContextProvider, { context: _this.context }, props._vnode),\r\n\t\t_this._temp\r\n\t);\r\n}\r\n\r\n/**\r\n * Create a `Portal` to continue rendering the vnode tree at a different DOM node\r\n * @param {import('./internal').VNode} vnode The vnode to render\r\n * @param {import('./internal').PreactElement} container The DOM node to continue rendering in to.\r\n */\r\nexport function createPortal(vnode, container) {\r\n\tconst el = createElement(Portal, { _vnode: vnode, _container: container });\r\n\tel.containerInfo = container;\r\n\treturn el;\r\n}\r\n"
        ],
        [
            "compat/src/PureComponent.js",
            "import { Component } from 'preact';\r\nimport { shallowDiffers } from './util';\r\n\r\n/**\r\n * Component class with a predefined `shouldComponentUpdate` implementation\r\n */\r\nexport function PureComponent(p) {\r\n\tthis.props = p;\r\n}\r\nPureComponent.prototype = new Component();\r\n// Some third-party libraries check if this property is present\r\nPureComponent.prototype.isPureReactComponent = true;\r\nPureComponent.prototype.shouldComponentUpdate = function (props, state) {\r\n\treturn shallowDiffers(this.props, props) || shallowDiffers(this.state, state);\r\n};\r\n"
        ],
        [
            "compat/src/suspense-list.d.ts",
            "import { Component, ComponentChild, ComponentChildren } from '../../src';\r\n\r\n//\r\n// SuspenseList\r\n// -----------------------------------\r\n\r\nexport interface SuspenseListProps {\r\n\tchildren?: ComponentChildren;\r\n\trevealOrder?: 'forwards' | 'backwards' | 'together';\r\n}\r\n\r\nexport class SuspenseList extends Component<SuspenseListProps> {\r\n\trender(): ComponentChild;\r\n}\r\n"
        ],
        [
            "compat/src/suspense-list.js",
            "import { Component, toChildArray } from 'preact';\r\nimport { suspended } from './suspense.js';\r\n\r\n// Indexes to linked list nodes (nodes are stored as arrays to save bytes).\r\nconst SUSPENDED_COUNT = 0;\r\nconst RESOLVED_COUNT = 1;\r\nconst NEXT_NODE = 2;\r\n\r\n// Having custom inheritance instead of a class here saves a lot of bytes.\r\nexport function SuspenseList() {\r\n\tthis._next = null;\r\n\tthis._map = null;\r\n}\r\n\r\n// Mark one of child's earlier suspensions as resolved.\r\n// Some pending callbacks may become callable due to this\r\n// (e.g. the last suspended descendant gets resolved when\r\n// revealOrder === 'together'). Process those callbacks as well.\r\nconst resolve = (list, child, node) => {\r\n\tif (++node[RESOLVED_COUNT] === node[SUSPENDED_COUNT]) {\r\n\t\t// The number a child (or any of its descendants) has been suspended\r\n\t\t// matches the number of times it's been resolved. Therefore we\r\n\t\t// mark the child as completely resolved by deleting it from ._map.\r\n\t\t// This is used to figure out when *all* children have been completely\r\n\t\t// resolved when revealOrder is 'together'.\r\n\t\tlist._map.delete(child);\r\n\t}\r\n\r\n\t// If revealOrder is falsy then we can do an early exit, as the\r\n\t// callbacks won't get queued in the node anyway.\r\n\t// If revealOrder is 'together' then also do an early exit\r\n\t// if all suspended descendants have not yet been resolved.\r\n\tif (\r\n\t\t!list.props.revealOrder ||\r\n\t\t(list.props.revealOrder[0] === 't' && list._map.size)\r\n\t) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Walk the currently suspended children in order, calling their\r\n\t// stored callbacks on the way. Stop if we encounter a child that\r\n\t// has not been completely resolved yet.\r\n\tnode = list._next;\r\n\twhile (node) {\r\n\t\twhile (node.length > 3) {\r\n\t\t\tnode.pop()();\r\n\t\t}\r\n\t\tif (node[RESOLVED_COUNT] < node[SUSPENDED_COUNT]) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tlist._next = node = node[NEXT_NODE];\r\n\t}\r\n};\r\n\r\n// Things we do here to save some bytes but are not proper JS inheritance:\r\n// - call `new Component()` as the prototype\r\n// - do not set `Suspense.prototype.constructor` to `Suspense`\r\nSuspenseList.prototype = new Component();\r\n\r\nSuspenseList.prototype._suspended = function (child) {\r\n\tconst list = this;\r\n\tconst delegated = suspended(list._vnode);\r\n\r\n\tlet node = list._map.get(child);\r\n\tnode[SUSPENDED_COUNT]++;\r\n\r\n\treturn unsuspend => {\r\n\t\tconst wrappedUnsuspend = () => {\r\n\t\t\tif (!list.props.revealOrder) {\r\n\t\t\t\t// Special case the undefined (falsy) revealOrder, as there\r\n\t\t\t\t// is no need to coordinate a specific order or unsuspends.\r\n\t\t\t\tunsuspend();\r\n\t\t\t} else {\r\n\t\t\t\tnode.push(unsuspend);\r\n\t\t\t\tresolve(list, child, node);\r\n\t\t\t}\r\n\t\t};\r\n\t\tif (delegated) {\r\n\t\t\tdelegated(wrappedUnsuspend);\r\n\t\t} else {\r\n\t\t\twrappedUnsuspend();\r\n\t\t}\r\n\t};\r\n};\r\n\r\nSuspenseList.prototype.render = function (props) {\r\n\tthis._next = null;\r\n\tthis._map = new Map();\r\n\r\n\tconst children = toChildArray(props.children);\r\n\tif (props.revealOrder && props.revealOrder[0] === 'b') {\r\n\t\t// If order === 'backwards' (or, well, anything starting with a 'b')\r\n\t\t// then flip the child list around so that the last child will be\r\n\t\t// the first in the linked list.\r\n\t\tchildren.reverse();\r\n\t}\r\n\t// Build the linked list. Iterate through the children in reverse order\r\n\t// so that `_next` points to the first linked list node to be resolved.\r\n\tfor (let i = children.length; i--; ) {\r\n\t\t// Create a new linked list node as an array of form:\r\n\t\t// \t[suspended_count, resolved_count, next_node]\r\n\t\t// where suspended_count and resolved_count are numeric counters for\r\n\t\t// keeping track how many times a node has been suspended and resolved.\r\n\t\t//\r\n\t\t// Note that suspended_count starts from 1 instead of 0, so we can block\r\n\t\t// processing callbacks until componentDidMount has been called. In a sense\r\n\t\t// node is suspended at least until componentDidMount gets called!\r\n\t\t//\r\n\t\t// Pending callbacks are added to the end of the node:\r\n\t\t// \t[suspended_count, resolved_count, next_node, callback_0, callback_1, ...]\r\n\t\tthis._map.set(children[i], (this._next = [1, 0, this._next]));\r\n\t}\r\n\treturn props.children;\r\n};\r\n\r\nSuspenseList.prototype.componentDidUpdate =\r\n\tSuspenseList.prototype.componentDidMount = function () {\r\n\t\t// Iterate through all children after mounting for two reasons:\r\n\t\t// 1. As each node[SUSPENDED_COUNT] starts from 1, this iteration increases\r\n\t\t//    each node[RELEASED_COUNT] by 1, therefore balancing the counters.\r\n\t\t//    The nodes can now be completely consumed from the linked list.\r\n\t\t// 2. Handle nodes that might have gotten resolved between render and\r\n\t\t//    componentDidMount.\r\n\t\tthis._map.forEach((node, child) => {\r\n\t\t\tresolve(this, child, node);\r\n\t\t});\r\n\t};\r\n"
        ],
        [
            "compat/src/suspense.d.ts",
            "import { Component, ComponentChild, ComponentChildren } from '../../src';\r\n\r\n//\r\n// Suspense/lazy\r\n// -----------------------------------\r\nexport function lazy<T>(loader: () => Promise<{ default: T } | T>): T;\r\n\r\nexport interface SuspenseProps {\r\n\tchildren?: ComponentChildren;\r\n\tfallback: ComponentChildren;\r\n}\r\n\r\nexport class Suspense extends Component<SuspenseProps> {\r\n\trender(): ComponentChild;\r\n}\r\n"
        ],
        [
            "compat/src/suspense.js",
            "import { Component, createElement, options, Fragment } from 'preact';\r\nimport { MODE_HYDRATE } from '../../src/constants';\r\nimport { assign } from './util';\r\n\r\nconst oldCatchError = options._catchError;\r\noptions._catchError = function (error, newVNode, oldVNode, errorInfo) {\r\n\tif (error.then) {\r\n\t\t/** @type {import('./internal').Component} */\r\n\t\tlet component;\r\n\t\tlet vnode = newVNode;\r\n\r\n\t\tfor (; (vnode = vnode._parent); ) {\r\n\t\t\tif ((component = vnode._component) && component._childDidSuspend) {\r\n\t\t\t\tif (newVNode._dom == null) {\r\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\r\n\t\t\t\t\tnewVNode._children = oldVNode._children;\r\n\t\t\t\t}\r\n\t\t\t\t// Don't call oldCatchError if we found a Suspense\r\n\t\t\t\treturn component._childDidSuspend(error, newVNode);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\toldCatchError(error, newVNode, oldVNode, errorInfo);\r\n};\r\n\r\nconst oldUnmount = options.unmount;\r\noptions.unmount = function (vnode) {\r\n\t/** @type {import('./internal').Component} */\r\n\tconst component = vnode._component;\r\n\tif (component && component._onResolve) {\r\n\t\tcomponent._onResolve();\r\n\t}\r\n\r\n\t// if the component is still hydrating\r\n\t// most likely it is because the component is suspended\r\n\t// we set the vnode.type as `null` so that it is not a typeof function\r\n\t// so the unmount will remove the vnode._dom\r\n\tif (component && vnode._flags & MODE_HYDRATE) {\r\n\t\tvnode.type = null;\r\n\t}\r\n\r\n\tif (oldUnmount) oldUnmount(vnode);\r\n};\r\n\r\nfunction detachedClone(vnode, detachedParent, parentDom) {\r\n\tif (vnode) {\r\n\t\tif (vnode._component && vnode._component.__hooks) {\r\n\t\t\tvnode._component.__hooks._list.forEach(effect => {\r\n\t\t\t\tif (typeof effect._cleanup == 'function') effect._cleanup();\r\n\t\t\t});\r\n\r\n\t\t\tvnode._component.__hooks = null;\r\n\t\t}\r\n\r\n\t\tvnode = assign({}, vnode);\r\n\t\tif (vnode._component != null) {\r\n\t\t\tif (vnode._component._parentDom === parentDom) {\r\n\t\t\t\tvnode._component._parentDom = detachedParent;\r\n\t\t\t}\r\n\t\t\tvnode._component = null;\r\n\t\t}\r\n\r\n\t\tvnode._children =\r\n\t\t\tvnode._children &&\r\n\t\t\tvnode._children.map(child =>\r\n\t\t\t\tdetachedClone(child, detachedParent, parentDom)\r\n\t\t\t);\r\n\t}\r\n\r\n\treturn vnode;\r\n}\r\n\r\nfunction removeOriginal(vnode, detachedParent, originalParent) {\r\n\tif (vnode && originalParent) {\r\n\t\tvnode._original = null;\r\n\t\tvnode._children =\r\n\t\t\tvnode._children &&\r\n\t\t\tvnode._children.map(child =>\r\n\t\t\t\tremoveOriginal(child, detachedParent, originalParent)\r\n\t\t\t);\r\n\r\n\t\tif (vnode._component) {\r\n\t\t\tif (vnode._component._parentDom === detachedParent) {\r\n\t\t\t\tif (vnode._dom) {\r\n\t\t\t\t\toriginalParent.appendChild(vnode._dom);\r\n\t\t\t\t}\r\n\t\t\t\tvnode._component._force = true;\r\n\t\t\t\tvnode._component._parentDom = originalParent;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn vnode;\r\n}\r\n\r\n// having custom inheritance instead of a class here saves a lot of bytes\r\nexport function Suspense() {\r\n\t// we do not call super here to golf some bytes...\r\n\tthis._pendingSuspensionCount = 0;\r\n\tthis._suspenders = null;\r\n\tthis._detachOnNextRender = null;\r\n}\r\n\r\n// Things we do here to save some bytes but are not proper JS inheritance:\r\n// - call `new Component()` as the prototype\r\n// - do not set `Suspense.prototype.constructor` to `Suspense`\r\nSuspense.prototype = new Component();\r\n\r\n/**\r\n * @this {import('./internal').SuspenseComponent}\r\n * @param {Promise} promise The thrown promise\r\n * @param {import('./internal').VNode<any, any>} suspendingVNode The suspending component\r\n */\r\nSuspense.prototype._childDidSuspend = function (promise, suspendingVNode) {\r\n\tconst suspendingComponent = suspendingVNode._component;\r\n\r\n\t/** @type {import('./internal').SuspenseComponent} */\r\n\tconst c = this;\r\n\r\n\tif (c._suspenders == null) {\r\n\t\tc._suspenders = [];\r\n\t}\r\n\tc._suspenders.push(suspendingComponent);\r\n\r\n\tconst resolve = suspended(c._vnode);\r\n\r\n\tlet resolved = false;\r\n\tconst onResolved = () => {\r\n\t\tif (resolved) return;\r\n\r\n\t\tresolved = true;\r\n\t\tsuspendingComponent._onResolve = null;\r\n\r\n\t\tif (resolve) {\r\n\t\t\tresolve(onSuspensionComplete);\r\n\t\t} else {\r\n\t\t\tonSuspensionComplete();\r\n\t\t}\r\n\t};\r\n\r\n\tsuspendingComponent._onResolve = onResolved;\r\n\r\n\tconst onSuspensionComplete = () => {\r\n\t\tif (!--c._pendingSuspensionCount) {\r\n\t\t\t// If the suspension was during hydration we don't need to restore the\r\n\t\t\t// suspended children into the _children array\r\n\t\t\tif (c.state._suspended) {\r\n\t\t\t\tconst suspendedVNode = c.state._suspended;\r\n\t\t\t\tc._vnode._children[0] = removeOriginal(\r\n\t\t\t\t\tsuspendedVNode,\r\n\t\t\t\t\tsuspendedVNode._component._parentDom,\r\n\t\t\t\t\tsuspendedVNode._component._originalParentDom\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tc.setState({ _suspended: (c._detachOnNextRender = null) });\r\n\r\n\t\t\tlet suspended;\r\n\t\t\twhile ((suspended = c._suspenders.pop())) {\r\n\t\t\t\tsuspended.forceUpdate();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * We do not set `suspended: true` during hydration because we want the actual markup\r\n\t * to remain on screen and hydrate it when the suspense actually gets resolved.\r\n\t * While in non-hydration cases the usual fallback -> component flow would occour.\r\n\t */\r\n\tif (\r\n\t\t!c._pendingSuspensionCount++ &&\r\n\t\t!(suspendingVNode._flags & MODE_HYDRATE)\r\n\t) {\r\n\t\tc.setState({ _suspended: (c._detachOnNextRender = c._vnode._children[0]) });\r\n\t}\r\n\tpromise.then(onResolved, onResolved);\r\n};\r\n\r\nSuspense.prototype.componentWillUnmount = function () {\r\n\tthis._suspenders = [];\r\n};\r\n\r\n/**\r\n * @this {import('./internal').SuspenseComponent}\r\n * @param {import('./internal').SuspenseComponent[\"props\"]} props\r\n * @param {import('./internal').SuspenseState} state\r\n */\r\nSuspense.prototype.render = function (props, state) {\r\n\tif (this._detachOnNextRender) {\r\n\t\t// When the Suspense's _vnode was created by a call to createVNode\r\n\t\t// (i.e. due to a setState further up in the tree)\r\n\t\t// it's _children prop is null, in this case we \"forget\" about the parked vnodes to detach\r\n\t\tif (this._vnode._children) {\r\n\t\t\tconst detachedParent = document.createElement('div');\r\n\t\t\tconst detachedComponent = this._vnode._children[0]._component;\r\n\t\t\tthis._vnode._children[0] = detachedClone(\r\n\t\t\t\tthis._detachOnNextRender,\r\n\t\t\t\tdetachedParent,\r\n\t\t\t\t(detachedComponent._originalParentDom = detachedComponent._parentDom)\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis._detachOnNextRender = null;\r\n\t}\r\n\r\n\t// Wrap fallback tree in a VNode that prevents itself from being marked as aborting mid-hydration:\r\n\t/** @type {import('./internal').VNode} */\r\n\tconst fallback =\r\n\t\tstate._suspended && createElement(Fragment, null, props.fallback);\r\n\tif (fallback) fallback._flags &= ~MODE_HYDRATE;\r\n\r\n\treturn [\r\n\t\tcreateElement(Fragment, null, state._suspended ? null : props.children),\r\n\t\tfallback\r\n\t];\r\n};\r\n\r\n/**\r\n * Checks and calls the parent component's _suspended method, passing in the\r\n * suspended vnode. This is a way for a parent (e.g. SuspenseList) to get notified\r\n * that one of its children/descendants suspended.\r\n *\r\n * The parent MAY return a callback. The callback will get called when the\r\n * suspension resolves, notifying the parent of the fact.\r\n * Moreover, the callback gets function `unsuspend` as a parameter. The resolved\r\n * child descendant will not actually get unsuspended until `unsuspend` gets called.\r\n * This is a way for the parent to delay unsuspending.\r\n *\r\n * If the parent does not return a callback then the resolved vnode\r\n * gets unsuspended immediately when it resolves.\r\n *\r\n * @param {import('./internal').VNode} vnode\r\n * @returns {((unsuspend: () => void) => void)?}\r\n */\r\nexport function suspended(vnode) {\r\n\t/** @type {import('./internal').Component} */\r\n\tlet component = vnode._parent._component;\r\n\treturn component && component._suspended && component._suspended(vnode);\r\n}\r\n\r\nexport function lazy(loader) {\r\n\tlet prom;\r\n\tlet component;\r\n\tlet error;\r\n\r\n\tfunction Lazy(props) {\r\n\t\tif (!prom) {\r\n\t\t\tprom = loader();\r\n\t\t\tprom.then(\r\n\t\t\t\texports => {\r\n\t\t\t\t\tcomponent = exports.default || exports;\r\n\t\t\t\t},\r\n\t\t\t\te => {\r\n\t\t\t\t\terror = e;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\r\n\t\tif (!component) {\r\n\t\t\tthrow prom;\r\n\t\t}\r\n\r\n\t\treturn createElement(component, props);\r\n\t}\r\n\r\n\tLazy.displayName = 'Lazy';\r\n\tLazy._forwarded = true;\r\n\treturn Lazy;\r\n}\r\n"
        ],
        [
            "jsconfig.json",
            "{\r\n  \"compilerOptions\": {\r\n    \"baseUrl\": \".\",\r\n    \"checkJs\": true,\r\n    \"jsx\": \"react\",\r\n    \"jsxFactory\": \"createElement\",\r\n    \"jsxFragmentFactory\": \"Fragment\",\r\n    \"lib\": [\"dom\", \"es5\"],\r\n    \"moduleResolution\": \"node\",\r\n    \"resolveJsonModule\": true,\r\n    \"paths\": {\r\n      \"preact\": [\".\"],\r\n      \"preact/*\": [\"./*\"]\r\n    },\r\n    \"target\": \"es5\",\r\n    \"noEmit\": true\r\n  },\r\n  \"exclude\": [\"**/node_modules/**\", \"**/dist/**\", \"coverage\", \"demo\"]\r\n}\r\n"
        ],
        [
            "jsx-runtime/src/index.js",
            "import { options, Fragment } from 'preact';\r\nimport { encodeEntities } from './utils';\r\nimport { IS_NON_DIMENSIONAL } from '../../src/constants';\r\n\r\nlet vnodeId = 0;\r\n\r\nconst isArray = Array.isArray;\r\n\r\n/**\r\n * @fileoverview\r\n * This file exports various methods that implement Babel's \"automatic\" JSX runtime API:\r\n * - jsx(type, props, key)\r\n * - jsxs(type, props, key)\r\n * - jsxDEV(type, props, key, __source, __self)\r\n *\r\n * The implementation of createVNode here is optimized for performance.\r\n * Benchmarks: https://esbench.com/bench/5f6b54a0b4632100a7dcd2b3\r\n */\r\n\r\n/**\r\n * JSX.Element factory used by Babel's {runtime:\"automatic\"} JSX transform\r\n * @param {VNode['type']} type\r\n * @param {VNode['props']} props\r\n * @param {VNode['key']} [key]\r\n * @param {unknown} [isStaticChildren]\r\n * @param {unknown} [__source]\r\n * @param {unknown} [__self]\r\n */\r\nfunction createVNode(type, props, key, isStaticChildren, __source, __self) {\r\n\t// We'll want to preserve `ref` in props to get rid of the need for\r\n\t// forwardRef components in the future, but that should happen via\r\n\t// a separate PR.\r\n\tlet normalizedProps = {},\r\n\t\tref,\r\n\t\ti;\r\n\tfor (i in props) {\r\n\t\tif (i == 'ref') {\r\n\t\t\tref = props[i];\r\n\t\t} else {\r\n\t\t\tnormalizedProps[i] = props[i];\r\n\t\t}\r\n\t}\r\n\r\n\t/** @type {VNode & { __source: any; __self: any }} */\r\n\tconst vnode = {\r\n\t\ttype,\r\n\t\tprops: normalizedProps,\r\n\t\tkey,\r\n\t\tref,\r\n\t\t_children: null,\r\n\t\t_parent: null,\r\n\t\t_depth: 0,\r\n\t\t_dom: null,\r\n\t\t_nextDom: undefined,\r\n\t\t_component: null,\r\n\t\tconstructor: undefined,\r\n\t\t_original: --vnodeId,\r\n\t\t_index: -1,\r\n\t\t_flags: 0,\r\n\t\t__source,\r\n\t\t__self\r\n\t};\r\n\r\n\t// If a Component VNode, check for and apply defaultProps.\r\n\t// Note: `type` is often a String, and can be `undefined` in development.\r\n\tif (typeof type === 'function' && (ref = type.defaultProps)) {\r\n\t\tfor (i in ref)\r\n\t\t\tif (typeof normalizedProps[i] === 'undefined') {\r\n\t\t\t\tnormalizedProps[i] = ref[i];\r\n\t\t\t}\r\n\t}\r\n\r\n\tif (options.vnode) options.vnode(vnode);\r\n\treturn vnode;\r\n}\r\n\r\n/**\r\n * Create a template vnode. This function is not expected to be\r\n * used directly, but rather through a precompile JSX transform\r\n * @param {string[]} templates\r\n * @param  {Array<string | null | VNode>} exprs\r\n * @returns {VNode}\r\n */\r\nfunction jsxTemplate(templates, ...exprs) {\r\n\tconst vnode = createVNode(Fragment, { tpl: templates, exprs });\r\n\t// Bypass render to string top level Fragment optimization\r\n\tvnode.key = vnode._vnode;\r\n\treturn vnode;\r\n}\r\n\r\nconst JS_TO_CSS = {};\r\nconst CSS_REGEX = /[A-Z]/g;\r\n\r\n/**\r\n * Serialize an HTML attribute to a string. This function is not\r\n * expected to be used directly, but rather through a precompile\r\n * JSX transform\r\n * @param {string} name The attribute name\r\n * @param {*} value The attribute value\r\n * @returns {string}\r\n */\r\nfunction jsxAttr(name, value) {\r\n\tif (options.attr) {\r\n\t\tconst result = options.attr(name, value);\r\n\t\tif (typeof result === 'string') return result;\r\n\t}\r\n\r\n\tif (name === 'ref' || name === 'key') return '';\r\n\tif (name === 'style' && typeof value === 'object') {\r\n\t\tlet str = '';\r\n\t\tfor (let prop in value) {\r\n\t\t\tlet val = value[prop];\r\n\t\t\tif (val != null && val !== '') {\r\n\t\t\t\tconst name =\r\n\t\t\t\t\tprop[0] == '-'\r\n\t\t\t\t\t\t? prop\r\n\t\t\t\t\t\t: JS_TO_CSS[prop] ||\r\n\t\t\t\t\t\t  (JS_TO_CSS[prop] = prop.replace(CSS_REGEX, '-$&').toLowerCase());\r\n\r\n\t\t\t\tlet suffix = ';';\r\n\t\t\t\tif (\r\n\t\t\t\t\ttypeof val === 'number' &&\r\n\t\t\t\t\t// Exclude custom-attributes\r\n\t\t\t\t\t!name.startsWith('--') &&\r\n\t\t\t\t\t!IS_NON_DIMENSIONAL.test(name)\r\n\t\t\t\t) {\r\n\t\t\t\t\tsuffix = 'px;';\r\n\t\t\t\t}\r\n\t\t\t\tstr = str + name + ':' + val + suffix;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn name + '=\"' + str + '\"';\r\n\t}\r\n\r\n\tif (\r\n\t\tvalue == null ||\r\n\t\tvalue === false ||\r\n\t\ttypeof value === 'function' ||\r\n\t\ttypeof value === 'object'\r\n\t) {\r\n\t\treturn '';\r\n\t} else if (value === true) return name;\r\n\r\n\treturn name + '=\"' + encodeEntities(value) + '\"';\r\n}\r\n\r\n/**\r\n * Escape a dynamic child passed to `jsxTemplate`. This function\r\n * is not expected to be used directly, but rather through a\r\n * precompile JSX transform\r\n * @param {*} value\r\n * @returns {string | null | VNode | Array<string | null | VNode>}\r\n */\r\nfunction jsxEscape(value) {\r\n\tif (\r\n\t\tvalue == null ||\r\n\t\ttypeof value === 'boolean' ||\r\n\t\ttypeof value === 'function'\r\n\t) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tif (typeof value === 'object') {\r\n\t\t// Check for VNode\r\n\t\tif (value.constructor === undefined) return value;\r\n\r\n\t\tif (isArray(value)) {\r\n\t\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\t\tvalue[i] = jsxEscape(value[i]);\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t}\r\n\t}\r\n\r\n\treturn encodeEntities('' + value);\r\n}\r\n\r\nexport {\r\n\tcreateVNode as jsx,\r\n\tcreateVNode as jsxs,\r\n\tcreateVNode as jsxDEV,\r\n\tFragment,\r\n\t// precompiled JSX transform\r\n\tjsxTemplate,\r\n\tjsxAttr,\r\n\tjsxEscape\r\n};\r\n"
        ],
        [
            "LICENSE",
            "The MIT License (MIT)\r\n\r\nCopyright (c) 2015-present Jason Miller;\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n"
        ],
        [
            "src/cjs.js",
            "import * as preact from './index.js';\r\nif (typeof module < 'u') module.exports = preact;\r\nelse self.preact = preact;\r\n"
        ],
        [
            "src/component.js",
            "import { assign } from './util';\r\nimport { diff, commitRoot } from './diff/index';\r\nimport options from './options';\r\nimport { Fragment } from './create-element';\r\nimport { MODE_HYDRATE } from './constants';\r\n\r\n/**\r\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\r\n * trigger rendering\r\n * @param {object} props The initial component props\r\n * @param {object} context The initial context from parent components'\r\n * getChildContext\r\n */\r\nexport function BaseComponent(props, context) {\r\n\tthis.props = props;\r\n\tthis.context = context;\r\n}\r\n\r\n/**\r\n * Update component state and schedule a re-render.\r\n * @this {Component}\r\n * @param {object | ((s: object, p: object) => object)} update A hash of state\r\n * properties to update with new values or a function that given the current\r\n * state and props returns a new partial state\r\n * @param {() => void} [callback] A function to be called once component state is\r\n * updated\r\n */\r\nBaseComponent.prototype.setState = function (update, callback) {\r\n\t// only clone state when copying to nextState the first time.\r\n\tlet s;\r\n\tif (this._nextState != null && this._nextState !== this.state) {\r\n\t\ts = this._nextState;\r\n\t} else {\r\n\t\ts = this._nextState = assign({}, this.state);\r\n\t}\r\n\r\n\tif (typeof update == 'function') {\r\n\t\t// Some libraries like `immer` mark the current state as readonly,\r\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\r\n\t\tupdate = update(assign({}, s), this.props);\r\n\t}\r\n\r\n\tif (update) {\r\n\t\tassign(s, update);\r\n\t}\r\n\r\n\t// Skip update if updater function returned null\r\n\tif (update == null) return;\r\n\r\n\tif (this._vnode) {\r\n\t\tif (callback) {\r\n\t\t\tthis._stateCallbacks.push(callback);\r\n\t\t}\r\n\t\tenqueueRender(this);\r\n\t}\r\n};\r\n\r\n/**\r\n * Immediately perform a synchronous re-render of the component\r\n * @this {Component}\r\n * @param {() => void} [callback] A function to be called after component is\r\n * re-rendered\r\n */\r\nBaseComponent.prototype.forceUpdate = function (callback) {\r\n\tif (this._vnode) {\r\n\t\t// Set render mode so that we can differentiate where the render request\r\n\t\t// is coming from. We need this because forceUpdate should never call\r\n\t\t// shouldComponentUpdate\r\n\t\tthis._force = true;\r\n\t\tif (callback) this._renderCallbacks.push(callback);\r\n\t\tenqueueRender(this);\r\n\t}\r\n};\r\n\r\n/**\r\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\r\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\r\n * @param {object} props Props (eg: JSX attributes) received from parent\r\n * element/component\r\n * @param {object} state The component's current state\r\n * @param {object} context Context object, as returned by the nearest\r\n * ancestor's `getChildContext()`\r\n * @returns {ComponentChildren | void}\r\n */\r\nBaseComponent.prototype.render = Fragment;\r\n\r\n/**\r\n * @param {VNode} vnode\r\n * @param {number | null} [childIndex]\r\n */\r\nexport function getDomSibling(vnode, childIndex) {\r\n\tif (childIndex == null) {\r\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\r\n\t\treturn vnode._parent\r\n\t\t\t? getDomSibling(vnode._parent, vnode._index + 1)\r\n\t\t\t: null;\r\n\t}\r\n\r\n\tlet sibling;\r\n\tfor (; childIndex < vnode._children.length; childIndex++) {\r\n\t\tsibling = vnode._children[childIndex];\r\n\r\n\t\tif (sibling != null && sibling._dom != null) {\r\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\r\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\r\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\r\n\t\t\treturn sibling._dom;\r\n\t\t}\r\n\t}\r\n\r\n\t// If we get here, we have not found a DOM node in this vnode's children.\r\n\t// We must resume from this vnode's sibling (in it's parent _children array)\r\n\t// Only climb up and search the parent if we aren't searching through a DOM\r\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\r\n\t// the search)\r\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\r\n}\r\n\r\n/**\r\n * Trigger in-place re-rendering of a component.\r\n * @param {Component} component The component to rerender\r\n */\r\nfunction renderComponent(component) {\r\n\tlet oldVNode = component._vnode,\r\n\t\toldDom = oldVNode._dom,\r\n\t\tparentDom = component._parentDom,\r\n\t\tcommitQueue = [],\r\n\t\trefQueue = [];\r\n\r\n\tif (parentDom) {\r\n\t\tconst newVNode = assign({}, oldVNode);\r\n\t\tnewVNode._original = oldVNode._original + 1;\r\n\r\n\t\tdiff(\r\n\t\t\tparentDom,\r\n\t\t\tnewVNode,\r\n\t\t\toldVNode,\r\n\t\t\tcomponent._globalContext,\r\n\t\t\tparentDom.ownerSVGElement !== undefined,\r\n\t\t\toldVNode._flags & MODE_HYDRATE ? [oldDom] : null,\r\n\t\t\tcommitQueue,\r\n\t\t\toldDom == null ? getDomSibling(oldVNode) : oldDom,\r\n\t\t\t!!(oldVNode._flags & MODE_HYDRATE),\r\n\t\t\trefQueue\r\n\t\t);\r\n\r\n\t\tnewVNode._parent._children[newVNode._index] = newVNode;\r\n\t\tcommitRoot(commitQueue, newVNode, refQueue);\r\n\r\n\t\tif (newVNode._dom != oldDom) {\r\n\t\t\tupdateParentDomPointers(newVNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {VNode} vnode\r\n */\r\nfunction updateParentDomPointers(vnode) {\r\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\r\n\t\tvnode._dom = vnode._component.base = null;\r\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\r\n\t\t\tlet child = vnode._children[i];\r\n\t\t\tif (child != null && child._dom != null) {\r\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn updateParentDomPointers(vnode);\r\n\t}\r\n}\r\n\r\n/**\r\n * The render queue\r\n * @type {Array<Component>}\r\n */\r\nlet rerenderQueue = [];\r\n\r\n/*\r\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\r\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\r\n * do, and when their effects will be applied. See the links below for some further reading on designing\r\n * asynchronous APIs.\r\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\r\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\r\n */\r\n\r\nlet prevDebounce;\r\n\r\nconst defer =\r\n\ttypeof Promise == 'function'\r\n\t\t? Promise.prototype.then.bind(Promise.resolve())\r\n\t\t: setTimeout;\r\n\r\n/**\r\n * Enqueue a rerender of a component\r\n * @param {Component} c The component to rerender\r\n */\r\nexport function enqueueRender(c) {\r\n\tif (\r\n\t\t(!c._dirty &&\r\n\t\t\t(c._dirty = true) &&\r\n\t\t\trerenderQueue.push(c) &&\r\n\t\t\t!process._rerenderCount++) ||\r\n\t\tprevDebounce !== options.debounceRendering\r\n\t) {\r\n\t\tprevDebounce = options.debounceRendering;\r\n\t\t(prevDebounce || defer)(process);\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Component} a\r\n * @param {Component} b\r\n */\r\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\r\n\r\n/** Flush the render queue by rerendering all queued components */\r\nfunction process() {\r\n\tlet c;\r\n\trerenderQueue.sort(depthSort);\r\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\r\n\t// process() calls from getting scheduled while `queue` is still being consumed.\r\n\twhile ((c = rerenderQueue.shift())) {\r\n\t\tif (c._dirty) {\r\n\t\t\tlet renderQueueLength = rerenderQueue.length;\r\n\t\t\trenderComponent(c);\r\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\r\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\r\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\r\n\t\t\t\t// single pass\r\n\t\t\t\trerenderQueue.sort(depthSort);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprocess._rerenderCount = 0;\r\n}\r\n\r\nprocess._rerenderCount = 0;\r\n"
        ],
        [
            "src/constants.js",
            "/** Normal hydration that attaches to a DOM tree but does not diff it. */\r\nexport const MODE_HYDRATE = 1 << 5;\r\n/** Signifies this VNode suspended on the previous render */\r\nexport const MODE_SUSPENDED = 1 << 7;\r\n/** Indicates that this node needs to be inserted while patching children */\r\nexport const INSERT_VNODE = 1 << 16;\r\n/** Indicates a VNode has been matched with another VNode in the diff */\r\nexport const MATCHED = 1 << 17;\r\n\r\n/** Reset all mode flags */\r\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\r\n\r\nexport const EMPTY_OBJ = /** @type {any} */ ({});\r\nexport const EMPTY_ARR = [];\r\nexport const IS_NON_DIMENSIONAL =\r\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\r\n"
        ],
        [
            "src/diff/index.js",
            "import {\r\n\tEMPTY_OBJ,\r\n\tMODE_HYDRATE,\r\n\tMODE_SUSPENDED,\r\n\tRESET_MODE\r\n} from '../constants';\r\nimport { BaseComponent, getDomSibling } from '../component';\r\nimport { Fragment } from '../create-element';\r\nimport { diffChildren } from './children';\r\nimport { setProperty } from './props';\r\nimport { assign, isArray, removeNode, slice } from '../util';\r\nimport options from '../options';\r\n\r\n/**\r\n * Diff two virtual nodes and apply proper changes to the DOM\r\n * @param {PreactElement} parentDom The parent of the DOM element\r\n * @param {VNode} newVNode The new virtual node\r\n * @param {VNode} oldVNode The old virtual node\r\n * @param {object} globalContext The current context object. Modified by\r\n * getChildContext\r\n * @param {boolean} isSvg Whether or not this element is an SVG node\r\n * @param {Array<PreactElement>} excessDomChildren\r\n * @param {Array<Component>} commitQueue List of components which have callbacks\r\n * to invoke in commitRoot\r\n * @param {PreactElement} oldDom The current attached DOM element any new dom\r\n * elements should be placed around. Likely `null` on first render (except when\r\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\r\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\r\n * @param {boolean} isHydrating Whether or not we are in hydration\r\n * @param {any[]} refQueue an array of elements needed to invoke refs\r\n */\r\nexport function diff(\r\n\tparentDom,\r\n\tnewVNode,\r\n\toldVNode,\r\n\tglobalContext,\r\n\tisSvg,\r\n\texcessDomChildren,\r\n\tcommitQueue,\r\n\toldDom,\r\n\tisHydrating,\r\n\trefQueue\r\n) {\r\n\t/** @type {any} */\r\n\tlet tmp,\r\n\t\tnewType = newVNode.type;\r\n\r\n\t// When passing through createElement it assigns the object\r\n\t// constructor as undefined. This to prevent JSON-injection.\r\n\tif (newVNode.constructor !== undefined) return null;\r\n\r\n\t// If the previous diff bailed out, resume creating/hydrating.\r\n\tif (oldVNode._flags & MODE_SUSPENDED) {\r\n\t\tisHydrating = !!(oldVNode._flags & MODE_HYDRATE);\r\n\t\toldDom = newVNode._dom = oldVNode._dom;\r\n\t\texcessDomChildren = [oldDom];\r\n\t}\r\n\r\n\tif ((tmp = options._diff)) tmp(newVNode);\r\n\r\n\touter: if (typeof newType == 'function') {\r\n\t\ttry {\r\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\r\n\t\t\tlet newProps = newVNode.props;\r\n\r\n\t\t\t// Necessary for createContext api. Setting this property will pass\r\n\t\t\t// the context value as `this.context` just for this component.\r\n\t\t\ttmp = newType.contextType;\r\n\t\t\tlet provider = tmp && globalContext[tmp._id];\r\n\t\t\tlet componentContext = tmp\r\n\t\t\t\t? provider\r\n\t\t\t\t\t? provider.props.value\r\n\t\t\t\t\t: tmp._defaultValue\r\n\t\t\t\t: globalContext;\r\n\r\n\t\t\t// Get component and set it to `c`\r\n\t\t\tif (oldVNode._component) {\r\n\t\t\t\tc = newVNode._component = oldVNode._component;\r\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\r\n\t\t\t} else {\r\n\t\t\t\t// Instantiate the new component\r\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\r\n\t\t\t\t\t// @ts-expect-error The check above verifies that newType is suppose to be constructed\r\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// @ts-expect-error Trust me, Component implements the interface we want\r\n\t\t\t\t\tnewVNode._component = c = new BaseComponent(\r\n\t\t\t\t\t\tnewProps,\r\n\t\t\t\t\t\tcomponentContext\r\n\t\t\t\t\t);\r\n\t\t\t\t\tc.constructor = newType;\r\n\t\t\t\t\tc.render = doRender;\r\n\t\t\t\t}\r\n\t\t\t\tif (provider) provider.sub(c);\r\n\r\n\t\t\t\tc.props = newProps;\r\n\t\t\t\tif (!c.state) c.state = {};\r\n\t\t\t\tc.context = componentContext;\r\n\t\t\t\tc._globalContext = globalContext;\r\n\t\t\t\tisNew = c._dirty = true;\r\n\t\t\t\tc._renderCallbacks = [];\r\n\t\t\t\tc._stateCallbacks = [];\r\n\t\t\t}\r\n\r\n\t\t\t// Invoke getDerivedStateFromProps\r\n\t\t\tif (c._nextState == null) {\r\n\t\t\t\tc._nextState = c.state;\r\n\t\t\t}\r\n\r\n\t\t\tif (newType.getDerivedStateFromProps != null) {\r\n\t\t\t\tif (c._nextState == c.state) {\r\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tassign(\r\n\t\t\t\t\tc._nextState,\r\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\toldProps = c.props;\r\n\t\t\toldState = c.state;\r\n\t\t\tc._vnode = newVNode;\r\n\r\n\t\t\t// Invoke pre-render lifecycle methods\r\n\t\t\tif (isNew) {\r\n\t\t\t\tif (\r\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\r\n\t\t\t\t\tc.componentWillMount != null\r\n\t\t\t\t) {\r\n\t\t\t\t\tc.componentWillMount();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (c.componentDidMount != null) {\r\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (\r\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\r\n\t\t\t\t\tnewProps !== oldProps &&\r\n\t\t\t\t\tc.componentWillReceiveProps != null\r\n\t\t\t\t) {\r\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\t!c._force &&\r\n\t\t\t\t\t((c.shouldComponentUpdate != null &&\r\n\t\t\t\t\t\tc.shouldComponentUpdate(\r\n\t\t\t\t\t\t\tnewProps,\r\n\t\t\t\t\t\t\tc._nextState,\r\n\t\t\t\t\t\t\tcomponentContext\r\n\t\t\t\t\t\t) === false) ||\r\n\t\t\t\t\t\tnewVNode._original === oldVNode._original)\r\n\t\t\t\t) {\r\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\r\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\r\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\r\n\t\t\t\t\t\t// the props, state and dirty-state.\r\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\r\n\t\t\t\t\t\t// be dirtied see #3883\r\n\t\t\t\t\t\tc.props = newProps;\r\n\t\t\t\t\t\tc.state = c._nextState;\r\n\t\t\t\t\t\tc._dirty = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\r\n\t\t\t\t\tnewVNode._children = oldVNode._children;\r\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\r\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\r\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tc._stateCallbacks = [];\r\n\r\n\t\t\t\t\tif (c._renderCallbacks.length) {\r\n\t\t\t\t\t\tcommitQueue.push(c);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak outer;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (c.componentWillUpdate != null) {\r\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (c.componentDidUpdate != null) {\r\n\t\t\t\t\tc._renderCallbacks.push(() => {\r\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tc.context = componentContext;\r\n\t\t\tc.props = newProps;\r\n\t\t\tc._parentDom = parentDom;\r\n\t\t\tc._force = false;\r\n\r\n\t\t\tlet renderHook = options._render,\r\n\t\t\t\tcount = 0;\r\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\r\n\t\t\t\tc.state = c._nextState;\r\n\t\t\t\tc._dirty = false;\r\n\r\n\t\t\t\tif (renderHook) renderHook(newVNode);\r\n\r\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\r\n\r\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\r\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\r\n\t\t\t\t}\r\n\t\t\t\tc._stateCallbacks = [];\r\n\t\t\t} else {\r\n\t\t\t\tdo {\r\n\t\t\t\t\tc._dirty = false;\r\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\r\n\r\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\r\n\r\n\t\t\t\t\t// Handle setState called in render, see #2553\r\n\t\t\t\t\tc.state = c._nextState;\r\n\t\t\t\t} while (c._dirty && ++count < 25);\r\n\t\t\t}\r\n\r\n\t\t\t// Handle setState called in render, see #2553\r\n\t\t\tc.state = c._nextState;\r\n\r\n\t\t\tif (c.getChildContext != null) {\r\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\r\n\t\t\t}\r\n\r\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\r\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\r\n\t\t\t}\r\n\r\n\t\t\tlet isTopLevelFragment =\r\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\r\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\r\n\r\n\t\t\tdiffChildren(\r\n\t\t\t\tparentDom,\r\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\r\n\t\t\t\tnewVNode,\r\n\t\t\t\toldVNode,\r\n\t\t\t\tglobalContext,\r\n\t\t\t\tisSvg,\r\n\t\t\t\texcessDomChildren,\r\n\t\t\t\tcommitQueue,\r\n\t\t\t\toldDom,\r\n\t\t\t\tisHydrating,\r\n\t\t\t\trefQueue\r\n\t\t\t);\r\n\r\n\t\t\tc.base = newVNode._dom;\r\n\r\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\r\n\t\t\tnewVNode._flags &= RESET_MODE;\r\n\r\n\t\t\tif (c._renderCallbacks.length) {\r\n\t\t\t\tcommitQueue.push(c);\r\n\t\t\t}\r\n\r\n\t\t\tif (clearProcessingException) {\r\n\t\t\t\tc._pendingError = c._processingException = null;\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tnewVNode._original = null;\r\n\t\t\t// if hydrating or creating initial tree, bailout preserves DOM:\r\n\t\t\tif (isHydrating || excessDomChildren != null) {\r\n\t\t\t\tnewVNode._dom = oldDom;\r\n\t\t\t\tnewVNode._flags |= isHydrating\r\n\t\t\t\t\t? MODE_HYDRATE | MODE_SUSPENDED\r\n\t\t\t\t\t: MODE_HYDRATE;\r\n\t\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\r\n\t\t\t\t// ^ could possibly be simplified to:\r\n\t\t\t\t// excessDomChildren.length = 0;\r\n\t\t\t} else {\r\n\t\t\t\tnewVNode._dom = oldVNode._dom;\r\n\t\t\t\tnewVNode._children = oldVNode._children;\r\n\t\t\t}\r\n\t\t\toptions._catchError(e, newVNode, oldVNode);\r\n\t\t}\r\n\t} else if (\r\n\t\texcessDomChildren == null &&\r\n\t\tnewVNode._original === oldVNode._original\r\n\t) {\r\n\t\tnewVNode._children = oldVNode._children;\r\n\t\tnewVNode._dom = oldVNode._dom;\r\n\t} else {\r\n\t\tnewVNode._dom = diffElementNodes(\r\n\t\t\toldVNode._dom,\r\n\t\t\tnewVNode,\r\n\t\t\toldVNode,\r\n\t\t\tglobalContext,\r\n\t\t\tisSvg,\r\n\t\t\texcessDomChildren,\r\n\t\t\tcommitQueue,\r\n\t\t\tisHydrating,\r\n\t\t\trefQueue\r\n\t\t);\r\n\t}\r\n\r\n\tif ((tmp = options.diffed)) tmp(newVNode);\r\n}\r\n\r\n/**\r\n * @param {Array<Component>} commitQueue List of components\r\n * which have callbacks to invoke in commitRoot\r\n * @param {VNode} root\r\n */\r\nexport function commitRoot(commitQueue, root, refQueue) {\r\n\troot._nextDom = undefined;\r\n\r\n\tfor (let i = 0; i < refQueue.length; i++) {\r\n\t\tapplyRef(refQueue[i], refQueue[++i], refQueue[++i]);\r\n\t}\r\n\r\n\tif (options._commit) options._commit(root, commitQueue);\r\n\r\n\tcommitQueue.some(c => {\r\n\t\ttry {\r\n\t\t\t// @ts-expect-error Reuse the commitQueue variable here so the type changes\r\n\t\t\tcommitQueue = c._renderCallbacks;\r\n\t\t\tc._renderCallbacks = [];\r\n\t\t\tcommitQueue.some(cb => {\r\n\t\t\t\t// @ts-expect-error See above comment on commitQueue\r\n\t\t\t\tcb.call(c);\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\toptions._catchError(e, c._vnode);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * Diff two virtual nodes representing DOM element\r\n * @param {PreactElement} dom The DOM element representing the virtual nodes\r\n * being diffed\r\n * @param {VNode} newVNode The new virtual node\r\n * @param {VNode} oldVNode The old virtual node\r\n * @param {object} globalContext The current context object\r\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\r\n * @param {Array<PreactElement>} excessDomChildren\r\n * @param {Array<Component>} commitQueue List of components which have callbacks\r\n * to invoke in commitRoot\r\n * @param {boolean} isHydrating Whether or not we are in hydration\r\n * @param {any[]} refQueue an array of elements needed to invoke refs\r\n * @returns {PreactElement}\r\n */\r\nfunction diffElementNodes(\r\n\tdom,\r\n\tnewVNode,\r\n\toldVNode,\r\n\tglobalContext,\r\n\tisSvg,\r\n\texcessDomChildren,\r\n\tcommitQueue,\r\n\tisHydrating,\r\n\trefQueue\r\n) {\r\n\tlet oldProps = oldVNode.props;\r\n\tlet newProps = newVNode.props;\r\n\tlet nodeType = /** @type {string} */ (newVNode.type);\r\n\t/** @type {any} */\r\n\tlet i;\r\n\t/** @type {{ __html?: string }} */\r\n\tlet newHtml;\r\n\t/** @type {{ __html?: string }} */\r\n\tlet oldHtml;\r\n\t/** @type {ComponentChildren} */\r\n\tlet newChildren;\r\n\tlet value;\r\n\tlet inputValue;\r\n\tlet checked;\r\n\r\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\r\n\tif (nodeType === 'svg') isSvg = true;\r\n\r\n\tif (excessDomChildren != null) {\r\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\r\n\t\t\tvalue = excessDomChildren[i];\r\n\r\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\r\n\t\t\t// argument matches an element in excessDomChildren, remove it from\r\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\r\n\t\t\tif (\r\n\t\t\t\tvalue &&\r\n\t\t\t\t'setAttribute' in value === !!nodeType &&\r\n\t\t\t\t(nodeType ? value.localName === nodeType : value.nodeType === 3)\r\n\t\t\t) {\r\n\t\t\t\tdom = value;\r\n\t\t\t\texcessDomChildren[i] = null;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (dom == null) {\r\n\t\tif (nodeType === null) {\r\n\t\t\treturn document.createTextNode(newProps);\r\n\t\t}\r\n\r\n\t\tif (isSvg) {\r\n\t\t\tdom = document.createElementNS('http://www.w3.org/2000/svg', nodeType);\r\n\t\t} else {\r\n\t\t\tdom = document.createElement(nodeType, newProps.is && newProps);\r\n\t\t}\r\n\r\n\t\t// we created a new parent, so none of the previously attached children can be reused:\r\n\t\texcessDomChildren = null;\r\n\t\t// we are creating a new node, so we can assume this is a new subtree (in\r\n\t\t// case we are hydrating), this deopts the hydrate\r\n\t\tisHydrating = false;\r\n\t}\r\n\r\n\tif (nodeType === null) {\r\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\r\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\r\n\t\t\tdom.data = newProps;\r\n\t\t}\r\n\t} else {\r\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\r\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\r\n\r\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\r\n\r\n\t\t// If we are in a situation where we are not hydrating but are using\r\n\t\t// existing DOM (e.g. replaceNode) we should read the existing DOM\r\n\t\t// attributes to diff them\r\n\t\tif (!isHydrating && excessDomChildren != null) {\r\n\t\t\toldProps = {};\r\n\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\r\n\t\t\t\tvalue = dom.attributes[i];\r\n\t\t\t\toldProps[value.name] = value.value;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (i in oldProps) {\r\n\t\t\tvalue = oldProps[i];\r\n\t\t\tif (i == 'children') {\r\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\r\n\t\t\t\toldHtml = value;\r\n\t\t\t} else if (i !== 'key' && !(i in newProps)) {\r\n\t\t\t\tsetProperty(dom, i, null, value, isSvg);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\r\n\t\t// @TODO we should warn in debug mode when props don't match here.\r\n\t\tfor (i in newProps) {\r\n\t\t\tvalue = newProps[i];\r\n\t\t\tif (i == 'children') {\r\n\t\t\t\tnewChildren = value;\r\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\r\n\t\t\t\tnewHtml = value;\r\n\t\t\t} else if (i == 'value') {\r\n\t\t\t\tinputValue = value;\r\n\t\t\t} else if (i == 'checked') {\r\n\t\t\t\tchecked = value;\r\n\t\t\t} else if (\r\n\t\t\t\ti !== 'key' &&\r\n\t\t\t\t(!isHydrating || typeof value == 'function') &&\r\n\t\t\t\toldProps[i] !== value\r\n\t\t\t) {\r\n\t\t\t\tsetProperty(dom, i, value, oldProps[i], isSvg);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\r\n\t\tif (newHtml) {\r\n\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\r\n\t\t\tif (\r\n\t\t\t\t!isHydrating &&\r\n\t\t\t\t(!oldHtml ||\r\n\t\t\t\t\t(newHtml.__html !== oldHtml.__html &&\r\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML))\r\n\t\t\t) {\r\n\t\t\t\tdom.innerHTML = newHtml.__html;\r\n\t\t\t}\r\n\r\n\t\t\tnewVNode._children = [];\r\n\t\t} else {\r\n\t\t\tif (oldHtml) dom.innerHTML = '';\r\n\r\n\t\t\tdiffChildren(\r\n\t\t\t\tdom,\r\n\t\t\t\tisArray(newChildren) ? newChildren : [newChildren],\r\n\t\t\t\tnewVNode,\r\n\t\t\t\toldVNode,\r\n\t\t\t\tglobalContext,\r\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\r\n\t\t\t\texcessDomChildren,\r\n\t\t\t\tcommitQueue,\r\n\t\t\t\texcessDomChildren\r\n\t\t\t\t\t? excessDomChildren[0]\r\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\r\n\t\t\t\tisHydrating,\r\n\t\t\t\trefQueue\r\n\t\t\t);\r\n\r\n\t\t\t// Remove children that are not part of any vnode.\r\n\t\t\tif (excessDomChildren != null) {\r\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\r\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// As above, don't diff props during hydration\r\n\t\tif (!isHydrating) {\r\n\t\t\ti = 'value';\r\n\t\t\tif (\r\n\t\t\t\tinputValue !== undefined &&\r\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\r\n\t\t\t\t// despite the attribute not being present. When the attribute\r\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\r\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\r\n\t\t\t\t(inputValue !== dom[i] ||\r\n\t\t\t\t\t(nodeType === 'progress' && !inputValue) ||\r\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\r\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\r\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\r\n\t\t\t\t\t(nodeType === 'option' && inputValue !== oldProps[i]))\r\n\t\t\t) {\r\n\t\t\t\tsetProperty(dom, i, inputValue, oldProps[i], false);\r\n\t\t\t}\r\n\r\n\t\t\ti = 'checked';\r\n\t\t\tif (checked !== undefined && checked !== dom[i]) {\r\n\t\t\t\tsetProperty(dom, i, checked, oldProps[i], false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn dom;\r\n}\r\n\r\n/**\r\n * Invoke or update a ref, depending on whether it is a function or object ref.\r\n * @param {Ref<any>} ref\r\n * @param {any} value\r\n * @param {VNode} vnode\r\n */\r\nexport function applyRef(ref, value, vnode) {\r\n\ttry {\r\n\t\tif (typeof ref == 'function') ref(value);\r\n\t\telse ref.current = value;\r\n\t} catch (e) {\r\n\t\toptions._catchError(e, vnode);\r\n\t}\r\n}\r\n\r\n/**\r\n * Unmount a virtual node from the tree and apply DOM changes\r\n * @param {VNode} vnode The virtual node to unmount\r\n * @param {VNode} parentVNode The parent of the VNode that initiated the unmount\r\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\r\n * current element is already detached from the DOM.\r\n */\r\nexport function unmount(vnode, parentVNode, skipRemove) {\r\n\tlet r;\r\n\tif (options.unmount) options.unmount(vnode);\r\n\r\n\tif ((r = vnode.ref)) {\r\n\t\tif (!r.current || r.current === vnode._dom) {\r\n\t\t\tapplyRef(r, null, parentVNode);\r\n\t\t}\r\n\t}\r\n\r\n\tif ((r = vnode._component) != null) {\r\n\t\tif (r.componentWillUnmount) {\r\n\t\t\ttry {\r\n\t\t\t\tr.componentWillUnmount();\r\n\t\t\t} catch (e) {\r\n\t\t\t\toptions._catchError(e, parentVNode);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tr.base = r._parentDom = null;\r\n\t\tvnode._component = undefined;\r\n\t}\r\n\r\n\tif ((r = vnode._children)) {\r\n\t\tfor (let i = 0; i < r.length; i++) {\r\n\t\t\tif (r[i]) {\r\n\t\t\t\tunmount(\r\n\t\t\t\t\tr[i],\r\n\t\t\t\t\tparentVNode,\r\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (!skipRemove && vnode._dom != null) {\r\n\t\tremoveNode(vnode._dom);\r\n\t}\r\n\r\n\t// Must be set to `undefined` to properly clean up `_nextDom`\r\n\t// for which `null` is a valid value. See comment in `create-element.js`\r\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\r\n}\r\n\r\n/** The `.render()` method for a PFC backing instance. */\r\nfunction doRender(props, state, context) {\r\n\treturn this.constructor(props, context);\r\n}\r\n"
        ],
        [
            "src/index.d.ts",
            "export as namespace preact;\r\n\r\nimport { JSXInternal } from './jsx';\r\n\r\nexport import JSX = JSXInternal;\r\n\r\n//\r\n// Preact Virtual DOM\r\n// -----------------------------------\r\n\r\nexport interface VNode<P = {}> {\r\n\ttype: ComponentType<P> | string;\r\n\tprops: P & { children: ComponentChildren };\r\n\tkey: Key;\r\n\t/**\r\n\t * ref is not guaranteed by React.ReactElement, for compatibility reasons\r\n\t * with popular react libs we define it as optional too\r\n\t */\r\n\tref?: Ref<any> | null;\r\n\t/**\r\n\t * The time this `vnode` started rendering. Will only be set when\r\n\t * the devtools are attached.\r\n\t * Default value: `0`\r\n\t */\r\n\tstartTime?: number;\r\n\t/**\r\n\t * The time that the rendering of this `vnode` was completed. Will only be\r\n\t * set when the devtools are attached.\r\n\t * Default value: `-1`\r\n\t */\r\n\tendTime?: number;\r\n}\r\n\r\n//\r\n// Preact Component interface\r\n// -----------------------------------\r\n\r\nexport type Key = string | number | any;\r\n\r\nexport type RefObject<T> = { current: T | null };\r\nexport type RefCallback<T> = (instance: T | null) => void;\r\nexport type Ref<T> = RefObject<T> | RefCallback<T> | null;\r\n\r\nexport type ComponentChild =\r\n\t| VNode<any>\r\n\t| object\r\n\t| string\r\n\t| number\r\n\t| bigint\r\n\t| boolean\r\n\t| null\r\n\t| undefined;\r\nexport type ComponentChildren = ComponentChild[] | ComponentChild;\r\n\r\nexport interface Attributes {\r\n\tkey?: Key | undefined;\r\n\tjsx?: boolean | undefined;\r\n}\r\n\r\nexport interface ClassAttributes<T> extends Attributes {\r\n\tref?: Ref<T>;\r\n}\r\n\r\nexport interface PreactDOMAttributes {\r\n\tchildren?: ComponentChildren;\r\n\tdangerouslySetInnerHTML?: {\r\n\t\t__html: string;\r\n\t};\r\n}\r\n\r\nexport interface ErrorInfo {\r\n\tcomponentStack?: string;\r\n}\r\n\r\nexport type RenderableProps<P, RefType = any> = P &\r\n\tReadonly<Attributes & { children?: ComponentChildren; ref?: Ref<RefType> }>;\r\n\r\nexport type ComponentType<P = {}> = ComponentClass<P> | FunctionComponent<P>;\r\nexport type ComponentFactory<P = {}> = ComponentType<P>;\r\n\r\nexport type ComponentProps<\r\n\tC extends ComponentType<any> | keyof JSXInternal.IntrinsicElements\r\n> = C extends ComponentType<infer P>\r\n\t? P\r\n\t: C extends keyof JSXInternal.IntrinsicElements\r\n\t? JSXInternal.IntrinsicElements[C]\r\n\t: never;\r\n\r\nexport interface FunctionComponent<P = {}> {\r\n\t(props: RenderableProps<P>, context?: any): VNode<any> | null;\r\n\tdisplayName?: string;\r\n\tdefaultProps?: Partial<P> | undefined;\r\n}\r\nexport interface FunctionalComponent<P = {}> extends FunctionComponent<P> {}\r\n\r\nexport interface ComponentClass<P = {}, S = {}> {\r\n\tnew (props: P, context?: any): Component<P, S>;\r\n\tdisplayName?: string;\r\n\tdefaultProps?: Partial<P>;\r\n\tcontextType?: Context<any>;\r\n\tgetDerivedStateFromProps?(\r\n\t\tprops: Readonly<P>,\r\n\t\tstate: Readonly<S>\r\n\t): Partial<S> | null;\r\n\tgetDerivedStateFromError?(error: any): Partial<S> | null;\r\n}\r\nexport interface ComponentConstructor<P = {}, S = {}>\r\n\textends ComponentClass<P, S> {}\r\n\r\n// Type alias for a component instance considered generally, whether stateless or stateful.\r\nexport type AnyComponent<P = {}, S = {}> =\r\n\t| FunctionComponent<P>\r\n\t| Component<P, S>;\r\n\r\nexport interface Component<P = {}, S = {}> {\r\n\tcomponentWillMount?(): void;\r\n\tcomponentDidMount?(): void;\r\n\tcomponentWillUnmount?(): void;\r\n\tgetChildContext?(): object;\r\n\tcomponentWillReceiveProps?(nextProps: Readonly<P>, nextContext: any): void;\r\n\tshouldComponentUpdate?(\r\n\t\tnextProps: Readonly<P>,\r\n\t\tnextState: Readonly<S>,\r\n\t\tnextContext: any\r\n\t): boolean;\r\n\tcomponentWillUpdate?(\r\n\t\tnextProps: Readonly<P>,\r\n\t\tnextState: Readonly<S>,\r\n\t\tnextContext: any\r\n\t): void;\r\n\tgetSnapshotBeforeUpdate?(oldProps: Readonly<P>, oldState: Readonly<S>): any;\r\n\tcomponentDidUpdate?(\r\n\t\tpreviousProps: Readonly<P>,\r\n\t\tpreviousState: Readonly<S>,\r\n\t\tsnapshot: any\r\n\t): void;\r\n\tcomponentDidCatch?(error: any, errorInfo: ErrorInfo): void;\r\n}\r\n\r\nexport abstract class Component<P, S> {\r\n\tconstructor(props?: P, context?: any);\r\n\r\n\tstatic displayName?: string;\r\n\tstatic defaultProps?: any;\r\n\tstatic contextType?: Context<any>;\r\n\r\n\t// Static members cannot reference class type parameters. This is not\r\n\t// supported in TypeScript. Reusing the same type arguments from `Component`\r\n\t// will lead to an impossible state where one cannot satisfy the type\r\n\t// constraint under no circumstances, see #1356.In general type arguments\r\n\t// seem to be a bit buggy and not supported well at the time of this\r\n\t// writing with TS 3.3.3333.\r\n\tstatic getDerivedStateFromProps?(\r\n\t\tprops: Readonly<object>,\r\n\t\tstate: Readonly<object>\r\n\t): object | null;\r\n\tstatic getDerivedStateFromError?(error: any): object | null;\r\n\r\n\tstate: Readonly<S>;\r\n\tprops: RenderableProps<P>;\r\n\tcontext: any;\r\n\tbase?: Element | Text;\r\n\r\n\t// From https://github.com/DefinitelyTyped/DefinitelyTyped/blob/e836acc75a78cf0655b5dfdbe81d69fdd4d8a252/types/react/index.d.ts#L402\r\n\t// // We MUST keep setState() as a unified signature because it allows proper checking of the method return type.\r\n\t// // See: https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18365#issuecomment-351013257\r\n\tsetState<K extends keyof S>(\r\n\t\tstate:\r\n\t\t\t| ((\r\n\t\t\t\t\tprevState: Readonly<S>,\r\n\t\t\t\t\tprops: Readonly<P>\r\n\t\t\t  ) => Pick<S, K> | Partial<S> | null)\r\n\t\t\t| (Pick<S, K> | Partial<S> | null),\r\n\t\tcallback?: () => void\r\n\t): void;\r\n\r\n\tforceUpdate(callback?: () => void): void;\r\n\r\n\tabstract render(\r\n\t\tprops?: RenderableProps<P>,\r\n\t\tstate?: Readonly<S>,\r\n\t\tcontext?: any\r\n\t): ComponentChild;\r\n}\r\n\r\n//\r\n// Preact createElement\r\n// -----------------------------------\r\n\r\nexport function createElement(\r\n\ttype: 'input',\r\n\tprops:\r\n\t\t| (JSXInternal.DOMAttributes<HTMLInputElement> &\r\n\t\t\t\tClassAttributes<HTMLInputElement>)\r\n\t\t| null,\r\n\t...children: ComponentChildren[]\r\n): VNode<\r\n\t| JSXInternal.DOMAttributes<HTMLInputElement> &\r\n\t\t\tClassAttributes<HTMLInputElement>\r\n>;\r\nexport function createElement<\r\n\tP extends JSXInternal.HTMLAttributes<T>,\r\n\tT extends HTMLElement\r\n>(\r\n\ttype: keyof JSXInternal.IntrinsicElements,\r\n\tprops: (ClassAttributes<T> & P) | null,\r\n\t...children: ComponentChildren[]\r\n): VNode<ClassAttributes<T> & P>;\r\nexport function createElement<\r\n\tP extends JSXInternal.SVGAttributes<T>,\r\n\tT extends HTMLElement\r\n>(\r\n\ttype: keyof JSXInternal.IntrinsicElements,\r\n\tprops: (ClassAttributes<T> & P) | null,\r\n\t...children: ComponentChildren[]\r\n): VNode<ClassAttributes<T> & P>;\r\nexport function createElement<T extends HTMLElement>(\r\n\ttype: string,\r\n\tprops:\r\n\t\t| (ClassAttributes<T> &\r\n\t\t\t\tJSXInternal.HTMLAttributes &\r\n\t\t\t\tJSXInternal.SVGAttributes)\r\n\t\t| null,\r\n\t...children: ComponentChildren[]\r\n): VNode<\r\n\tClassAttributes<T> & JSXInternal.HTMLAttributes & JSXInternal.SVGAttributes\r\n>;\r\nexport function createElement<P>(\r\n\ttype: ComponentType<P>,\r\n\tprops: (Attributes & P) | null,\r\n\t...children: ComponentChildren[]\r\n): VNode<P>;\r\nexport namespace createElement {\r\n\texport import JSX = JSXInternal;\r\n}\r\n\r\nexport function h(\r\n\ttype: 'input',\r\n\tprops:\r\n\t\t| (JSXInternal.DOMAttributes<HTMLInputElement> &\r\n\t\t\t\tClassAttributes<HTMLInputElement>)\r\n\t\t| null,\r\n\t...children: ComponentChildren[]\r\n): VNode<\r\n\t| JSXInternal.DOMAttributes<HTMLInputElement> &\r\n\t\t\tClassAttributes<HTMLInputElement>\r\n>;\r\nexport function h<\r\n\tP extends JSXInternal.HTMLAttributes<T>,\r\n\tT extends HTMLElement\r\n>(\r\n\ttype: keyof JSXInternal.IntrinsicElements,\r\n\tprops: (ClassAttributes<T> & P) | null,\r\n\t...children: ComponentChildren[]\r\n): VNode<ClassAttributes<T> & P>;\r\nexport function h<\r\n\tP extends JSXInternal.SVGAttributes<T>,\r\n\tT extends HTMLElement\r\n>(\r\n\ttype: keyof JSXInternal.IntrinsicElements,\r\n\tprops: (ClassAttributes<T> & P) | null,\r\n\t...children: ComponentChildren[]\r\n): VNode<ClassAttributes<T> & P>;\r\nexport function h<T extends HTMLElement>(\r\n\ttype: string,\r\n\tprops:\r\n\t\t| (ClassAttributes<T> &\r\n\t\t\t\tJSXInternal.HTMLAttributes &\r\n\t\t\t\tJSXInternal.SVGAttributes)\r\n\t\t| null,\r\n\t...children: ComponentChildren[]\r\n): VNode<\r\n\t| (ClassAttributes<T> &\r\n\t\t\tJSXInternal.HTMLAttributes &\r\n\t\t\tJSXInternal.SVGAttributes)\r\n\t| null\r\n>;\r\nexport function h<P>(\r\n\ttype: ComponentType<P>,\r\n\tprops: (Attributes & P) | null,\r\n\t...children: ComponentChildren[]\r\n): VNode<Attributes & P>;\r\nexport namespace h {\r\n\texport import JSX = JSXInternal;\r\n}\r\n\r\n//\r\n// Preact render\r\n// -----------------------------------\r\ninterface ContainerNode {\r\n\treadonly nodeType: number;\r\n\treadonly parentNode: ContainerNode | null;\r\n\treadonly firstChild: ContainerNode | null;\r\n\treadonly childNodes: ArrayLike<ContainerNode>;\r\n\r\n\tinsertBefore(node: ContainerNode, child: ContainerNode | null): ContainerNode;\r\n\tappendChild(node: ContainerNode): ContainerNode;\r\n\tremoveChild(child: ContainerNode): ContainerNode;\r\n}\r\n\r\nexport function render(vnode: ComponentChild, parent: ContainerNode): void;\r\n/**\r\n * @deprecated Will be removed in v11.\r\n *\r\n * Replacement Preact 10+ implementation can be found here: https://gist.github.com/developit/f4c67a2ede71dc2fab7f357f39cff28c\r\n */\r\nexport function render(\r\n\tvnode: ComponentChild,\r\n\tparent: ContainerNode,\r\n\treplaceNode?: Element | Text\r\n): void;\r\nexport function hydrate(vnode: ComponentChild, parent: ContainerNode): void;\r\nexport function cloneElement(\r\n\tvnode: VNode<any>,\r\n\tprops?: any,\r\n\t...children: ComponentChildren[]\r\n): VNode<any>;\r\nexport function cloneElement<P>(\r\n\tvnode: VNode<P>,\r\n\tprops?: any,\r\n\t...children: ComponentChildren[]\r\n): VNode<P>;\r\n\r\n//\r\n// Preact Built-in Components\r\n// -----------------------------------\r\n\r\n// TODO: Revisit what the public type of this is...\r\nexport const Fragment: FunctionComponent<{}>;\r\n\r\n//\r\n// Preact options\r\n// -----------------------------------\r\n\r\n/**\r\n * Global options for preact\r\n */\r\nexport interface Options {\r\n\t/** Attach a hook that is invoked whenever a VNode is created. */\r\n\tvnode?(vnode: VNode): void;\r\n\t/** Attach a hook that is invoked immediately before a vnode is unmounted. */\r\n\tunmount?(vnode: VNode): void;\r\n\t/** Attach a hook that is invoked after a vnode has rendered. */\r\n\tdiffed?(vnode: VNode): void;\r\n\tevent?(e: Event): any;\r\n\trequestAnimationFrame?(callback: () => void): void;\r\n\tdebounceRendering?(cb: () => void): void;\r\n\tuseDebugValue?(value: string | number): void;\r\n\t_addHookName?(name: string | number): void;\r\n\t__suspenseDidResolve?(vnode: VNode, cb: () => void): void;\r\n\t// __canSuspenseResolve?(vnode: VNode, cb: () => void): void;\r\n\r\n\t/**\r\n\t * Customize attribute serialization when a precompiled JSX transform\r\n\t * is used.\r\n\t */\r\n\tattr?(name: string, value: any): string | void;\r\n}\r\n\r\nexport const options: Options;\r\n\r\n//\r\n// Preact helpers\r\n// -----------------------------------\r\nexport function createRef<T = any>(): RefObject<T>;\r\nexport function toChildArray(\r\n\tchildren: ComponentChildren\r\n): Array<VNode | string | number>;\r\nexport function isValidElement(vnode: any): vnode is VNode;\r\n\r\n//\r\n// Context\r\n// -----------------------------------\r\nexport interface Consumer<T>\r\n\textends FunctionComponent<{\r\n\t\tchildren: (value: T) => ComponentChildren;\r\n\t}> {}\r\nexport interface PreactConsumer<T> extends Consumer<T> {}\r\n\r\nexport interface Provider<T>\r\n\textends FunctionComponent<{\r\n\t\tvalue: T;\r\n\t\tchildren?: ComponentChildren;\r\n\t}> {}\r\nexport interface PreactProvider<T> extends Provider<T> {}\r\nexport type ContextType<C extends Context<any>> = C extends Context<infer T>\r\n\t? T\r\n\t: never;\r\n\r\nexport interface Context<T> {\r\n\tConsumer: Consumer<T>;\r\n\tProvider: Provider<T>;\r\n\tdisplayName?: string;\r\n}\r\nexport interface PreactContext<T> extends Context<T> {}\r\n\r\nexport function createContext<T>(defaultValue: T): Context<T>;\r\n"
        ],
        [
            "src/jsx.d.ts",
            "// Users who only use Preact for SSR might not specify \"dom\" in their lib in tsconfig.json\r\n/// <reference lib=\"dom\" />\r\n\r\nimport {\r\n\tClassAttributes,\r\n\tComponent,\r\n\tComponentChild,\r\n\tComponentType,\r\n\tFunctionComponent,\r\n\tPreactDOMAttributes,\r\n\tVNode\r\n} from './index';\r\n\r\ntype Defaultize<Props, Defaults> =\r\n\t// Distribute over unions\r\n\tProps extends any // Make any properties included in Default optional\r\n\t\t? Partial<Pick<Props, Extract<keyof Props, keyof Defaults>>> & // Include the remaining properties from Props\r\n\t\t\t\tPick<Props, Exclude<keyof Props, keyof Defaults>>\r\n\t\t: never;\r\n\r\ntype Booleanish = boolean | 'true' | 'false';\r\n\r\nexport namespace JSXInternal {\r\n\texport type LibraryManagedAttributes<Component, Props> = Component extends {\r\n\t\tdefaultProps: infer Defaults;\r\n\t}\r\n\t\t? Defaultize<Props, Defaults>\r\n\t\t: Props;\r\n\r\n\texport interface IntrinsicAttributes {\r\n\t\tkey?: any;\r\n\t}\r\n\r\n\texport type ElementType<P = any> =\r\n\t\t| {\r\n\t\t\t\t[K in keyof IntrinsicElements]: P extends IntrinsicElements[K]\r\n\t\t\t\t\t? K\r\n\t\t\t\t\t: never;\r\n\t\t  }[keyof IntrinsicElements]\r\n\t\t| ComponentType<P>;\r\n\texport interface Element extends VNode<any> {}\r\n\texport type ElementClass = Component<any, any> | FunctionComponent<any>;\r\n\r\n\texport interface ElementAttributesProperty {\r\n\t\tprops: any;\r\n\t}\r\n\r\n\texport interface ElementChildrenAttribute {\r\n\t\tchildren: any;\r\n\t}\r\n\r\n\texport type DOMCSSProperties = {\r\n\t\t[key in keyof Omit<\r\n\t\t\tCSSStyleDeclaration,\r\n\t\t\t| 'item'\r\n\t\t\t| 'setProperty'\r\n\t\t\t| 'removeProperty'\r\n\t\t\t| 'getPropertyValue'\r\n\t\t\t| 'getPropertyPriority'\r\n\t\t>]?: string | number | null | undefined;\r\n\t};\r\n\texport type AllCSSProperties = {\r\n\t\t[key: string]: string | number | null | undefined;\r\n\t};\r\n\texport interface CSSProperties extends AllCSSProperties, DOMCSSProperties {\r\n\t\tcssText?: string | null;\r\n\t}\r\n\r\n\texport interface SignalLike<T> {\r\n\t\tvalue: T;\r\n\t\tpeek(): T;\r\n\t\tsubscribe(fn: (value: T) => void): () => void;\r\n\t}\r\n\r\n\texport type Signalish<T> = T | SignalLike<T>;\r\n\r\n\texport type UnpackSignal<T> = T extends SignalLike<infer V> ? V : T;\r\n\r\n\texport interface SVGAttributes<Target extends EventTarget = SVGElement>\r\n\t\textends HTMLAttributes<Target> {\r\n\t\taccentHeight?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\taccumulate?:\r\n\t\t\t| 'none'\r\n\t\t\t| 'sum'\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<'none' | 'sum' | undefined>;\r\n\t\tadditive?:\r\n\t\t\t| 'replace'\r\n\t\t\t| 'sum'\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<'replace' | 'sum' | undefined>;\r\n\t\talignmentBaseline?:\r\n\t\t\t| 'auto'\r\n\t\t\t| 'baseline'\r\n\t\t\t| 'before-edge'\r\n\t\t\t| 'text-before-edge'\r\n\t\t\t| 'middle'\r\n\t\t\t| 'central'\r\n\t\t\t| 'after-edge'\r\n\t\t\t| 'text-after-edge'\r\n\t\t\t| 'ideographic'\r\n\t\t\t| 'alphabetic'\r\n\t\t\t| 'hanging'\r\n\t\t\t| 'mathematical'\r\n\t\t\t| 'inherit'\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<\r\n\t\t\t\t\t| 'auto'\r\n\t\t\t\t\t| 'baseline'\r\n\t\t\t\t\t| 'before-edge'\r\n\t\t\t\t\t| 'text-before-edge'\r\n\t\t\t\t\t| 'middle'\r\n\t\t\t\t\t| 'central'\r\n\t\t\t\t\t| 'after-edge'\r\n\t\t\t\t\t| 'text-after-edge'\r\n\t\t\t\t\t| 'ideographic'\r\n\t\t\t\t\t| 'alphabetic'\r\n\t\t\t\t\t| 'hanging'\r\n\t\t\t\t\t| 'mathematical'\r\n\t\t\t\t\t| 'inherit'\r\n\t\t\t\t\t| undefined\r\n\t\t\t  >;\r\n\t\t'alignment-baseline'?:\r\n\t\t\t| 'auto'\r\n\t\t\t| 'baseline'\r\n\t\t\t| 'before-edge'\r\n\t\t\t| 'text-before-edge'\r\n\t\t\t| 'middle'\r\n\t\t\t| 'central'\r\n\t\t\t| 'after-edge'\r\n\t\t\t| 'text-after-edge'\r\n\t\t\t| 'ideographic'\r\n\t\t\t| 'alphabetic'\r\n\t\t\t| 'hanging'\r\n\t\t\t| 'mathematical'\r\n\t\t\t| 'inherit'\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<\r\n\t\t\t\t\t| 'auto'\r\n\t\t\t\t\t| 'baseline'\r\n\t\t\t\t\t| 'before-edge'\r\n\t\t\t\t\t| 'text-before-edge'\r\n\t\t\t\t\t| 'middle'\r\n\t\t\t\t\t| 'central'\r\n\t\t\t\t\t| 'after-edge'\r\n\t\t\t\t\t| 'text-after-edge'\r\n\t\t\t\t\t| 'ideographic'\r\n\t\t\t\t\t| 'alphabetic'\r\n\t\t\t\t\t| 'hanging'\r\n\t\t\t\t\t| 'mathematical'\r\n\t\t\t\t\t| 'inherit'\r\n\t\t\t\t\t| undefined\r\n\t\t\t  >;\r\n\t\tallowReorder?:\r\n\t\t\t| 'no'\r\n\t\t\t| 'yes'\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<'no' | 'yes' | undefined>;\r\n\t\t'allow-reorder'?:\r\n\t\t\t| 'no'\r\n\t\t\t| 'yes'\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<'no' | 'yes' | undefined>;\r\n\t\talphabetic?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tamplitude?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t/** @deprecated See https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/arabic-form */\r\n\t\tarabicForm?:\r\n\t\t\t| 'initial'\r\n\t\t\t| 'medial'\r\n\t\t\t| 'terminal'\r\n\t\t\t| 'isolated'\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<'initial' | 'medial' | 'terminal' | 'isolated' | undefined>;\r\n\t\t/** @deprecated See https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/arabic-form */\r\n\t\t'arabic-form'?:\r\n\t\t\t| 'initial'\r\n\t\t\t| 'medial'\r\n\t\t\t| 'terminal'\r\n\t\t\t| 'isolated'\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<'initial' | 'medial' | 'terminal' | 'isolated' | undefined>;\r\n\t\tascent?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tattributeName?: string | undefined | SignalLike<string | undefined>;\r\n\t\tattributeType?: string | undefined | SignalLike<string | undefined>;\r\n\t\tautoReverse?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tazimuth?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tbaseFrequency?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tbaselineShift?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'baseline-shift'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tbaseProfile?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tbbox?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tbegin?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tbias?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tby?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\tcalcMode?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tcapHeight?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'cap-height'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tclip?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tclipPath?: string | undefined | SignalLike<string | undefined>;\r\n\t\t'clip-path'?: string | undefined | SignalLike<string | undefined>;\r\n\t\tclipPathUnits?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tclipRule?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'clip-rule'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tcolorInterpolation?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'color-interpolation'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tcolorInterpolationFilters?:\r\n\t\t\t| 'auto'\r\n\t\t\t| 'sRGB'\r\n\t\t\t| 'linearRGB'\r\n\t\t\t| 'inherit'\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<'auto' | 'sRGB' | 'linearRGB' | 'inherit' | undefined>;\r\n\t\t'color-interpolation-filters'?:\r\n\t\t\t| 'auto'\r\n\t\t\t| 'sRGB'\r\n\t\t\t| 'linearRGB'\r\n\t\t\t| 'inherit'\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<'auto' | 'sRGB' | 'linearRGB' | 'inherit' | undefined>;\r\n\t\tcolorProfile?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'color-profile'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tcolorRendering?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'color-rendering'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tcontentScriptType?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'content-script-type'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tcontentStyleType?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'content-style-type'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tcursor?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tcx?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\tcy?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\td?: string | undefined | SignalLike<string | undefined>;\r\n\t\tdecelerate?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tdescent?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tdiffuseConstant?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tdirection?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tdisplay?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tdivisor?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tdominantBaseline?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'dominant-baseline'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tdur?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\tdx?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\tdy?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\tedgeMode?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\televation?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tenableBackground?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'enable-background'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tend?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\texponent?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\texternalResourcesRequired?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tfill?: string | undefined | SignalLike<string | undefined>;\r\n\t\tfillOpacity?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'fill-opacity'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tfillRule?:\r\n\t\t\t| 'nonzero'\r\n\t\t\t| 'evenodd'\r\n\t\t\t| 'inherit'\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<'nonzero' | 'evenodd' | 'inherit' | undefined>;\r\n\t\t'fill-rule'?:\r\n\t\t\t| 'nonzero'\r\n\t\t\t| 'evenodd'\r\n\t\t\t| 'inherit'\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<'nonzero' | 'evenodd' | 'inherit' | undefined>;\r\n\t\tfilter?: string | undefined | SignalLike<string | undefined>;\r\n\t\tfilterRes?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tfilterUnits?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tfloodColor?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'flood-color'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tfloodOpacity?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'flood-opacity'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tfocusable?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tfontFamily?: string | undefined | SignalLike<string | undefined>;\r\n\t\t'font-family'?: string | undefined | SignalLike<string | undefined>;\r\n\t\tfontSize?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'font-size'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tfontSizeAdjust?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'font-size-adjust'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tfontStretch?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'font-stretch'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tfontStyle?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'font-style'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tfontVariant?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'font-variant'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tfontWeight?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'font-weight'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tformat?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tfrom?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tfx?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\tfy?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\tg1?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\tg2?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\tglyphName?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'glyph-name'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tglyphOrientationHorizontal?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'glyph-orientation-horizontal'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tglyphOrientationVertical?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'glyph-orientation-vertical'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tglyphRef?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tgradientTransform?: string | undefined | SignalLike<string | undefined>;\r\n\t\tgradientUnits?: string | undefined | SignalLike<string | undefined>;\r\n\t\thanging?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\thorizAdvX?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'horiz-adv-x'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\thorizOriginX?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'horiz-origin-x'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tideographic?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\timageRendering?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'image-rendering'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tin2?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\tin?: string | undefined | SignalLike<string | undefined>;\r\n\t\tintercept?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tk1?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\tk2?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\tk3?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\tk4?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\tk?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\tkernelMatrix?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tkernelUnitLength?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tkerning?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tkeyPoints?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tkeySplines?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tkeyTimes?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tlengthAdjust?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tletterSpacing?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'letter-spacing'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tlightingColor?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'lighting-color'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tlimitingConeAngle?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tlocal?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tmarkerEnd?: string | undefined | SignalLike<string | undefined>;\r\n\t\t'marker-end'?: string | undefined | SignalLike<string | undefined>;\r\n\t\tmarkerHeight?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tmarkerMid?: string | undefined | SignalLike<string | undefined>;\r\n\t\t'marker-mid'?: string | undefined | SignalLike<string | undefined>;\r\n\t\tmarkerStart?: string | undefined | SignalLike<string | undefined>;\r\n\t\t'marker-start'?: string | undefined | SignalLike<string | undefined>;\r\n\t\tmarkerUnits?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tmarkerWidth?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tmask?: string | undefined | SignalLike<string | undefined>;\r\n\t\tmaskContentUnits?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tmaskUnits?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tmathematical?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tmode?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tnumOctaves?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\toffset?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\topacity?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\toperator?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\torder?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\torient?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\torientation?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\torigin?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\toverflow?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\toverlinePosition?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'overline-position'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\toverlineThickness?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'overline-thickness'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tpaintOrder?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'paint-order'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tpanose1?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'panose-1'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tpathLength?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tpatternContentUnits?: string | undefined | SignalLike<string | undefined>;\r\n\t\tpatternTransform?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tpatternUnits?: string | undefined | SignalLike<string | undefined>;\r\n\t\tpointerEvents?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'pointer-events'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tpoints?: string | undefined | SignalLike<string | undefined>;\r\n\t\tpointsAtX?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tpointsAtY?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tpointsAtZ?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tpreserveAlpha?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tpreserveAspectRatio?: string | undefined | SignalLike<string | undefined>;\r\n\t\tprimitiveUnits?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tr?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\tradius?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\trefX?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\trefY?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\trenderingIntent?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'rendering-intent'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\trepeatCount?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'repeat-count'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\trepeatDur?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'repeat-dur'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\trequiredExtensions?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\trequiredFeatures?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\trestart?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tresult?: string | undefined | SignalLike<string | undefined>;\r\n\t\trotate?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\trx?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\try?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\tscale?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tseed?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tshapeRendering?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'shape-rendering'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tslope?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tspacing?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tspecularConstant?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tspecularExponent?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tspeed?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tspreadMethod?: string | undefined | SignalLike<string | undefined>;\r\n\t\tstartOffset?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tstdDeviation?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tstemh?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tstemv?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tstitchTiles?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tstopColor?: string | undefined | SignalLike<string | undefined>;\r\n\t\t'stop-color'?: string | undefined | SignalLike<string | undefined>;\r\n\t\tstopOpacity?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'stop-opacity'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tstrikethroughPosition?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'strikethrough-position'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tstrikethroughThickness?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'strikethrough-thickness'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tstring?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tstroke?: string | undefined | SignalLike<string | undefined>;\r\n\t\tstrokeDasharray?:\r\n\t\t\t| string\r\n\t\t\t| number\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'stroke-dasharray'?:\r\n\t\t\t| string\r\n\t\t\t| number\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tstrokeDashoffset?:\r\n\t\t\t| string\r\n\t\t\t| number\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'stroke-dashoffset'?:\r\n\t\t\t| string\r\n\t\t\t| number\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tstrokeLinecap?:\r\n\t\t\t| 'butt'\r\n\t\t\t| 'round'\r\n\t\t\t| 'square'\r\n\t\t\t| 'inherit'\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<'butt' | 'round' | 'square' | 'inherit' | undefined>;\r\n\t\t'stroke-linecap'?:\r\n\t\t\t| 'butt'\r\n\t\t\t| 'round'\r\n\t\t\t| 'square'\r\n\t\t\t| 'inherit'\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<'butt' | 'round' | 'square' | 'inherit' | undefined>;\r\n\t\tstrokeLinejoin?:\r\n\t\t\t| 'miter'\r\n\t\t\t| 'round'\r\n\t\t\t| 'bevel'\r\n\t\t\t| 'inherit'\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<'miter' | 'round' | 'bevel' | 'inherit' | undefined>;\r\n\t\t'stroke-linejoin'?:\r\n\t\t\t| 'miter'\r\n\t\t\t| 'round'\r\n\t\t\t| 'bevel'\r\n\t\t\t| 'inherit'\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<'miter' | 'round' | 'bevel' | 'inherit' | undefined>;\r\n\t\tstrokeMiterlimit?:\r\n\t\t\t| string\r\n\t\t\t| number\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'stroke-miterlimit'?:\r\n\t\t\t| string\r\n\t\t\t| number\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tstrokeOpacity?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'stroke-opacity'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tstrokeWidth?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'stroke-width'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tsurfaceScale?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tsystemLanguage?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\ttableValues?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\ttargetX?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\ttargetY?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\ttextAnchor?: string | undefined | SignalLike<string | undefined>;\r\n\t\t'text-anchor'?: string | undefined | SignalLike<string | undefined>;\r\n\t\ttextDecoration?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'text-decoration'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\ttextLength?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\ttextRendering?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tto?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\ttransform?: string | undefined | SignalLike<string | undefined>;\r\n\t\tu1?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\tu2?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\tunderlinePosition?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'underline-position'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tunderlineThickness?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'underline-thickness'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tunicode?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tunicodeBidi?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'unicode-bidi'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tunicodeRange?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'unicode-range'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tunitsPerEm?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'units-per-em'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tvAlphabetic?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'v-alphabetic'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tvalues?: string | undefined | SignalLike<string | undefined>;\r\n\t\tvectorEffect?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'vector-effect'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tversion?: string | undefined | SignalLike<string | undefined>;\r\n\t\tvertAdvY?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'vert-adv-y'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tvertOriginX?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'vert-origin-x'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tvertOriginY?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'vert-origin-y'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tvHanging?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'v-hanging'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tvIdeographic?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'v-ideographic'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tviewBox?: string | undefined | SignalLike<string | undefined>;\r\n\t\tviewTarget?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tvisibility?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tvMathematical?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'v-mathematical'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\twidths?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\twordSpacing?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'word-spacing'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\twritingMode?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'writing-mode'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tx1?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\tx2?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\tx?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\txChannelSelector?: string | undefined | SignalLike<string | undefined>;\r\n\t\txHeight?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\t'x-height'?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\txlinkActuate?: string | undefined | SignalLike<string | undefined>;\r\n\t\t'xlink:actuate'?: SVGAttributes['xlinkActuate'];\r\n\t\txlinkArcrole?: string | undefined | SignalLike<string | undefined>;\r\n\t\t'xlink:arcrole'?: string | undefined | SignalLike<string | undefined>;\r\n\t\txlinkHref?: string | undefined | SignalLike<string | undefined>;\r\n\t\t'xlink:href'?: string | undefined | SignalLike<string | undefined>;\r\n\t\txlinkRole?: string | undefined | SignalLike<string | undefined>;\r\n\t\t'xlink:role'?: string | undefined | SignalLike<string | undefined>;\r\n\t\txlinkShow?: string | undefined | SignalLike<string | undefined>;\r\n\t\t'xlink:show'?: string | undefined | SignalLike<string | undefined>;\r\n\t\txlinkTitle?: string | undefined | SignalLike<string | undefined>;\r\n\t\t'xlink:title'?: string | undefined | SignalLike<string | undefined>;\r\n\t\txlinkType?: string | undefined | SignalLike<string | undefined>;\r\n\t\t'xlink:type'?: string | undefined | SignalLike<string | undefined>;\r\n\t\txmlBase?: string | undefined | SignalLike<string | undefined>;\r\n\t\t'xml:base'?: string | undefined | SignalLike<string | undefined>;\r\n\t\txmlLang?: string | undefined | SignalLike<string | undefined>;\r\n\t\t'xml:lang'?: string | undefined | SignalLike<string | undefined>;\r\n\t\txmlns?: string | undefined | SignalLike<string | undefined>;\r\n\t\txmlnsXlink?: string | undefined | SignalLike<string | undefined>;\r\n\t\txmlSpace?: string | undefined | SignalLike<string | undefined>;\r\n\t\t'xml:space'?: string | undefined | SignalLike<string | undefined>;\r\n\t\ty1?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\ty2?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\ty?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\tyChannelSelector?: string | undefined | SignalLike<string | undefined>;\r\n\t\tz?: number | string | undefined | SignalLike<number | string | undefined>;\r\n\t\tzoomAndPan?: string | undefined | SignalLike<string | undefined>;\r\n\t}\r\n\r\n\texport interface PathAttributes {\r\n\t\td: string;\r\n\t}\r\n\r\n\texport type TargetedEvent<\r\n\t\tTarget extends EventTarget = EventTarget,\r\n\t\tTypedEvent extends Event = Event\r\n\t> = Omit<TypedEvent, 'currentTarget'> & {\r\n\t\treadonly currentTarget: Target;\r\n\t};\r\n\r\n\texport type TargetedAnimationEvent<Target extends EventTarget> =\r\n\t\tTargetedEvent<Target, AnimationEvent>;\r\n\texport type TargetedClipboardEvent<Target extends EventTarget> =\r\n\t\tTargetedEvent<Target, ClipboardEvent>;\r\n\texport type TargetedCompositionEvent<Target extends EventTarget> =\r\n\t\tTargetedEvent<Target, CompositionEvent>;\r\n\texport type TargetedDragEvent<Target extends EventTarget> = TargetedEvent<\r\n\t\tTarget,\r\n\t\tDragEvent\r\n\t>;\r\n\texport type TargetedFocusEvent<Target extends EventTarget> = TargetedEvent<\r\n\t\tTarget,\r\n\t\tFocusEvent\r\n\t>;\r\n\texport type TargetedKeyboardEvent<Target extends EventTarget> = TargetedEvent<\r\n\t\tTarget,\r\n\t\tKeyboardEvent\r\n\t>;\r\n\texport type TargetedMouseEvent<Target extends EventTarget> = TargetedEvent<\r\n\t\tTarget,\r\n\t\tMouseEvent\r\n\t>;\r\n\texport type TargetedPointerEvent<Target extends EventTarget> = TargetedEvent<\r\n\t\tTarget,\r\n\t\tPointerEvent\r\n\t>;\r\n\texport type TargetedTouchEvent<Target extends EventTarget> = TargetedEvent<\r\n\t\tTarget,\r\n\t\tTouchEvent\r\n\t>;\r\n\texport type TargetedTransitionEvent<Target extends EventTarget> =\r\n\t\tTargetedEvent<Target, TransitionEvent>;\r\n\texport type TargetedUIEvent<Target extends EventTarget> = TargetedEvent<\r\n\t\tTarget,\r\n\t\tUIEvent\r\n\t>;\r\n\texport type TargetedWheelEvent<Target extends EventTarget> = TargetedEvent<\r\n\t\tTarget,\r\n\t\tWheelEvent\r\n\t>;\r\n\texport type TargetedPictureInPictureEvent<Target extends EventTarget> =\r\n\t\tTargetedEvent<Target, PictureInPictureEvent>;\r\n\r\n\texport type EventHandler<E extends TargetedEvent> = {\r\n\t\tbivarianceHack(event: E): void;\r\n\t}['bivarianceHack'];\r\n\r\n\texport type AnimationEventHandler<Target extends EventTarget> = EventHandler<\r\n\t\tTargetedAnimationEvent<Target>\r\n\t>;\r\n\texport type ClipboardEventHandler<Target extends EventTarget> = EventHandler<\r\n\t\tTargetedClipboardEvent<Target>\r\n\t>;\r\n\texport type CompositionEventHandler<Target extends EventTarget> =\r\n\t\tEventHandler<TargetedCompositionEvent<Target>>;\r\n\texport type DragEventHandler<Target extends EventTarget> = EventHandler<\r\n\t\tTargetedDragEvent<Target>\r\n\t>;\r\n\texport type FocusEventHandler<Target extends EventTarget> = EventHandler<\r\n\t\tTargetedFocusEvent<Target>\r\n\t>;\r\n\texport type GenericEventHandler<Target extends EventTarget> = EventHandler<\r\n\t\tTargetedEvent<Target>\r\n\t>;\r\n\texport type KeyboardEventHandler<Target extends EventTarget> = EventHandler<\r\n\t\tTargetedKeyboardEvent<Target>\r\n\t>;\r\n\texport type MouseEventHandler<Target extends EventTarget> = EventHandler<\r\n\t\tTargetedMouseEvent<Target>\r\n\t>;\r\n\texport type PointerEventHandler<Target extends EventTarget> = EventHandler<\r\n\t\tTargetedPointerEvent<Target>\r\n\t>;\r\n\texport type TouchEventHandler<Target extends EventTarget> = EventHandler<\r\n\t\tTargetedTouchEvent<Target>\r\n\t>;\r\n\texport type TransitionEventHandler<Target extends EventTarget> = EventHandler<\r\n\t\tTargetedTransitionEvent<Target>\r\n\t>;\r\n\texport type UIEventHandler<Target extends EventTarget> = EventHandler<\r\n\t\tTargetedUIEvent<Target>\r\n\t>;\r\n\texport type WheelEventHandler<Target extends EventTarget> = EventHandler<\r\n\t\tTargetedWheelEvent<Target>\r\n\t>;\r\n\texport type PictureInPictureEventHandler<Target extends EventTarget> =\r\n\t\tEventHandler<TargetedPictureInPictureEvent<Target>>;\r\n\r\n\texport interface DOMAttributes<Target extends EventTarget>\r\n\t\textends PreactDOMAttributes {\r\n\t\t// Image Events\r\n\t\tonLoad?: GenericEventHandler<Target> | undefined;\r\n\t\tonLoadCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonError?: GenericEventHandler<Target> | undefined;\r\n\t\tonErrorCapture?: GenericEventHandler<Target> | undefined;\r\n\r\n\t\t// Clipboard Events\r\n\t\tonCopy?: ClipboardEventHandler<Target> | undefined;\r\n\t\tonCopyCapture?: ClipboardEventHandler<Target> | undefined;\r\n\t\tonCut?: ClipboardEventHandler<Target> | undefined;\r\n\t\tonCutCapture?: ClipboardEventHandler<Target> | undefined;\r\n\t\tonPaste?: ClipboardEventHandler<Target> | undefined;\r\n\t\tonPasteCapture?: ClipboardEventHandler<Target> | undefined;\r\n\r\n\t\t// Composition Events\r\n\t\tonCompositionEnd?: CompositionEventHandler<Target> | undefined;\r\n\t\tonCompositionEndCapture?: CompositionEventHandler<Target> | undefined;\r\n\t\tonCompositionStart?: CompositionEventHandler<Target> | undefined;\r\n\t\tonCompositionStartCapture?: CompositionEventHandler<Target> | undefined;\r\n\t\tonCompositionUpdate?: CompositionEventHandler<Target> | undefined;\r\n\t\tonCompositionUpdateCapture?: CompositionEventHandler<Target> | undefined;\r\n\r\n\t\t// Details Events\r\n\t\tonToggle?: GenericEventHandler<Target> | undefined;\r\n\r\n\t\t// Dialog Events\r\n\t\tonClose?: GenericEventHandler<Target> | undefined;\r\n\t\tonCancel?: GenericEventHandler<Target> | undefined;\r\n\r\n\t\t// Focus Events\r\n\t\tonFocus?: FocusEventHandler<Target> | undefined;\r\n\t\tonFocusCapture?: FocusEventHandler<Target> | undefined;\r\n\t\tonfocusin?: FocusEventHandler<Target> | undefined;\r\n\t\tonfocusinCapture?: FocusEventHandler<Target> | undefined;\r\n\t\tonfocusout?: FocusEventHandler<Target> | undefined;\r\n\t\tonfocusoutCapture?: FocusEventHandler<Target> | undefined;\r\n\t\tonBlur?: FocusEventHandler<Target> | undefined;\r\n\t\tonBlurCapture?: FocusEventHandler<Target> | undefined;\r\n\r\n\t\t// Form Events\r\n\t\tonChange?: GenericEventHandler<Target> | undefined;\r\n\t\tonChangeCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonInput?: GenericEventHandler<Target> | undefined;\r\n\t\tonInputCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonBeforeInput?: GenericEventHandler<Target> | undefined;\r\n\t\tonBeforeInputCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonSearch?: GenericEventHandler<Target> | undefined;\r\n\t\tonSearchCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonSubmit?: GenericEventHandler<Target> | undefined;\r\n\t\tonSubmitCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonInvalid?: GenericEventHandler<Target> | undefined;\r\n\t\tonInvalidCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonReset?: GenericEventHandler<Target> | undefined;\r\n\t\tonResetCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonFormData?: GenericEventHandler<Target> | undefined;\r\n\t\tonFormDataCapture?: GenericEventHandler<Target> | undefined;\r\n\r\n\t\t// Keyboard Events\r\n\t\tonKeyDown?: KeyboardEventHandler<Target> | undefined;\r\n\t\tonKeyDownCapture?: KeyboardEventHandler<Target> | undefined;\r\n\t\tonKeyPress?: KeyboardEventHandler<Target> | undefined;\r\n\t\tonKeyPressCapture?: KeyboardEventHandler<Target> | undefined;\r\n\t\tonKeyUp?: KeyboardEventHandler<Target> | undefined;\r\n\t\tonKeyUpCapture?: KeyboardEventHandler<Target> | undefined;\r\n\r\n\t\t// Media Events\r\n\t\tonAbort?: GenericEventHandler<Target> | undefined;\r\n\t\tonAbortCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonCanPlay?: GenericEventHandler<Target> | undefined;\r\n\t\tonCanPlayCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonCanPlayThrough?: GenericEventHandler<Target> | undefined;\r\n\t\tonCanPlayThroughCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonDurationChange?: GenericEventHandler<Target> | undefined;\r\n\t\tonDurationChangeCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonEmptied?: GenericEventHandler<Target> | undefined;\r\n\t\tonEmptiedCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonEncrypted?: GenericEventHandler<Target> | undefined;\r\n\t\tonEncryptedCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonEnded?: GenericEventHandler<Target> | undefined;\r\n\t\tonEndedCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonLoadedData?: GenericEventHandler<Target> | undefined;\r\n\t\tonLoadedDataCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonLoadedMetadata?: GenericEventHandler<Target> | undefined;\r\n\t\tonLoadedMetadataCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonLoadStart?: GenericEventHandler<Target> | undefined;\r\n\t\tonLoadStartCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonPause?: GenericEventHandler<Target> | undefined;\r\n\t\tonPauseCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonPlay?: GenericEventHandler<Target> | undefined;\r\n\t\tonPlayCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonPlaying?: GenericEventHandler<Target> | undefined;\r\n\t\tonPlayingCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonProgress?: GenericEventHandler<Target> | undefined;\r\n\t\tonProgressCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonRateChange?: GenericEventHandler<Target> | undefined;\r\n\t\tonRateChangeCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonSeeked?: GenericEventHandler<Target> | undefined;\r\n\t\tonSeekedCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonSeeking?: GenericEventHandler<Target> | undefined;\r\n\t\tonSeekingCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonStalled?: GenericEventHandler<Target> | undefined;\r\n\t\tonStalledCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonSuspend?: GenericEventHandler<Target> | undefined;\r\n\t\tonSuspendCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonTimeUpdate?: GenericEventHandler<Target> | undefined;\r\n\t\tonTimeUpdateCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonVolumeChange?: GenericEventHandler<Target> | undefined;\r\n\t\tonVolumeChangeCapture?: GenericEventHandler<Target> | undefined;\r\n\t\tonWaiting?: GenericEventHandler<Target> | undefined;\r\n\t\tonWaitingCapture?: GenericEventHandler<Target> | undefined;\r\n\r\n\t\t// MouseEvents\r\n\t\tonClick?: MouseEventHandler<Target> | undefined;\r\n\t\tonClickCapture?: MouseEventHandler<Target> | undefined;\r\n\t\tonContextMenu?: MouseEventHandler<Target> | undefined;\r\n\t\tonContextMenuCapture?: MouseEventHandler<Target> | undefined;\r\n\t\tonDblClick?: MouseEventHandler<Target> | undefined;\r\n\t\tonDblClickCapture?: MouseEventHandler<Target> | undefined;\r\n\t\tonDrag?: DragEventHandler<Target> | undefined;\r\n\t\tonDragCapture?: DragEventHandler<Target> | undefined;\r\n\t\tonDragEnd?: DragEventHandler<Target> | undefined;\r\n\t\tonDragEndCapture?: DragEventHandler<Target> | undefined;\r\n\t\tonDragEnter?: DragEventHandler<Target> | undefined;\r\n\t\tonDragEnterCapture?: DragEventHandler<Target> | undefined;\r\n\t\tonDragExit?: DragEventHandler<Target> | undefined;\r\n\t\tonDragExitCapture?: DragEventHandler<Target> | undefined;\r\n\t\tonDragLeave?: DragEventHandler<Target> | undefined;\r\n\t\tonDragLeaveCapture?: DragEventHandler<Target> | undefined;\r\n\t\tonDragOver?: DragEventHandler<Target> | undefined;\r\n\t\tonDragOverCapture?: DragEventHandler<Target> | undefined;\r\n\t\tonDragStart?: DragEventHandler<Target> | undefined;\r\n\t\tonDragStartCapture?: DragEventHandler<Target> | undefined;\r\n\t\tonDrop?: DragEventHandler<Target> | undefined;\r\n\t\tonDropCapture?: DragEventHandler<Target> | undefined;\r\n\t\tonMouseDown?: MouseEventHandler<Target> | undefined;\r\n\t\tonMouseDownCapture?: MouseEventHandler<Target> | undefined;\r\n\t\tonMouseEnter?: MouseEventHandler<Target> | undefined;\r\n\t\tonMouseEnterCapture?: MouseEventHandler<Target> | undefined;\r\n\t\tonMouseLeave?: MouseEventHandler<Target> | undefined;\r\n\t\tonMouseLeaveCapture?: MouseEventHandler<Target> | undefined;\r\n\t\tonMouseMove?: MouseEventHandler<Target> | undefined;\r\n\t\tonMouseMoveCapture?: MouseEventHandler<Target> | undefined;\r\n\t\tonMouseOut?: MouseEventHandler<Target> | undefined;\r\n\t\tonMouseOutCapture?: MouseEventHandler<Target> | undefined;\r\n\t\tonMouseOver?: MouseEventHandler<Target> | undefined;\r\n\t\tonMouseOverCapture?: MouseEventHandler<Target> | undefined;\r\n\t\tonMouseUp?: MouseEventHandler<Target> | undefined;\r\n\t\tonMouseUpCapture?: MouseEventHandler<Target> | undefined;\r\n\r\n\t\t// Selection Events\r\n\t\tonSelect?: GenericEventHandler<Target> | undefined;\r\n\t\tonSelectCapture?: GenericEventHandler<Target> | undefined;\r\n\r\n\t\t// Touch Events\r\n\t\tonTouchCancel?: TouchEventHandler<Target> | undefined;\r\n\t\tonTouchCancelCapture?: TouchEventHandler<Target> | undefined;\r\n\t\tonTouchEnd?: TouchEventHandler<Target> | undefined;\r\n\t\tonTouchEndCapture?: TouchEventHandler<Target> | undefined;\r\n\t\tonTouchMove?: TouchEventHandler<Target> | undefined;\r\n\t\tonTouchMoveCapture?: TouchEventHandler<Target> | undefined;\r\n\t\tonTouchStart?: TouchEventHandler<Target> | undefined;\r\n\t\tonTouchStartCapture?: TouchEventHandler<Target> | undefined;\r\n\r\n\t\t// Pointer Events\r\n\t\tonPointerOver?: PointerEventHandler<Target> | undefined;\r\n\t\tonPointerOverCapture?: PointerEventHandler<Target> | undefined;\r\n\t\tonPointerEnter?: PointerEventHandler<Target> | undefined;\r\n\t\tonPointerEnterCapture?: PointerEventHandler<Target> | undefined;\r\n\t\tonPointerDown?: PointerEventHandler<Target> | undefined;\r\n\t\tonPointerDownCapture?: PointerEventHandler<Target> | undefined;\r\n\t\tonPointerMove?: PointerEventHandler<Target> | undefined;\r\n\t\tonPointerMoveCapture?: PointerEventHandler<Target> | undefined;\r\n\t\tonPointerUp?: PointerEventHandler<Target> | undefined;\r\n\t\tonPointerUpCapture?: PointerEventHandler<Target> | undefined;\r\n\t\tonPointerCancel?: PointerEventHandler<Target> | undefined;\r\n\t\tonPointerCancelCapture?: PointerEventHandler<Target> | undefined;\r\n\t\tonPointerOut?: PointerEventHandler<Target> | undefined;\r\n\t\tonPointerOutCapture?: PointerEventHandler<Target> | undefined;\r\n\t\tonPointerLeave?: PointerEventHandler<Target> | undefined;\r\n\t\tonPointerLeaveCapture?: PointerEventHandler<Target> | undefined;\r\n\t\tonGotPointerCapture?: PointerEventHandler<Target> | undefined;\r\n\t\tonGotPointerCaptureCapture?: PointerEventHandler<Target> | undefined;\r\n\t\tonLostPointerCapture?: PointerEventHandler<Target> | undefined;\r\n\t\tonLostPointerCaptureCapture?: PointerEventHandler<Target> | undefined;\r\n\r\n\t\t// UI Events\r\n\t\tonScroll?: UIEventHandler<Target> | undefined;\r\n\t\tonScrollCapture?: UIEventHandler<Target> | undefined;\r\n\r\n\t\t// Wheel Events\r\n\t\tonWheel?: WheelEventHandler<Target> | undefined;\r\n\t\tonWheelCapture?: WheelEventHandler<Target> | undefined;\r\n\r\n\t\t// Animation Events\r\n\t\tonAnimationStart?: AnimationEventHandler<Target> | undefined;\r\n\t\tonAnimationStartCapture?: AnimationEventHandler<Target> | undefined;\r\n\t\tonAnimationEnd?: AnimationEventHandler<Target> | undefined;\r\n\t\tonAnimationEndCapture?: AnimationEventHandler<Target> | undefined;\r\n\t\tonAnimationIteration?: AnimationEventHandler<Target> | undefined;\r\n\t\tonAnimationIterationCapture?: AnimationEventHandler<Target> | undefined;\r\n\r\n\t\t// Transition Events\r\n\t\tonTransitionCancel?: TransitionEventHandler<Target>;\r\n\t\tonTransitionCancelCapture?: TransitionEventHandler<Target>;\r\n\t\tonTransitionEnd?: TransitionEventHandler<Target>;\r\n\t\tonTransitionEndCapture?: TransitionEventHandler<Target>;\r\n\t\tonTransitionRun?: TransitionEventHandler<Target>;\r\n\t\tonTransitionRunCapture?: TransitionEventHandler<Target>;\r\n\t\tonTransitionStart?: TransitionEventHandler<Target>;\r\n\t\tonTransitionStartCapture?: TransitionEventHandler<Target>;\r\n\r\n\t\t// PictureInPicture Events\r\n\t\tonEnterPictureInPicture?: PictureInPictureEventHandler<Target>;\r\n\t\tonEnterPictureInPictureCapture?: PictureInPictureEventHandler<Target>;\r\n\t\tonLeavePictureInPicture?: PictureInPictureEventHandler<Target>;\r\n\t\tonLeavePictureInPictureCapture?: PictureInPictureEventHandler<Target>;\r\n\t\tonResize?: PictureInPictureEventHandler<Target>;\r\n\t\tonResizeCapture?: PictureInPictureEventHandler<Target>;\r\n\t}\r\n\r\n\t// All the WAI-ARIA 1.1 attributes from https://www.w3.org/TR/wai-aria-1.1/\r\n\texport interface AriaAttributes {\r\n\t\t/** Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application. */\r\n\t\t'aria-activedescendant'?: Signalish<string | undefined>;\r\n\t\t/** Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute. */\r\n\t\t'aria-atomic'?: Signalish<Booleanish | undefined>;\r\n\t\t/**\r\n\t\t * Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\r\n\t\t * presented if they are made.\r\n\t\t */\r\n\t\t'aria-autocomplete'?: Signalish<\r\n\t\t\t'none' | 'inline' | 'list' | 'both' | undefined\r\n\t\t>;\r\n\t\t/**\r\n\t\t * Defines a string value that labels the current element, which is intended to be converted into Braille.\r\n\t\t * @see aria-label.\r\n\t\t */\r\n\t\t'aria-braillelabel'?: Signalish<string | undefined>;\r\n\t\t/**\r\n\t\t * Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\r\n\t\t * @see aria-roledescription.\r\n\t\t */\r\n\t\t'aria-brailleroledescription'?: Signalish<string | undefined>;\r\n\t\t/** Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user. */\r\n\t\t'aria-busy'?: Signalish<Booleanish | undefined>;\r\n\t\t/**\r\n\t\t * Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\r\n\t\t * @see aria-pressed\r\n\t\t * @see aria-selected.\r\n\t\t */\r\n\t\t'aria-checked'?: Signalish<Booleanish | 'mixed' | undefined>;\r\n\t\t/**\r\n\t\t * Defines the total number of columns in a table, grid, or treegrid.\r\n\t\t * @see aria-colindex.\r\n\t\t */\r\n\t\t'aria-colcount'?: Signalish<number | undefined>;\r\n\t\t/**\r\n\t\t * Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\r\n\t\t * @see aria-colcount\r\n\t\t * @see aria-colspan.\r\n\t\t */\r\n\t\t'aria-colindex'?: Signalish<number | undefined>;\r\n\t\t/**\r\n\t\t * Defines a human readable text alternative of aria-colindex.\r\n\t\t * @see aria-rowindextext.\r\n\t\t */\r\n\t\t'aria-colindextext'?: Signalish<string | undefined>;\r\n\t\t/**\r\n\t\t * Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\r\n\t\t * @see aria-colindex\r\n\t\t * @see aria-rowspan.\r\n\t\t */\r\n\t\t'aria-colspan'?: Signalish<number | undefined>;\r\n\t\t/**\r\n\t\t * Identifies the element (or elements) whose contents or presence are controlled by the current element.\r\n\t\t * @see aria-owns.\r\n\t\t */\r\n\t\t'aria-controls'?: Signalish<string | undefined>;\r\n\t\t/** Indicates the element that represents the current item within a container or set of related elements. */\r\n\t\t'aria-current'?: Signalish<\r\n\t\t\tBooleanish | 'page' | 'step' | 'location' | 'date' | 'time' | undefined\r\n\t\t>;\r\n\t\t/**\r\n\t\t * Identifies the element (or elements) that describes the object.\r\n\t\t * @see aria-labelledby\r\n\t\t */\r\n\t\t'aria-describedby'?: Signalish<string | undefined>;\r\n\t\t/**\r\n\t\t * Defines a string value that describes or annotates the current element.\r\n\t\t * @see related aria-describedby.\r\n\t\t */\r\n\t\t'aria-description'?: Signalish<string | undefined>;\r\n\t\t/**\r\n\t\t * Identifies the element that provides a detailed, extended description for the object.\r\n\t\t * @see aria-describedby.\r\n\t\t */\r\n\t\t'aria-details'?: Signalish<string | undefined>;\r\n\t\t/**\r\n\t\t * Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\r\n\t\t * @see aria-hidden\r\n\t\t * @see aria-readonly.\r\n\t\t */\r\n\t\t'aria-disabled'?: Signalish<Booleanish | undefined>;\r\n\t\t/**\r\n\t\t * Indicates what functions can be performed when a dragged object is released on the drop target.\r\n\t\t * @deprecated in ARIA 1.1\r\n\t\t */\r\n\t\t'aria-dropeffect'?: Signalish<\r\n\t\t\t'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup' | undefined\r\n\t\t>;\r\n\t\t/**\r\n\t\t * Identifies the element that provides an error message for the object.\r\n\t\t * @see aria-invalid\r\n\t\t * @see aria-describedby.\r\n\t\t */\r\n\t\t'aria-errormessage'?: Signalish<string | undefined>;\r\n\t\t/** Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed. */\r\n\t\t'aria-expanded'?: Signalish<Booleanish | undefined>;\r\n\t\t/**\r\n\t\t * Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\r\n\t\t * allows assistive technology to override the general default of reading in document source order.\r\n\t\t */\r\n\t\t'aria-flowto'?: Signalish<string | undefined>;\r\n\t\t/**\r\n\t\t * Indicates an element's \"grabbed\" state in a drag-and-drop operation.\r\n\t\t * @deprecated in ARIA 1.1\r\n\t\t */\r\n\t\t'aria-grabbed'?: Signalish<Booleanish | undefined>;\r\n\t\t/** Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element. */\r\n\t\t'aria-haspopup'?: Signalish<\r\n\t\t\tBooleanish | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog' | undefined\r\n\t\t>;\r\n\t\t/**\r\n\t\t * Indicates whether the element is exposed to an accessibility API.\r\n\t\t * @see aria-disabled.\r\n\t\t */\r\n\t\t'aria-hidden'?: Signalish<Booleanish | undefined>;\r\n\t\t/**\r\n\t\t * Indicates the entered value does not conform to the format expected by the application.\r\n\t\t * @see aria-errormessage.\r\n\t\t */\r\n\t\t'aria-invalid'?: Signalish<Booleanish | 'grammar' | 'spelling' | undefined>;\r\n\t\t/** Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element. */\r\n\t\t'aria-keyshortcuts'?: Signalish<string | undefined>;\r\n\t\t/**\r\n\t\t * Defines a string value that labels the current element.\r\n\t\t * @see aria-labelledby.\r\n\t\t */\r\n\t\t'aria-label'?: Signalish<string | undefined>;\r\n\t\t/**\r\n\t\t * Identifies the element (or elements) that labels the current element.\r\n\t\t * @see aria-describedby.\r\n\t\t */\r\n\t\t'aria-labelledby'?: Signalish<string | undefined>;\r\n\t\t/** Defines the hierarchical level of an element within a structure. */\r\n\t\t'aria-level'?: Signalish<number | undefined>;\r\n\t\t/** Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region. */\r\n\t\t'aria-live'?: Signalish<'off' | 'assertive' | 'polite' | undefined>;\r\n\t\t/** Indicates whether an element is modal when displayed. */\r\n\t\t'aria-modal'?: Signalish<Booleanish | undefined>;\r\n\t\t/** Indicates whether a text box accepts multiple lines of input or only a single line. */\r\n\t\t'aria-multiline'?: Signalish<Booleanish | undefined>;\r\n\t\t/** Indicates that the user may select more than one item from the current selectable descendants. */\r\n\t\t'aria-multiselectable'?: Signalish<Booleanish | undefined>;\r\n\t\t/** Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous. */\r\n\t\t'aria-orientation'?: Signalish<'horizontal' | 'vertical' | undefined>;\r\n\t\t/**\r\n\t\t * Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\r\n\t\t * between DOM elements where the DOM hierarchy cannot be used to represent the relationship.\r\n\t\t * @see aria-controls.\r\n\t\t */\r\n\t\t'aria-owns'?: Signalish<string | undefined>;\r\n\t\t/**\r\n\t\t * Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\r\n\t\t * A hint could be a sample value or a brief description of the expected format.\r\n\t\t */\r\n\t\t'aria-placeholder'?: Signalish<string | undefined>;\r\n\t\t/**\r\n\t\t * Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\r\n\t\t * @see aria-setsize.\r\n\t\t */\r\n\t\t'aria-posinset'?: Signalish<number | undefined>;\r\n\t\t/**\r\n\t\t * Indicates the current \"pressed\" state of toggle buttons.\r\n\t\t * @see aria-checked\r\n\t\t * @see aria-selected.\r\n\t\t */\r\n\t\t'aria-pressed'?: Signalish<Booleanish | 'mixed' | undefined>;\r\n\t\t/**\r\n\t\t * Indicates that the element is not editable, but is otherwise operable.\r\n\t\t * @see aria-disabled.\r\n\t\t */\r\n\t\t'aria-readonly'?: Signalish<Booleanish | undefined>;\r\n\t\t/**\r\n\t\t * Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\r\n\t\t * @see aria-atomic.\r\n\t\t */\r\n\t\t'aria-relevant'?: Signalish<\r\n\t\t\t| 'additions'\r\n\t\t\t| 'additions removals'\r\n\t\t\t| 'additions text'\r\n\t\t\t| 'all'\r\n\t\t\t| 'removals'\r\n\t\t\t| 'removals additions'\r\n\t\t\t| 'removals text'\r\n\t\t\t| 'text'\r\n\t\t\t| 'text additions'\r\n\t\t\t| 'text removals'\r\n\t\t\t| undefined\r\n\t\t>;\r\n\t\t/** Indicates that user input is required on the element before a form may be submitted. */\r\n\t\t'aria-required'?: Signalish<Booleanish | undefined>;\r\n\t\t/** Defines a human-readable, author-localized description for the role of an element. */\r\n\t\t'aria-roledescription'?: Signalish<string | undefined>;\r\n\t\t/**\r\n\t\t * Defines the total number of rows in a table, grid, or treegrid.\r\n\t\t * @see aria-rowindex.\r\n\t\t */\r\n\t\t'aria-rowcount'?: Signalish<number | undefined>;\r\n\t\t/**\r\n\t\t * Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\r\n\t\t * @see aria-rowcount\r\n\t\t * @see aria-rowspan.\r\n\t\t */\r\n\t\t'aria-rowindex'?: Signalish<number | undefined>;\r\n\t\t/**\r\n\t\t * Defines a human readable text alternative of aria-rowindex.\r\n\t\t * @see aria-colindextext.\r\n\t\t */\r\n\t\t'aria-rowindextext'?: Signalish<string | undefined>;\r\n\t\t/**\r\n\t\t * Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\r\n\t\t * @see aria-rowindex\r\n\t\t * @see aria-colspan.\r\n\t\t */\r\n\t\t'aria-rowspan'?: Signalish<number | undefined>;\r\n\t\t/**\r\n\t\t * Indicates the current \"selected\" state of various widgets.\r\n\t\t * @see aria-checked\r\n\t\t * @see aria-pressed.\r\n\t\t */\r\n\t\t'aria-selected'?: Signalish<Booleanish | undefined>;\r\n\t\t/**\r\n\t\t * Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\r\n\t\t * @see aria-posinset.\r\n\t\t */\r\n\t\t'aria-setsize'?: Signalish<number | undefined>;\r\n\t\t/** Indicates if items in a table or grid are sorted in ascending or descending order. */\r\n\t\t'aria-sort'?: Signalish<\r\n\t\t\t'none' | 'ascending' | 'descending' | 'other' | undefined\r\n\t\t>;\r\n\t\t/** Defines the maximum allowed value for a range widget. */\r\n\t\t'aria-valuemax'?: Signalish<number | undefined>;\r\n\t\t/** Defines the minimum allowed value for a range widget. */\r\n\t\t'aria-valuemin'?: Signalish<number | undefined>;\r\n\t\t/**\r\n\t\t * Defines the current value for a range widget.\r\n\t\t * @see aria-valuetext.\r\n\t\t */\r\n\t\t'aria-valuenow'?: Signalish<number | undefined>;\r\n\t\t/** Defines the human readable text alternative of aria-valuenow for a range widget. */\r\n\t\t'aria-valuetext'?: Signalish<string | undefined>;\r\n\t}\r\n\r\n\t// All the WAI-ARIA 1.2 role attribute values from https://www.w3.org/TR/wai-aria-1.2/#role_definitions\r\n\ttype AriaRole =\r\n\t\t| 'alert'\r\n\t\t| 'alertdialog'\r\n\t\t| 'application'\r\n\t\t| 'article'\r\n\t\t| 'banner'\r\n\t\t| 'blockquote'\r\n\t\t| 'button'\r\n\t\t| 'caption'\r\n\t\t| 'cell'\r\n\t\t| 'checkbox'\r\n\t\t| 'code'\r\n\t\t| 'columnheader'\r\n\t\t| 'combobox'\r\n\t\t| 'command'\r\n\t\t| 'complementary'\r\n\t\t| 'composite'\r\n\t\t| 'contentinfo'\r\n\t\t| 'definition'\r\n\t\t| 'deletion'\r\n\t\t| 'dialog'\r\n\t\t| 'directory'\r\n\t\t| 'document'\r\n\t\t| 'emphasis'\r\n\t\t| 'feed'\r\n\t\t| 'figure'\r\n\t\t| 'form'\r\n\t\t| 'generic'\r\n\t\t| 'grid'\r\n\t\t| 'gridcell'\r\n\t\t| 'group'\r\n\t\t| 'heading'\r\n\t\t| 'img'\r\n\t\t| 'input'\r\n\t\t| 'insertion'\r\n\t\t| 'landmark'\r\n\t\t| 'link'\r\n\t\t| 'list'\r\n\t\t| 'listbox'\r\n\t\t| 'listitem'\r\n\t\t| 'log'\r\n\t\t| 'main'\r\n\t\t| 'marquee'\r\n\t\t| 'math'\r\n\t\t| 'meter'\r\n\t\t| 'menu'\r\n\t\t| 'menubar'\r\n\t\t| 'menuitem'\r\n\t\t| 'menuitemcheckbox'\r\n\t\t| 'menuitemradio'\r\n\t\t| 'navigation'\r\n\t\t| 'none'\r\n\t\t| 'note'\r\n\t\t| 'option'\r\n\t\t| 'paragraph'\r\n\t\t| 'presentation'\r\n\t\t| 'progressbar'\r\n\t\t| 'radio'\r\n\t\t| 'radiogroup'\r\n\t\t| 'range'\r\n\t\t| 'region'\r\n\t\t| 'roletype'\r\n\t\t| 'row'\r\n\t\t| 'rowgroup'\r\n\t\t| 'rowheader'\r\n\t\t| 'scrollbar'\r\n\t\t| 'search'\r\n\t\t| 'searchbox'\r\n\t\t| 'section'\r\n\t\t| 'sectionhead'\r\n\t\t| 'select'\r\n\t\t| 'separator'\r\n\t\t| 'slider'\r\n\t\t| 'spinbutton'\r\n\t\t| 'status'\r\n\t\t| 'strong'\r\n\t\t| 'structure'\r\n\t\t| 'subscript'\r\n\t\t| 'superscript'\r\n\t\t| 'switch'\r\n\t\t| 'tab'\r\n\t\t| 'table'\r\n\t\t| 'tablist'\r\n\t\t| 'tabpanel'\r\n\t\t| 'term'\r\n\t\t| 'textbox'\r\n\t\t| 'time'\r\n\t\t| 'timer'\r\n\t\t| 'toolbar'\r\n\t\t| 'tooltip'\r\n\t\t| 'tree'\r\n\t\t| 'treegrid'\r\n\t\t| 'treeitem'\r\n\t\t| 'widget'\r\n\t\t| 'window'\r\n\t\t| 'none presentation';\r\n\r\n\texport interface HTMLAttributes<RefType extends EventTarget = EventTarget>\r\n\t\textends ClassAttributes<RefType>,\r\n\t\t\tDOMAttributes<RefType>,\r\n\t\t\tAriaAttributes {\r\n\t\t// Standard HTML Attributes\r\n\t\taccept?: string | undefined | SignalLike<string | undefined>;\r\n\t\tacceptCharset?: string | undefined | SignalLike<string | undefined>;\r\n\t\t'accept-charset'?: HTMLAttributes['acceptCharset'];\r\n\t\taccessKey?: string | undefined | SignalLike<string | undefined>;\r\n\t\taccesskey?: HTMLAttributes['accessKey'];\r\n\t\taction?: string | undefined | SignalLike<string | undefined>;\r\n\t\tallow?: string | undefined | SignalLike<string | undefined>;\r\n\t\tallowFullScreen?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tallowTransparency?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\talt?: string | undefined | SignalLike<string | undefined>;\r\n\t\tas?: string | undefined | SignalLike<string | undefined>;\r\n\t\tasync?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tautocomplete?: string | undefined | SignalLike<string | undefined>;\r\n\t\tautoComplete?: string | undefined | SignalLike<string | undefined>;\r\n\t\tautocorrect?: string | undefined | SignalLike<string | undefined>;\r\n\t\tautoCorrect?: string | undefined | SignalLike<string | undefined>;\r\n\t\tautofocus?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tautoFocus?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tautoPlay?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tautoplay?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tcapture?: boolean | string | undefined | SignalLike<string | undefined>;\r\n\t\tcellPadding?: number | string | undefined | SignalLike<string | undefined>;\r\n\t\tcellSpacing?: number | string | undefined | SignalLike<string | undefined>;\r\n\t\tcharSet?: string | undefined | SignalLike<string | undefined>;\r\n\t\tcharset?: string | undefined | SignalLike<string | undefined>;\r\n\t\tchallenge?: string | undefined | SignalLike<string | undefined>;\r\n\t\tchecked?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tcite?: string | undefined | SignalLike<string | undefined>;\r\n\t\tclass?: string | undefined | SignalLike<string | undefined>;\r\n\t\tclassName?: string | undefined | SignalLike<string | undefined>;\r\n\t\tcols?: number | undefined | SignalLike<number | undefined>;\r\n\t\tcolSpan?: number | undefined | SignalLike<number | undefined>;\r\n\t\tcolspan?: number | undefined | SignalLike<number | undefined>;\r\n\t\tcontent?: string | undefined | SignalLike<string | undefined>;\r\n\t\tcontentEditable?:\r\n\t\t\t| Booleanish\r\n\t\t\t| ''\r\n\t\t\t| 'plaintext-only'\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<Booleanish | '' | 'plaintext-only' | undefined>;\r\n\t\tcontenteditable?: HTMLAttributes['contentEditable'];\r\n\t\t/** @deprecated See https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/contextmenu */\r\n\t\tcontextMenu?: string | undefined | SignalLike<string | undefined>;\r\n\t\t/** @deprecated See https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/contextmenu */\r\n\t\tcontextmenu?: string | undefined | SignalLike<string | undefined>;\r\n\t\tcontrols?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tcontrolsList?: string | undefined | SignalLike<string | undefined>;\r\n\t\tcoords?: string | undefined | SignalLike<string | undefined>;\r\n\t\tcrossOrigin?: string | undefined | SignalLike<string | undefined>;\r\n\t\tcrossorigin?: string | undefined | SignalLike<string | undefined>;\r\n\t\tdata?: string | undefined | SignalLike<string | undefined>;\r\n\t\tdateTime?: string | undefined | SignalLike<string | undefined>;\r\n\t\tdatetime?: string | undefined | SignalLike<string | undefined>;\r\n\t\tdefault?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tdefaultChecked?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tdefaultValue?: string | undefined | SignalLike<string | undefined>;\r\n\t\tdefer?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tdir?:\r\n\t\t\t| 'auto'\r\n\t\t\t| 'rtl'\r\n\t\t\t| 'ltr'\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<'auto' | 'rtl' | 'ltr' | undefined>;\r\n\t\tdisabled?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tdisableRemotePlayback?:\r\n\t\t\t| boolean\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<boolean | undefined>;\r\n\t\tdownload?: any | undefined;\r\n\t\tdecoding?:\r\n\t\t\t| 'sync'\r\n\t\t\t| 'async'\r\n\t\t\t| 'auto'\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<'sync' | 'async' | 'auto' | undefined>;\r\n\t\tdraggable?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tencType?: string | undefined | SignalLike<string | undefined>;\r\n\t\tenctype?: string | undefined | SignalLike<string | undefined>;\r\n\t\tenterkeyhint?:\r\n\t\t\t| 'enter'\r\n\t\t\t| 'done'\r\n\t\t\t| 'go'\r\n\t\t\t| 'next'\r\n\t\t\t| 'previous'\r\n\t\t\t| 'search'\r\n\t\t\t| 'send'\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<\r\n\t\t\t\t\t| 'enter'\r\n\t\t\t\t\t| 'done'\r\n\t\t\t\t\t| 'go'\r\n\t\t\t\t\t| 'next'\r\n\t\t\t\t\t| 'previous'\r\n\t\t\t\t\t| 'search'\r\n\t\t\t\t\t| 'send'\r\n\t\t\t\t\t| undefined\r\n\t\t\t  >;\r\n\t\telementTiming?: string | undefined | SignalLike<string | undefined>;\r\n\t\telementtiming?: HTMLAttributes['elementTiming'];\r\n\t\texportparts?: string | undefined | SignalLike<string | undefined>;\r\n\t\tfor?: string | undefined | SignalLike<string | undefined>;\r\n\t\tform?: string | undefined | SignalLike<string | undefined>;\r\n\t\tformAction?: string | undefined | SignalLike<string | undefined>;\r\n\t\tformaction?: string | undefined | SignalLike<string | undefined>;\r\n\t\tformEncType?: string | undefined | SignalLike<string | undefined>;\r\n\t\tformenctype?: string | undefined | SignalLike<string | undefined>;\r\n\t\tformMethod?: string | undefined | SignalLike<string | undefined>;\r\n\t\tformmethod?: string | undefined | SignalLike<string | undefined>;\r\n\t\tformNoValidate?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tformnovalidate?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tformTarget?: string | undefined | SignalLike<string | undefined>;\r\n\t\tformtarget?: string | undefined | SignalLike<string | undefined>;\r\n\t\tframeBorder?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tframeborder?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\theaders?: string | undefined | SignalLike<string | undefined>;\r\n\t\theight?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\thidden?:\r\n\t\t\t| boolean\r\n\t\t\t| 'hidden'\r\n\t\t\t| 'until-found'\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<boolean | 'hidden' | 'until-found' | undefined>;\r\n\t\thigh?: number | undefined | SignalLike<number | undefined>;\r\n\t\thref?: string | undefined | SignalLike<string | undefined>;\r\n\t\threfLang?: string | undefined | SignalLike<string | undefined>;\r\n\t\threflang?: string | undefined | SignalLike<string | undefined>;\r\n\t\thtmlFor?: string | undefined | SignalLike<string | undefined>;\r\n\t\thttpEquiv?: string | undefined | SignalLike<string | undefined>;\r\n\t\t'http-equiv'?: string | undefined | SignalLike<string | undefined>;\r\n\t\ticon?: string | undefined | SignalLike<string | undefined>;\r\n\t\tid?: string | undefined | SignalLike<string | undefined>;\r\n\t\tindeterminate?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tinert?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tinputMode?: string | undefined | SignalLike<string | undefined>;\r\n\t\tinputmode?: string | undefined | SignalLike<string | undefined>;\r\n\t\tintegrity?: string | undefined | SignalLike<string | undefined>;\r\n\t\tis?: string | undefined | SignalLike<string | undefined>;\r\n\t\tkeyParams?: string | undefined | SignalLike<string | undefined>;\r\n\t\tkeyType?: string | undefined | SignalLike<string | undefined>;\r\n\t\tkind?: string | undefined | SignalLike<string | undefined>;\r\n\t\tlabel?: string | undefined | SignalLike<string | undefined>;\r\n\t\tlang?: string | undefined | SignalLike<string | undefined>;\r\n\t\tlist?: string | undefined | SignalLike<string | undefined>;\r\n\t\tloading?:\r\n\t\t\t| 'eager'\r\n\t\t\t| 'lazy'\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<'eager' | 'lazy' | undefined>;\r\n\t\tloop?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tlow?: number | undefined | SignalLike<number | undefined>;\r\n\t\tmanifest?: string | undefined | SignalLike<string | undefined>;\r\n\t\tmarginHeight?: number | undefined | SignalLike<number | undefined>;\r\n\t\tmarginWidth?: number | undefined | SignalLike<number | undefined>;\r\n\t\tmax?: number | string | undefined | SignalLike<string | undefined>;\r\n\t\tmaxLength?: number | undefined | SignalLike<number | undefined>;\r\n\t\tmaxlength?: number | undefined | SignalLike<number | undefined>;\r\n\t\tmedia?: string | undefined | SignalLike<string | undefined>;\r\n\t\tmediaGroup?: string | undefined | SignalLike<string | undefined>;\r\n\t\tmethod?: string | undefined | SignalLike<string | undefined>;\r\n\t\tmin?: number | string | undefined | SignalLike<string | undefined>;\r\n\t\tminLength?: number | undefined | SignalLike<number | undefined>;\r\n\t\tminlength?: number | undefined | SignalLike<number | undefined>;\r\n\t\tmultiple?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tmuted?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tname?: string | undefined | SignalLike<string | undefined>;\r\n\t\tnomodule?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tnonce?: string | undefined | SignalLike<string | undefined>;\r\n\t\tnoValidate?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tnovalidate?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\topen?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\toptimum?: number | undefined | SignalLike<number | undefined>;\r\n\t\tpart?: string | undefined | SignalLike<string | undefined>;\r\n\t\tpattern?: string | undefined | SignalLike<string | undefined>;\r\n\t\tping?: string | undefined | SignalLike<string | undefined>;\r\n\t\tplaceholder?: string | undefined | SignalLike<string | undefined>;\r\n\t\tplaysInline?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tplaysinline?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tposter?: string | undefined | SignalLike<string | undefined>;\r\n\t\tpreload?: string | undefined | SignalLike<string | undefined>;\r\n\t\tradioGroup?: string | undefined | SignalLike<string | undefined>;\r\n\t\treadonly?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\treadOnly?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\treferrerpolicy?:\r\n\t\t\t| 'no-referrer'\r\n\t\t\t| 'no-referrer-when-downgrade'\r\n\t\t\t| 'origin'\r\n\t\t\t| 'origin-when-cross-origin'\r\n\t\t\t| 'same-origin'\r\n\t\t\t| 'strict-origin'\r\n\t\t\t| 'strict-origin-when-cross-origin'\r\n\t\t\t| 'unsafe-url'\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<\r\n\t\t\t\t\t| 'no-referrer'\r\n\t\t\t\t\t| 'no-referrer-when-downgrade'\r\n\t\t\t\t\t| 'origin'\r\n\t\t\t\t\t| 'origin-when-cross-origin'\r\n\t\t\t\t\t| 'same-origin'\r\n\t\t\t\t\t| 'strict-origin'\r\n\t\t\t\t\t| 'strict-origin-when-cross-origin'\r\n\t\t\t\t\t| 'unsafe-url'\r\n\t\t\t\t\t| undefined\r\n\t\t\t  >;\r\n\t\trel?: string | undefined | SignalLike<string | undefined>;\r\n\t\trequired?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\treversed?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\trole?: AriaRole | undefined | SignalLike<AriaRole | undefined>;\r\n\t\trows?: number | undefined | SignalLike<number | undefined>;\r\n\t\trowSpan?: number | undefined | SignalLike<number | undefined>;\r\n\t\trowspan?: number | undefined | SignalLike<number | undefined>;\r\n\t\tsandbox?: string | undefined | SignalLike<string | undefined>;\r\n\t\tscope?: string | undefined | SignalLike<string | undefined>;\r\n\t\tscoped?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tscrolling?: string | undefined | SignalLike<string | undefined>;\r\n\t\tseamless?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tselected?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tshape?: string | undefined | SignalLike<string | undefined>;\r\n\t\tsize?: number | undefined | SignalLike<number | undefined>;\r\n\t\tsizes?: string | undefined | SignalLike<string | undefined>;\r\n\t\tslot?: string | undefined | SignalLike<string | undefined>;\r\n\t\tspan?: number | undefined | SignalLike<number | undefined>;\r\n\t\tspellcheck?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tspellCheck?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tsrc?: string | undefined | SignalLike<string | undefined>;\r\n\t\tsrcSet?: string | undefined | SignalLike<string | undefined>;\r\n\t\tsrcset?: string | undefined | SignalLike<string | undefined>;\r\n\t\tsrcDoc?: string | undefined | SignalLike<string | undefined>;\r\n\t\tsrcdoc?: string | undefined | SignalLike<string | undefined>;\r\n\t\tsrcLang?: string | undefined | SignalLike<string | undefined>;\r\n\t\tsrclang?: string | undefined | SignalLike<string | undefined>;\r\n\t\tstart?: number | undefined | SignalLike<number | undefined>;\r\n\t\tstep?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tstyle?:\r\n\t\t\t| string\r\n\t\t\t| CSSProperties\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<string | CSSProperties | undefined>;\r\n\t\tsummary?: string | undefined | SignalLike<string | undefined>;\r\n\t\ttabIndex?: number | undefined | SignalLike<number | undefined>;\r\n\t\ttabindex?: number | undefined | SignalLike<number | undefined>;\r\n\t\ttarget?: string | undefined | SignalLike<string | undefined>;\r\n\t\ttitle?: string | undefined | SignalLike<string | undefined>;\r\n\t\ttype?: string | undefined | SignalLike<string | undefined>;\r\n\t\tuseMap?: string | undefined | SignalLike<string | undefined>;\r\n\t\tusemap?: string | undefined | SignalLike<string | undefined>;\r\n\t\tvalue?:\r\n\t\t\t| string\r\n\t\t\t| string[]\r\n\t\t\t| number\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<string | string[] | number | undefined>;\r\n\t\tvolume?:\r\n\t\t\t| string\r\n\t\t\t| number\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<string | number | undefined>;\r\n\t\twidth?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\twmode?: string | undefined | SignalLike<string | undefined>;\r\n\t\twrap?: string | undefined | SignalLike<string | undefined>;\r\n\r\n\t\t// Non-standard Attributes\r\n\t\tautocapitalize?:\r\n\t\t\t| 'off'\r\n\t\t\t| 'none'\r\n\t\t\t| 'on'\r\n\t\t\t| 'sentences'\r\n\t\t\t| 'words'\r\n\t\t\t| 'characters'\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<\r\n\t\t\t\t\t| 'off'\r\n\t\t\t\t\t| 'none'\r\n\t\t\t\t\t| 'on'\r\n\t\t\t\t\t| 'sentences'\r\n\t\t\t\t\t| 'words'\r\n\t\t\t\t\t| 'characters'\r\n\t\t\t\t\t| undefined\r\n\t\t\t  >;\r\n\t\tautoCapitalize?:\r\n\t\t\t| 'off'\r\n\t\t\t| 'none'\r\n\t\t\t| 'on'\r\n\t\t\t| 'sentences'\r\n\t\t\t| 'words'\r\n\t\t\t| 'characters'\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<\r\n\t\t\t\t\t| 'off'\r\n\t\t\t\t\t| 'none'\r\n\t\t\t\t\t| 'on'\r\n\t\t\t\t\t| 'sentences'\r\n\t\t\t\t\t| 'words'\r\n\t\t\t\t\t| 'characters'\r\n\t\t\t\t\t| undefined\r\n\t\t\t  >;\r\n\t\tdisablePictureInPicture?:\r\n\t\t\t| boolean\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<boolean | undefined>;\r\n\t\tresults?: number | undefined | SignalLike<number | undefined>;\r\n\t\ttranslate?: 'yes' | 'no' | undefined | SignalLike<'yes' | 'no' | undefined>;\r\n\r\n\t\t// RDFa Attributes\r\n\t\tabout?: string | undefined | SignalLike<string | undefined>;\r\n\t\tdatatype?: string | undefined | SignalLike<string | undefined>;\r\n\t\tinlist?: any;\r\n\t\tprefix?: string | undefined | SignalLike<string | undefined>;\r\n\t\tproperty?: string | undefined | SignalLike<string | undefined>;\r\n\t\tresource?: string | undefined | SignalLike<string | undefined>;\r\n\t\ttypeof?: string | undefined | SignalLike<string | undefined>;\r\n\t\tvocab?: string | undefined | SignalLike<string | undefined>;\r\n\r\n\t\t// Microdata Attributes\r\n\t\titemProp?: string | undefined | SignalLike<string | undefined>;\r\n\t\titemprop?: string | undefined | SignalLike<string | undefined>;\r\n\t\titemScope?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\titemscope?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\titemType?: string | undefined | SignalLike<string | undefined>;\r\n\t\titemtype?: string | undefined | SignalLike<string | undefined>;\r\n\t\titemID?: string | undefined | SignalLike<string | undefined>;\r\n\t\titemid?: string | undefined | SignalLike<string | undefined>;\r\n\t\titemRef?: string | undefined | SignalLike<string | undefined>;\r\n\t\titemref?: string | undefined | SignalLike<string | undefined>;\r\n\t}\r\n\r\n\texport type DetailedHTMLProps<\r\n\t\tHA extends HTMLAttributes<RefType>,\r\n\t\tRefType extends EventTarget = EventTarget\r\n\t> = HA;\r\n\r\n\texport interface HTMLMarqueeElement extends HTMLElement {\r\n\t\tbehavior?:\r\n\t\t\t| 'scroll'\r\n\t\t\t| 'slide'\r\n\t\t\t| 'alternate'\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<'scroll' | 'slide' | 'alternate' | undefined>;\r\n\t\tbgColor?: string | undefined | SignalLike<string | undefined>;\r\n\t\tdirection?:\r\n\t\t\t| 'left'\r\n\t\t\t| 'right'\r\n\t\t\t| 'up'\r\n\t\t\t| 'down'\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<'left' | 'right' | 'up' | 'down' | undefined>;\r\n\t\theight?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\thspace?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tloop?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tscrollAmount?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\tscrollDelay?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\ttrueSpeed?: boolean | undefined | SignalLike<boolean | undefined>;\r\n\t\tvspace?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t\twidth?:\r\n\t\t\t| number\r\n\t\t\t| string\r\n\t\t\t| undefined\r\n\t\t\t| SignalLike<number | string | undefined>;\r\n\t}\r\n\r\n\texport interface IntrinsicElements {\r\n\t\t// HTML\r\n\t\ta: HTMLAttributes<HTMLAnchorElement>;\r\n\t\tabbr: HTMLAttributes<HTMLElement>;\r\n\t\taddress: HTMLAttributes<HTMLElement>;\r\n\t\tarea: HTMLAttributes<HTMLAreaElement>;\r\n\t\tarticle: HTMLAttributes<HTMLElement>;\r\n\t\taside: HTMLAttributes<HTMLElement>;\r\n\t\taudio: HTMLAttributes<HTMLAudioElement>;\r\n\t\tb: HTMLAttributes<HTMLElement>;\r\n\t\tbase: HTMLAttributes<HTMLBaseElement>;\r\n\t\tbdi: HTMLAttributes<HTMLElement>;\r\n\t\tbdo: HTMLAttributes<HTMLElement>;\r\n\t\tbig: HTMLAttributes<HTMLElement>;\r\n\t\tblockquote: HTMLAttributes<HTMLQuoteElement>;\r\n\t\tbody: HTMLAttributes<HTMLBodyElement>;\r\n\t\tbr: HTMLAttributes<HTMLBRElement>;\r\n\t\tbutton: HTMLAttributes<HTMLButtonElement>;\r\n\t\tcanvas: HTMLAttributes<HTMLCanvasElement>;\r\n\t\tcaption: HTMLAttributes<HTMLTableCaptionElement>;\r\n\t\tcite: HTMLAttributes<HTMLElement>;\r\n\t\tcode: HTMLAttributes<HTMLElement>;\r\n\t\tcol: HTMLAttributes<HTMLTableColElement>;\r\n\t\tcolgroup: HTMLAttributes<HTMLTableColElement>;\r\n\t\tdata: HTMLAttributes<HTMLDataElement>;\r\n\t\tdatalist: HTMLAttributes<HTMLDataListElement>;\r\n\t\tdd: HTMLAttributes<HTMLElement>;\r\n\t\tdel: HTMLAttributes<HTMLModElement>;\r\n\t\tdetails: HTMLAttributes<HTMLDetailsElement>;\r\n\t\tdfn: HTMLAttributes<HTMLElement>;\r\n\t\tdialog: HTMLAttributes<HTMLDialogElement>;\r\n\t\tdiv: HTMLAttributes<HTMLDivElement>;\r\n\t\tdl: HTMLAttributes<HTMLDListElement>;\r\n\t\tdt: HTMLAttributes<HTMLElement>;\r\n\t\tem: HTMLAttributes<HTMLElement>;\r\n\t\tembed: HTMLAttributes<HTMLEmbedElement>;\r\n\t\tfieldset: HTMLAttributes<HTMLFieldSetElement>;\r\n\t\tfigcaption: HTMLAttributes<HTMLElement>;\r\n\t\tfigure: HTMLAttributes<HTMLElement>;\r\n\t\tfooter: HTMLAttributes<HTMLElement>;\r\n\t\tform: HTMLAttributes<HTMLFormElement>;\r\n\t\th1: HTMLAttributes<HTMLHeadingElement>;\r\n\t\th2: HTMLAttributes<HTMLHeadingElement>;\r\n\t\th3: HTMLAttributes<HTMLHeadingElement>;\r\n\t\th4: HTMLAttributes<HTMLHeadingElement>;\r\n\t\th5: HTMLAttributes<HTMLHeadingElement>;\r\n\t\th6: HTMLAttributes<HTMLHeadingElement>;\r\n\t\thead: HTMLAttributes<HTMLHeadElement>;\r\n\t\theader: HTMLAttributes<HTMLElement>;\r\n\t\thgroup: HTMLAttributes<HTMLElement>;\r\n\t\thr: HTMLAttributes<HTMLHRElement>;\r\n\t\thtml: HTMLAttributes<HTMLHtmlElement>;\r\n\t\ti: HTMLAttributes<HTMLElement>;\r\n\t\tiframe: HTMLAttributes<HTMLIFrameElement>;\r\n\t\timg: HTMLAttributes<HTMLImageElement>;\r\n\t\tinput: HTMLAttributes<HTMLInputElement>;\r\n\t\tins: HTMLAttributes<HTMLModElement>;\r\n\t\tkbd: HTMLAttributes<HTMLElement>;\r\n\t\tkeygen: HTMLAttributes<HTMLUnknownElement>;\r\n\t\tlabel: HTMLAttributes<HTMLLabelElement>;\r\n\t\tlegend: HTMLAttributes<HTMLLegendElement>;\r\n\t\tli: HTMLAttributes<HTMLLIElement>;\r\n\t\tlink: HTMLAttributes<HTMLLinkElement>;\r\n\t\tmain: HTMLAttributes<HTMLElement>;\r\n\t\tmap: HTMLAttributes<HTMLMapElement>;\r\n\t\tmark: HTMLAttributes<HTMLElement>;\r\n\t\tmarquee: HTMLAttributes<HTMLMarqueeElement>;\r\n\t\tmenu: HTMLAttributes<HTMLMenuElement>;\r\n\t\tmenuitem: HTMLAttributes<HTMLUnknownElement>;\r\n\t\tmeta: HTMLAttributes<HTMLMetaElement>;\r\n\t\tmeter: HTMLAttributes<HTMLMeterElement>;\r\n\t\tnav: HTMLAttributes<HTMLElement>;\r\n\t\tnoscript: HTMLAttributes<HTMLElement>;\r\n\t\tobject: HTMLAttributes<HTMLObjectElement>;\r\n\t\tol: HTMLAttributes<HTMLOListElement>;\r\n\t\toptgroup: HTMLAttributes<HTMLOptGroupElement>;\r\n\t\toption: HTMLAttributes<HTMLOptionElement>;\r\n\t\toutput: HTMLAttributes<HTMLOutputElement>;\r\n\t\tp: HTMLAttributes<HTMLParagraphElement>;\r\n\t\tparam: HTMLAttributes<HTMLParamElement>;\r\n\t\tpicture: HTMLAttributes<HTMLPictureElement>;\r\n\t\tpre: HTMLAttributes<HTMLPreElement>;\r\n\t\tprogress: HTMLAttributes<HTMLProgressElement>;\r\n\t\tq: HTMLAttributes<HTMLQuoteElement>;\r\n\t\trp: HTMLAttributes<HTMLElement>;\r\n\t\trt: HTMLAttributes<HTMLElement>;\r\n\t\truby: HTMLAttributes<HTMLElement>;\r\n\t\ts: HTMLAttributes<HTMLElement>;\r\n\t\tsamp: HTMLAttributes<HTMLElement>;\r\n\t\tscript: HTMLAttributes<HTMLScriptElement>;\r\n\t\tsearch: HTMLAttributes<HTMLElement>;\r\n\t\tsection: HTMLAttributes<HTMLElement>;\r\n\t\tselect: HTMLAttributes<HTMLSelectElement>;\r\n\t\tslot: HTMLAttributes<HTMLSlotElement>;\r\n\t\tsmall: HTMLAttributes<HTMLElement>;\r\n\t\tsource: HTMLAttributes<HTMLSourceElement>;\r\n\t\tspan: HTMLAttributes<HTMLSpanElement>;\r\n\t\tstrong: HTMLAttributes<HTMLElement>;\r\n\t\tstyle: HTMLAttributes<HTMLStyleElement>;\r\n\t\tsub: HTMLAttributes<HTMLElement>;\r\n\t\tsummary: HTMLAttributes<HTMLElement>;\r\n\t\tsup: HTMLAttributes<HTMLElement>;\r\n\t\ttable: HTMLAttributes<HTMLTableElement>;\r\n\t\ttbody: HTMLAttributes<HTMLTableSectionElement>;\r\n\t\ttd: HTMLAttributes<HTMLTableCellElement>;\r\n\t\ttextarea: HTMLAttributes<HTMLTextAreaElement>;\r\n\t\ttfoot: HTMLAttributes<HTMLTableSectionElement>;\r\n\t\tth: HTMLAttributes<HTMLTableCellElement>;\r\n\t\tthead: HTMLAttributes<HTMLTableSectionElement>;\r\n\t\ttime: HTMLAttributes<HTMLTimeElement>;\r\n\t\ttitle: HTMLAttributes<HTMLTitleElement>;\r\n\t\ttr: HTMLAttributes<HTMLTableRowElement>;\r\n\t\ttrack: HTMLAttributes<HTMLTrackElement>;\r\n\t\tu: HTMLAttributes<HTMLElement>;\r\n\t\tul: HTMLAttributes<HTMLUListElement>;\r\n\t\tvar: HTMLAttributes<HTMLElement>;\r\n\t\tvideo: HTMLAttributes<HTMLVideoElement>;\r\n\t\twbr: HTMLAttributes<HTMLElement>;\r\n\r\n\t\t//SVG\r\n\t\tsvg: SVGAttributes<SVGSVGElement>;\r\n\t\tanimate: SVGAttributes<SVGAnimateElement>;\r\n\t\tcircle: SVGAttributes<SVGCircleElement>;\r\n\t\tanimateMotion: SVGAttributes<SVGAnimateMotionElement>;\r\n\t\tanimateTransform: SVGAttributes<SVGAnimateTransformElement>;\r\n\t\tclipPath: SVGAttributes<SVGClipPathElement>;\r\n\t\tdefs: SVGAttributes<SVGDefsElement>;\r\n\t\tdesc: SVGAttributes<SVGDescElement>;\r\n\t\tellipse: SVGAttributes<SVGEllipseElement>;\r\n\t\tfeBlend: SVGAttributes<SVGFEBlendElement>;\r\n\t\tfeColorMatrix: SVGAttributes<SVGFEColorMatrixElement>;\r\n\t\tfeComponentTransfer: SVGAttributes<SVGFEComponentTransferElement>;\r\n\t\tfeComposite: SVGAttributes<SVGFECompositeElement>;\r\n\t\tfeConvolveMatrix: SVGAttributes<SVGFEConvolveMatrixElement>;\r\n\t\tfeDiffuseLighting: SVGAttributes<SVGFEDiffuseLightingElement>;\r\n\t\tfeDisplacementMap: SVGAttributes<SVGFEDisplacementMapElement>;\r\n\t\tfeDistantLight: SVGAttributes<SVGFEDistantLightElement>;\r\n\t\tfeDropShadow: SVGAttributes<SVGFEDropShadowElement>;\r\n\t\tfeFlood: SVGAttributes<SVGFEFloodElement>;\r\n\t\tfeFuncA: SVGAttributes<SVGFEFuncAElement>;\r\n\t\tfeFuncB: SVGAttributes<SVGFEFuncBElement>;\r\n\t\tfeFuncG: SVGAttributes<SVGFEFuncGElement>;\r\n\t\tfeFuncR: SVGAttributes<SVGFEFuncRElement>;\r\n\t\tfeGaussianBlur: SVGAttributes<SVGFEGaussianBlurElement>;\r\n\t\tfeImage: SVGAttributes<SVGFEImageElement>;\r\n\t\tfeMerge: SVGAttributes<SVGFEMergeElement>;\r\n\t\tfeMergeNode: SVGAttributes<SVGFEMergeNodeElement>;\r\n\t\tfeMorphology: SVGAttributes<SVGFEMorphologyElement>;\r\n\t\tfeOffset: SVGAttributes<SVGFEOffsetElement>;\r\n\t\tfePointLight: SVGAttributes<SVGFEPointLightElement>;\r\n\t\tfeSpecularLighting: SVGAttributes<SVGFESpecularLightingElement>;\r\n\t\tfeSpotLight: SVGAttributes<SVGFESpotLightElement>;\r\n\t\tfeTile: SVGAttributes<SVGFETileElement>;\r\n\t\tfeTurbulence: SVGAttributes<SVGFETurbulenceElement>;\r\n\t\tfilter: SVGAttributes<SVGFilterElement>;\r\n\t\tforeignObject: SVGAttributes<SVGForeignObjectElement>;\r\n\t\tg: SVGAttributes<SVGGElement>;\r\n\t\timage: SVGAttributes<SVGImageElement>;\r\n\t\tline: SVGAttributes<SVGLineElement>;\r\n\t\tlinearGradient: SVGAttributes<SVGLinearGradientElement>;\r\n\t\tmarker: SVGAttributes<SVGMarkerElement>;\r\n\t\tmask: SVGAttributes<SVGMaskElement>;\r\n\t\tmetadata: SVGAttributes<SVGMetadataElement>;\r\n\t\tmpath: SVGAttributes<SVGMPathElement>;\r\n\t\tpath: SVGAttributes<SVGPathElement>;\r\n\t\tpattern: SVGAttributes<SVGPatternElement>;\r\n\t\tpolygon: SVGAttributes<SVGPolygonElement>;\r\n\t\tpolyline: SVGAttributes<SVGPolylineElement>;\r\n\t\tradialGradient: SVGAttributes<SVGRadialGradientElement>;\r\n\t\trect: SVGAttributes<SVGRectElement>;\r\n\t\tset: SVGAttributes<SVGSetElement>;\r\n\t\tstop: SVGAttributes<SVGStopElement>;\r\n\t\tswitch: SVGAttributes<SVGSwitchElement>;\r\n\t\tsymbol: SVGAttributes<SVGSymbolElement>;\r\n\t\ttext: SVGAttributes<SVGTextElement>;\r\n\t\ttextPath: SVGAttributes<SVGTextPathElement>;\r\n\t\ttspan: SVGAttributes<SVGTSpanElement>;\r\n\t\tuse: SVGAttributes<SVGUseElement>;\r\n\t\tview: SVGAttributes<SVGViewElement>;\r\n\t}\r\n}\r\n"
        ],
        [
            "src/options.js",
            "import { _catchError } from './diff/catch-error';\r\n\r\n/**\r\n * The `option` object can potentially contain callback functions\r\n * that are called during various stages of our renderer. This is the\r\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\r\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\r\n * for a full list of available option hooks (most editors/IDEs allow you to\r\n * ctrl+click or cmd+click on mac the type definition below).\r\n * @type {Options}\r\n */\r\nconst options = {\r\n\t_catchError\r\n};\r\n\r\nexport default options;\r\n"
        ],
        [
            "src/util.js",
            "import { EMPTY_ARR } from './constants';\r\n\r\nexport const isArray = Array.isArray;\r\n\r\n/**\r\n * Assign properties from `props` to `obj`\r\n * @template O, P The obj and props types\r\n * @param {O} obj The object to copy properties to\r\n * @param {P} props The object to copy properties from\r\n * @returns {O & P}\r\n */\r\nexport function assign(obj, props) {\r\n\t// @ts-expect-error We change the type of `obj` to be `O & P`\r\n\tfor (let i in props) obj[i] = props[i];\r\n\treturn /** @type {O & P} */ (obj);\r\n}\r\n\r\n/**\r\n * Remove a child node from its parent if attached. This is a workaround for\r\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\r\n * is smaller than including a dedicated polyfill.\r\n * @param {preact.ContainerNode} node The node to remove\r\n */\r\nexport function removeNode(node) {\r\n\tlet parentNode = node.parentNode;\r\n\tif (parentNode) parentNode.removeChild(node);\r\n}\r\n\r\nexport const slice = EMPTY_ARR.slice;\r\n"
        ],
        [
            "test/node/index.test.js",
            "import { expect } from 'chai';\r\nimport * as preact from '../../';\r\n\r\ndescribe('build artifact', () => {\r\n\t// #1075 Check that the build artifact has the correct exports\r\n\tit('should have exported properties', () => {\r\n\t\texpect(preact).to.be.an('object');\r\n\t\texpect(preact).to.have.property('createElement');\r\n\t\texpect(preact).to.have.property('h');\r\n\t\texpect(preact).to.have.property('Component');\r\n\t\texpect(preact).to.have.property('render');\r\n\t\texpect(preact).to.have.property('hydrate');\r\n\t\t// expect(preact).to.have.property('options');\r\n\t});\r\n});\r\n"
        ],
        [
            "test/shared/createElement.test.js",
            "import { createElement } from '../../';\r\nimport { expect } from 'chai';\r\n\r\nconst h = createElement;\r\n/** @jsx createElement */\r\n/*eslint-env browser, mocha */\r\n\r\n// const buildVNode = (nodeName, attributes, children=[]) => ({\r\n// \tnodeName,\r\n// \tchildren,\r\n// \tattributes,\r\n// \tkey: attributes && attributes.key\r\n// });\r\n\r\ndescribe('createElement(jsx)', () => {\r\n\tit('should return a VNode', () => {\r\n\t\tlet r;\r\n\t\texpect(() => (r = h('foo'))).not.to.throw();\r\n\t\texpect(r).to.be.an('object');\r\n\t\t// expect(r).to.be.an.instanceof(VNode);\r\n\t\texpect(r).to.have.property('type', 'foo');\r\n\t\texpect(r).to.have.property('props').that.eql({});\r\n\t\t// expect(r).to.have.deep.property('props.children').that.eql(null);\r\n\t});\r\n\r\n\tit('should set VNode#type property', () => {\r\n\t\texpect(<div />).to.have.property('type', 'div');\r\n\t\tfunction Test() {\r\n\t\t\treturn <div />;\r\n\t\t}\r\n\t\texpect(<Test />).to.have.property('type', Test);\r\n\t});\r\n\r\n\tit('should set VNode.constructor property to prevent json injection', () => {\r\n\t\tconst vnode = <span />;\r\n\t\texpect(vnode.constructor).to.equal(undefined);\r\n\t});\r\n\r\n\tit('should set VNode#props property', () => {\r\n\t\tconst props = {};\r\n\t\texpect(h('div', props).props).to.deep.equal(props);\r\n\t});\r\n\r\n\tit('should set VNode#key property', () => {\r\n\t\texpect(<div />).to.have.property('key').that.does.not.exist;\r\n\t\texpect(<div a=\"a\" />).to.have.property('key').that.does.not.exist;\r\n\t\texpect(<div key=\"1\" />).to.have.property('key', '1');\r\n\t});\r\n\r\n\tit('should not set VNode#props.key property', () => {\r\n\t\texpect(<div />).to.not.have.nested.property('props.key');\r\n\t\texpect(<div key=\"1\" />).to.not.have.nested.property('props.key');\r\n\t\texpect(<div key={0} />).to.not.have.nested.property('props.key');\r\n\t\texpect(<div key={''} />).to.not.have.nested.property('props.key');\r\n\t});\r\n\r\n\tit('should set VNode#ref property', () => {\r\n\t\texpect(<div />).to.have.property('ref').that.does.not.exist;\r\n\t\texpect(<div a=\"a\" />).to.have.property('ref').that.does.not.exist;\r\n\t\tconst emptyFunction = () => {};\r\n\t\texpect(<div ref={emptyFunction} />).to.have.property('ref', emptyFunction);\r\n\t});\r\n\r\n\tit('should not set VNode#props.ref property', () => {\r\n\t\texpect(<div />).to.not.have.nested.property('props.ref');\r\n\t\texpect(<div ref={() => {}} />).to.not.have.nested.property('props.ref');\r\n\t});\r\n\r\n\tit('should have ordered VNode properties', () => {\r\n\t\texpect(Object.keys(<div />).filter(key => !/^_/.test(key))).to.deep.equal([\r\n\t\t\t'type',\r\n\t\t\t'props',\r\n\t\t\t'key',\r\n\t\t\t'ref',\r\n\t\t\t'constructor'\r\n\t\t]);\r\n\t});\r\n\r\n\tit('should preserve raw props', () => {\r\n\t\tlet props = { foo: 'bar', baz: 10, func: () => {} },\r\n\t\t\tr = h('foo', props);\r\n\t\texpect(r).to.be.an('object').with.property('props').that.deep.equals(props);\r\n\t});\r\n\r\n\tit('should support element children', () => {\r\n\t\tlet kid1 = h('bar');\r\n\t\tlet kid2 = h('baz');\r\n\t\tlet r = h('foo', null, kid1, kid2);\r\n\r\n\t\texpect(r)\r\n\t\t\t.to.be.an('object')\r\n\t\t\t.with.nested.deep.property('props.children', [kid1, kid2]);\r\n\t});\r\n\r\n\tit('should support multiple element children, given as arg list', () => {\r\n\t\tlet kid1 = h('bar');\r\n\t\tlet kid3 = h('test');\r\n\t\tlet kid2 = h('baz', null, kid3);\r\n\r\n\t\tlet r = h('foo', null, kid1, kid2);\r\n\r\n\t\texpect(r)\r\n\t\t\t.to.be.an('object')\r\n\t\t\t.with.nested.deep.property('props.children', [kid1, kid2]);\r\n\t});\r\n\r\n\tit('should handle multiple element children, given as an array', () => {\r\n\t\tlet kid1 = h('bar');\r\n\t\tlet kid3 = h('test');\r\n\t\tlet kid2 = h('baz', null, kid3);\r\n\r\n\t\tlet r = h('foo', null, [kid1, kid2]);\r\n\r\n\t\texpect(r)\r\n\t\t\t.to.be.an('object')\r\n\t\t\t.with.nested.deep.property('props.children', [kid1, kid2]);\r\n\t});\r\n\r\n\tit('should support nested children', () => {\r\n\t\tconst m = x => {\r\n\t\t\tconst result = h(x);\r\n\t\t\tdelete result._original;\r\n\t\t\treturn result;\r\n\t\t};\r\n\t\texpect(h('foo', null, m('a'), [m('b'), m('c')], m('d')))\r\n\t\t\t.to.have.nested.property('props.children')\r\n\t\t\t.that.eql([m('a'), [m('b'), m('c')], m('d')]);\r\n\r\n\t\texpect(h('foo', null, [m('a'), [m('b'), m('c')], m('d')]))\r\n\t\t\t.to.have.nested.property('props.children')\r\n\t\t\t.that.eql([m('a'), [m('b'), m('c')], m('d')]);\r\n\r\n\t\texpect(h('foo', { children: [m('a'), [m('b'), m('c')], m('d')] }))\r\n\t\t\t.to.have.nested.property('props.children')\r\n\t\t\t.that.eql([m('a'), [m('b'), m('c')], m('d')]);\r\n\r\n\t\texpect(h('foo', { children: [[m('a'), [m('b'), m('c')], m('d')]] }))\r\n\t\t\t.to.have.nested.property('props.children')\r\n\t\t\t.that.eql([[m('a'), [m('b'), m('c')], m('d')]]);\r\n\r\n\t\texpect(h('foo', { children: m('a') }))\r\n\t\t\t.to.have.nested.property('props.children')\r\n\t\t\t.that.eql(m('a'));\r\n\r\n\t\texpect(h('foo', { children: 'a' }))\r\n\t\t\t.to.have.nested.property('props.children')\r\n\t\t\t.that.eql('a');\r\n\t});\r\n\r\n\tit('should support text children', () => {\r\n\t\tlet r = h('foo', null, 'textstuff');\r\n\r\n\t\texpect(r)\r\n\t\t\t.to.be.an('object')\r\n\t\t\t.with.nested.property('props.children')\r\n\t\t\t.that.equals('textstuff');\r\n\t});\r\n\r\n\tit('should override children if null is provided as an argument', () => {\r\n\t\tlet r = h('foo', { foo: 'bar', children: 'baz' }, null);\r\n\r\n\t\texpect(r).to.be.an('object').to.deep.nested.include({\r\n\t\t\t'props.foo': 'bar',\r\n\t\t\t'props.children': null\r\n\t\t});\r\n\t});\r\n\r\n\tit('should NOT set children prop when unspecified', () => {\r\n\t\tlet r = h('foo', { foo: 'bar' });\r\n\r\n\t\texpect(r)\r\n\t\t\t.to.be.an('object')\r\n\t\t\t.to.have.nested.property('props.foo')\r\n\t\t\t.not.to.have.nested.property('props.children');\r\n\t});\r\n\r\n\tit('should NOT merge adjacent text children', () => {\r\n\t\tconst bar = h('bar');\r\n\t\tconst barClone = h('bar');\r\n\t\tconst baz = h('baz');\r\n\t\tconst bazClone = h('baz');\r\n\t\tconst baz2 = h('baz');\r\n\t\tconst baz2Clone = h('baz');\r\n\r\n\t\tdelete bar._original;\r\n\t\tdelete barClone._original;\r\n\t\tdelete baz._original;\r\n\t\tdelete bazClone._original;\r\n\t\tdelete baz2._original;\r\n\t\tdelete baz2Clone._original;\r\n\r\n\t\tlet r = h(\r\n\t\t\t'foo',\r\n\t\t\tnull,\r\n\t\t\t'one',\r\n\t\t\t'two',\r\n\t\t\tbar,\r\n\t\t\t'three',\r\n\t\t\tbaz,\r\n\t\t\tbaz2,\r\n\t\t\t'four',\r\n\t\t\tnull,\r\n\t\t\t'five',\r\n\t\t\t'six'\r\n\t\t);\r\n\r\n\t\texpect(r)\r\n\t\t\t.to.be.an('object')\r\n\t\t\t.with.nested.property('props.children')\r\n\t\t\t.that.deep.equals([\r\n\t\t\t\t'one',\r\n\t\t\t\t'two',\r\n\t\t\t\tbarClone,\r\n\t\t\t\t'three',\r\n\t\t\t\tbazClone,\r\n\t\t\t\tbaz2Clone,\r\n\t\t\t\t'four',\r\n\t\t\t\tnull,\r\n\t\t\t\t'five',\r\n\t\t\t\t'six'\r\n\t\t\t]);\r\n\t});\r\n\r\n\tit('should not merge nested adjacent text children', () => {\r\n\t\tlet r = h(\r\n\t\t\t'foo',\r\n\t\t\tnull,\r\n\t\t\t'one',\r\n\t\t\t['two', null, 'three'],\r\n\t\t\tnull,\r\n\t\t\t['four', null, 'five', null],\r\n\t\t\t'six',\r\n\t\t\tnull\r\n\t\t);\r\n\r\n\t\texpect(r)\r\n\t\t\t.to.be.an('object')\r\n\t\t\t.with.nested.property('props.children')\r\n\t\t\t.that.deep.equals([\r\n\t\t\t\t'one',\r\n\t\t\t\t['two', null, 'three'],\r\n\t\t\t\tnull,\r\n\t\t\t\t['four', null, 'five', null],\r\n\t\t\t\t'six',\r\n\t\t\t\tnull\r\n\t\t\t]);\r\n\t});\r\n\r\n\tit('should not merge children that are boolean values', () => {\r\n\t\tlet r = h('foo', null, 'one', true, 'two', false, 'three');\r\n\r\n\t\texpect(r)\r\n\t\t\t.to.be.an('object')\r\n\t\t\t.with.nested.property('props.children')\r\n\t\t\t.that.deep.equals(['one', true, 'two', false, 'three']);\r\n\t});\r\n\r\n\tit('should not merge children of components', () => {\r\n\t\tlet Component = ({ children }) => children;\r\n\t\tlet r = h(Component, null, 'x', 'y');\r\n\r\n\t\texpect(r)\r\n\t\t\t.to.be.an('object')\r\n\t\t\t.with.nested.property('props.children')\r\n\t\t\t.that.deep.equals(['x', 'y']);\r\n\t});\r\n\r\n\tit('should respect defaultProps', () => {\r\n\t\tconst Component = ({ children }) => children;\r\n\t\tComponent.defaultProps = { foo: 'bar' };\r\n\t\texpect(h(Component).props).to.deep.equal({ foo: 'bar' });\r\n\t});\r\n\r\n\tit('should override defaultProps', () => {\r\n\t\tconst Component = ({ children }) => children;\r\n\t\tComponent.defaultProps = { foo: 'default' };\r\n\t\texpect(h(Component, { foo: 'bar' }).props).to.deep.equal({ foo: 'bar' });\r\n\t});\r\n\r\n\tit('should ignore props.children if children are manually specified', () => {\r\n\t\tconst element = (\r\n\t\t\t<div a children={['a', 'b']}>\r\n\t\t\t\tc\r\n\t\t\t</div>\r\n\t\t);\r\n\t\tconst childrenless = <div a>c</div>;\r\n\t\tdelete element._original;\r\n\t\tdelete childrenless._original;\r\n\r\n\t\texpect(element).to.eql(childrenless);\r\n\t});\r\n});\r\n"
        ],
        [
            "test/shared/exports.test.js",
            "import {\r\n\tcreateElement,\r\n\th,\r\n\tcreateContext,\r\n\tComponent,\r\n\tFragment,\r\n\trender,\r\n\thydrate,\r\n\tcloneElement,\r\n\toptions,\r\n\tcreateRef,\r\n\ttoChildArray,\r\n\tisValidElement\r\n} from '../../';\r\nimport { expect } from 'chai';\r\n\r\ndescribe('preact', () => {\r\n\tit('should be available as named exports', () => {\r\n\t\texpect(h).to.be.a('function');\r\n\t\texpect(createElement).to.be.a('function');\r\n\t\texpect(Component).to.be.a('function');\r\n\t\texpect(Fragment).to.exist;\r\n\t\texpect(render).to.be.a('function');\r\n\t\texpect(hydrate).to.be.a('function');\r\n\t\texpect(cloneElement).to.be.a('function');\r\n\t\texpect(createContext).to.be.a('function');\r\n\t\texpect(options).to.exist.and.be.an('object');\r\n\t\texpect(createRef).to.be.a('function');\r\n\t\texpect(isValidElement).to.be.a('function');\r\n\t\texpect(toChildArray).to.be.a('function');\r\n\t});\r\n});\r\n"
        ],
        [
            "test/shared/isValidElementTests.js",
            "/** @jsx createElement */\r\n\r\nexport function isValidElementTests(\r\n\texpect,\r\n\tisValidElement,\r\n\tcreateElement,\r\n\tComponent\r\n) {\r\n\tdescribe('isValidElement', () => {\r\n\t\tit('should check if the argument is a valid vnode', () => {\r\n\t\t\t// Failure cases\r\n\t\t\texpect(isValidElement(123)).to.equal(false);\r\n\t\t\texpect(isValidElement(0)).to.equal(false);\r\n\t\t\texpect(isValidElement('')).to.equal(false);\r\n\t\t\texpect(isValidElement('abc')).to.equal(false);\r\n\t\t\texpect(isValidElement(null)).to.equal(false);\r\n\t\t\texpect(isValidElement(undefined)).to.equal(false);\r\n\t\t\texpect(isValidElement(true)).to.equal(false);\r\n\t\t\texpect(isValidElement(false)).to.equal(false);\r\n\t\t\texpect(isValidElement([])).to.equal(false);\r\n\t\t\texpect(isValidElement([123])).to.equal(false);\r\n\t\t\texpect(isValidElement([null])).to.equal(false);\r\n\r\n\t\t\t// Success cases\r\n\t\t\texpect(isValidElement(<div />)).to.equal(true);\r\n\r\n\t\t\tconst Foo = () => 123;\r\n\t\t\texpect(isValidElement(<Foo />)).to.equal(true);\r\n\t\t\tclass Bar extends Component {\r\n\t\t\t\trender() {\r\n\t\t\t\t\treturn <div />;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texpect(isValidElement(<Bar />)).to.equal(true);\r\n\t\t});\r\n\t});\r\n}\r\n"
        ],
        [
            "test/ts/Component-test.tsx",
            "import 'mocha';\r\nimport { expect } from 'chai';\r\nimport { createElement, Component, RenderableProps, Fragment } from '../../';\r\n\r\nexport class ContextComponent extends Component<{ foo: string }> {\r\n\tgetChildContext() {\r\n\t\treturn { something: 2 };\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nexport interface SimpleComponentProps {\r\n\tinitialName: string | null;\r\n}\r\n\r\nexport interface SimpleState {\r\n\tname: string | null;\r\n}\r\n\r\nexport class SimpleComponent extends Component<\r\n\tSimpleComponentProps,\r\n\tSimpleState\r\n> {\r\n\tconstructor(props: SimpleComponentProps) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tname: props.initialName\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (!this.state.name) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tconst { initialName, children } = this.props;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<span>\r\n\t\t\t\t\t{initialName} / {this.state.name}\r\n\t\t\t\t</span>\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass DestructuringRenderPropsComponent extends Component<\r\n\tSimpleComponentProps,\r\n\tSimpleState\r\n> {\r\n\tconstructor(props: SimpleComponentProps) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tname: props.initialName\r\n\t\t};\r\n\t}\r\n\r\n\trender({ initialName, children }: RenderableProps<SimpleComponentProps>) {\r\n\t\tif (!this.state.name) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<span>\r\n\t\t\t\t{this.props.initialName} / {this.state.name}\r\n\t\t\t</span>\r\n\t\t);\r\n\t}\r\n}\r\n\r\ninterface RandomChildrenComponentProps {\r\n\tnum?: number;\r\n\tval?: string;\r\n\tspan?: boolean;\r\n}\r\n\r\nclass RandomChildrenComponent extends Component<RandomChildrenComponentProps> {\r\n\trender() {\r\n\t\tconst { num, val, span } = this.props;\r\n\t\tif (num) {\r\n\t\t\treturn num;\r\n\t\t}\r\n\t\tif (val) {\r\n\t\t\treturn val;\r\n\t\t}\r\n\t\tif (span) {\r\n\t\t\treturn <span>hi</span>;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nclass StaticComponent extends Component<SimpleComponentProps, SimpleState> {\r\n\tstatic getDerivedStateFromProps(\r\n\t\tprops: SimpleComponentProps,\r\n\t\tstate: SimpleState\r\n\t): Partial<SimpleState> {\r\n\t\treturn {\r\n\t\t\t...props,\r\n\t\t\t...state\r\n\t\t};\r\n\t}\r\n\r\n\tstatic getDerivedStateFromError(err: Error) {\r\n\t\treturn {\r\n\t\t\tname: err.message\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nfunction MapperItem(props: { foo: number }) {\r\n\treturn <div />;\r\n}\r\n\r\nfunction Mapper() {\r\n\treturn [1, 2, 3].map(x => <MapperItem foo={x} key={x} />);\r\n}\r\n\r\nclass Button extends Component {\r\n\thandleClick(this: HTMLButtonElement, event: MouseEvent) {\r\n\t\tevent.preventDefault();\r\n\t\tif (event.target instanceof HTMLElement) {\r\n\t\t\tconsole.log(event.target.localName);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn <button onClick={this.handleClick}>{this.props.children}</button>;\r\n\t}\r\n}\r\n\r\ndescribe('Component', () => {\r\n\tconst component = new SimpleComponent({ initialName: 'da name' });\r\n\r\n\tit('has state', () => {\r\n\t\texpect(component.state.name).to.eq('da name');\r\n\t});\r\n\r\n\tit('has props', () => {\r\n\t\texpect(component.props.initialName).to.eq('da name');\r\n\t});\r\n\r\n\tit('has no base when not mounted', () => {\r\n\t\texpect(component.base).to.not.exist;\r\n\t});\r\n\r\n\tdescribe('setState', () => {\r\n\t\t// No need to execute these tests. because we only need to check if\r\n\t\t// the types are working. Executing them would require the DOM.\r\n\t\t// TODO: Run TS tests in our standard karma setup\r\n\t\tit.skip('can be used with an object', () => {\r\n\t\t\tcomponent.setState({ name: 'another name' });\r\n\t\t});\r\n\r\n\t\tit.skip('can be used with a function', () => {\r\n\t\t\tconst updater = (state: any, props: any) => ({\r\n\t\t\t\tname: `${state.name} - ${props.initialName}`\r\n\t\t\t});\r\n\t\t\tcomponent.setState(updater);\r\n\t\t});\r\n\t});\r\n\r\n\tdescribe('render', () => {\r\n\t\tit('can return null', () => {\r\n\t\t\tconst comp = new SimpleComponent({ initialName: null });\r\n\t\t\tconst actual = comp.render();\r\n\r\n\t\t\texpect(actual).to.eq(null);\r\n\t\t});\r\n\t});\r\n\r\n\tdescribe('Fragment', () => {\r\n\t\tit('should render nested Fragments', () => {\r\n\t\t\tvar vnode = (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<Fragment>foo</Fragment>\r\n\t\t\t\t\tbar\r\n\t\t\t\t</Fragment>\r\n\t\t\t);\r\n\r\n\t\t\texpect(vnode.type).to.be.equal(Fragment);\r\n\t\t});\r\n\t});\r\n});\r\n"
        ],
        [
            "test/ts/custom-elements.tsx",
            "import { createElement, Component, createContext } from '../../';\r\n\r\ndeclare module '../../' {\r\n\tnamespace createElement.JSX {\r\n\t\tinterface IntrinsicElements {\r\n\t\t\t// Custom element can use JSX EventHandler definitions\r\n\t\t\t'clickable-ce': {\r\n\t\t\t\toptionalAttr?: string;\r\n\t\t\t\tonClick?: MouseEventHandler<HTMLElement>;\r\n\t\t\t};\r\n\r\n\t\t\t// Custom Element that extends HTML attributes\r\n\t\t\t'color-picker': HTMLAttributes & {\r\n\t\t\t\t// Required attribute\r\n\t\t\t\tspace: 'rgb' | 'hsl' | 'hsv';\r\n\t\t\t\t// Optional attribute\r\n\t\t\t\talpha?: boolean;\r\n\t\t\t};\r\n\r\n\t\t\t// Custom Element with custom interface definition\r\n\t\t\t'custom-whatever': WhateveElAttributes;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Whatever Element definition\r\n\r\ninterface WhateverElement {\r\n\tinstanceProp: string;\r\n}\r\n\r\ninterface WhateverElementEvent {\r\n\teventProp: number;\r\n}\r\n\r\n// preact.JSX.HTMLAttributes also appears to work here but for consistency,\r\n// let's use createElement.JSX\r\ninterface WhateveElAttributes extends createElement.JSX.HTMLAttributes {\r\n\tsomeattribute?: string;\r\n\tonsomeevent?: (this: WhateverElement, ev: WhateverElementEvent) => void;\r\n}\r\n\r\n// Ensure context still works\r\nconst { Provider, Consumer } = createContext({ contextValue: '' });\r\n\r\n// Sample component that uses custom elements\r\n\r\nclass SimpleComponent extends Component {\r\n\tcomponentProp = 'componentProp';\r\n\trender() {\r\n\t\t// Render inside div to ensure standard JSX elements still work\r\n\t\treturn (\r\n\t\t\t<Provider value={{ contextValue: 'value' }}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<clickable-ce\r\n\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t// `this` should be instance of SimpleComponent since this is an\r\n\t\t\t\t\t\t\t// arrow function\r\n\t\t\t\t\t\t\tconsole.log(this.componentProp);\r\n\r\n\t\t\t\t\t\t\t// Validate `currentTarget` is HTMLElement\r\n\t\t\t\t\t\t\tconsole.log('clicked ', e.currentTarget.style.display);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t></clickable-ce>\r\n\t\t\t\t\t<color-picker space=\"rgb\" dir=\"rtl\"></color-picker>\r\n\t\t\t\t\t<custom-whatever\r\n\t\t\t\t\t\tdir=\"auto\" // Inherited prop from HTMLAttributes\r\n\t\t\t\t\t\tsomeattribute=\"string\"\r\n\t\t\t\t\t\tonsomeevent={function (e) {\r\n\t\t\t\t\t\t\t// Validate `this` and `e` are the right type\r\n\t\t\t\t\t\t\tconsole.log('clicked', this.instanceProp, e.eventProp);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t></custom-whatever>\r\n\r\n\t\t\t\t\t{/* Ensure context still works */}\r\n\t\t\t\t\t<Consumer>\r\n\t\t\t\t\t\t{({ contextValue }) => contextValue.toLowerCase()}\r\n\t\t\t\t\t</Consumer>\r\n\t\t\t\t</div>\r\n\t\t\t</Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst component = <SimpleComponent />;\r\n"
        ],
        [
            "test/ts/hoc-test.tsx",
            "import { expect } from 'chai';\r\nimport {\r\n\tcreateElement,\r\n\tComponentFactory,\r\n\tComponentConstructor,\r\n\tComponent\r\n} from '../../';\r\nimport { SimpleComponent, SimpleComponentProps } from './Component-test';\r\n\r\nexport interface highlightedProps {\r\n\tisHighlighted: boolean;\r\n}\r\n\r\nexport function highlighted<T>(\r\n\tWrappable: ComponentFactory<T>\r\n): ComponentConstructor<T & highlightedProps> {\r\n\treturn class extends Component<T & highlightedProps> {\r\n\t\tconstructor(props: T & highlightedProps) {\r\n\t\t\tsuper(props);\r\n\t\t}\r\n\r\n\t\trender() {\r\n\t\t\tlet className = this.props.isHighlighted ? 'highlighted' : '';\r\n\t\t\treturn (\r\n\t\t\t\t<div className={className}>\r\n\t\t\t\t\t<Wrappable {...this.props} />\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\ttoString() {\r\n\t\t\treturn `Highlighted ${Wrappable.name}`;\r\n\t\t}\r\n\t};\r\n}\r\n\r\nconst HighlightedSimpleComponent =\r\n\thighlighted<SimpleComponentProps>(SimpleComponent);\r\n\r\ndescribe('hoc', () => {\r\n\tit('wraps the given component', () => {\r\n\t\tconst highlight = new HighlightedSimpleComponent({\r\n\t\t\tinitialName: 'initial name',\r\n\t\t\tisHighlighted: true\r\n\t\t});\r\n\r\n\t\texpect(highlight.toString()).to.eq('Highlighted SimpleComponent');\r\n\t});\r\n});\r\n"
        ],
        [
            "test/ts/preact.tsx",
            "import {\r\n\tcreateElement,\r\n\trender,\r\n\tComponent,\r\n\tComponentProps,\r\n\tFunctionalComponent,\r\n\tAnyComponent,\r\n\th,\r\n\tcreateRef\r\n} from '../../';\r\n\r\ninterface DummyProps {\r\n\tinitialInput: string;\r\n}\r\n\r\ninterface DummyState {\r\n\tinput: string;\r\n}\r\n\r\nclass DummyComponent extends Component<DummyProps, DummyState> {\r\n\tconstructor(props: DummyProps) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tinput: `x${this.props}x`\r\n\t\t};\r\n\t}\r\n\r\n\tprivate setRef = (el: AnyComponent<any>) => {\r\n\t\tconsole.log(el);\r\n\t};\r\n\r\n\trender({ initialInput }: DummyProps, { input }: DummyState) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<DummerComponent initialInput={initialInput} input={input} />\r\n\t\t\t\t{/* Can specify all Preact attributes on a typed FunctionalComponent */}\r\n\t\t\t\t<ComponentWithChildren\r\n\t\t\t\t\tinitialInput={initialInput}\r\n\t\t\t\t\tinput={input}\r\n\t\t\t\t\tkey=\"1\"\r\n\t\t\t\t\tref={this.setRef}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\ninterface DummerComponentProps extends DummyProps, DummyState {}\r\n\r\nfunction DummerComponent({ input, initialInput }: DummerComponentProps) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tInput: {input}, initial: {initialInput}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nrender(createElement('div', { title: 'test', key: '1' }), document);\r\nrender(\r\n\tcreateElement(DummyComponent, { initialInput: 'The input', key: '1' }),\r\n\tdocument\r\n);\r\nrender(\r\n\tcreateElement(DummerComponent, {\r\n\t\tinitialInput: 'The input',\r\n\t\tinput: 'New input',\r\n\t\tkey: '1'\r\n\t}),\r\n\tdocument\r\n);\r\nrender(h('div', { title: 'test', key: '1' }), document);\r\nrender(h(DummyComponent, { initialInput: 'The input', key: '1' }), document);\r\nrender(\r\n\th(DummerComponent, {\r\n\t\tinitialInput: 'The input',\r\n\t\tinput: 'New input',\r\n\t\tkey: '1'\r\n\t}),\r\n\tdocument\r\n);\r\n\r\n// Mounting into different types of Nodes\r\nrender(h('div', {}), document.createElement('div'));\r\nrender(h('div', {}), document);\r\nrender(h('div', {}), document.createElement('div').shadowRoot!);\r\nrender(h('div', {}), document.createDocumentFragment());\r\n\r\n// From https://gist.github.com/developit/f4c67a2ede71dc2fab7f357f39cff28c, modified to be TypeScript compliant\r\nfunction createRootFragment(parent: Element, replaceNode: Element | Element[]) {\r\n\tconst replaceNodes: Element[] = ([] as Element[]).concat(replaceNode);\r\n\tconst s = replaceNodes[replaceNodes.length - 1].nextSibling;\r\n\tfunction insert(c: Node, r: Node | null) {\r\n\t\treturn parent.insertBefore(c, r || s);\r\n\t}\r\n\treturn ((parent as any).__k = {\r\n\t\tnodeType: 1,\r\n\t\tparentNode: parent,\r\n\t\tfirstChild: replaceNodes[0],\r\n\t\tchildNodes: replaceNodes,\r\n\t\tinsertBefore: insert,\r\n\t\tappendChild: (c: Node) => insert(c, null),\r\n\t\tremoveChild: function (c: Node) {\r\n\t\t\treturn parent.removeChild(c);\r\n\t\t}\r\n\t});\r\n}\r\n\r\nrender(\r\n\th('div', {}),\r\n\tcreateRootFragment(\r\n\t\tdocument.createElement('div'),\r\n\t\tdocument.createElement('div')\r\n\t)\r\n);\r\n\r\n// Accessing children\r\nconst ComponentWithChildren: FunctionalComponent<DummerComponentProps> = ({\r\n\tinput,\r\n\tinitialInput,\r\n\tchildren\r\n}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<span>{initialInput}</span>\r\n\t\t\t<span>{input}</span>\r\n\t\t\t<span>{children}</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst UseOfComponentWithChildren = () => {\r\n\treturn (\r\n\t\t<ComponentWithChildren initialInput=\"initial\" input=\"input\">\r\n\t\t\t<span>child 1</span>\r\n\t\t\t<span>child 2</span>\r\n\t\t</ComponentWithChildren>\r\n\t);\r\n};\r\n\r\n// TODO: make this work\r\n// const DummyChildren: FunctionalComponent = ({ children }) => {\r\n// \treturn children;\r\n// };\r\n\r\n// function ReturnChildren(props: { children: preact.ComponentChildren }) {\r\n// \treturn props.children;\r\n// }\r\n\r\n// function TestUndefinedChildren() {\r\n// \treturn (\r\n// \t\t<ReturnChildren>\r\n// \t\t\t<ReturnChildren>Hello</ReturnChildren>\r\n// \t\t</ReturnChildren>\r\n// \t);\r\n// }\r\n\r\n// using ref and or jsx\r\nclass ComponentUsingRef extends Component<any, any> {\r\n\tprivate array: string[];\r\n\tprivate refs: (Element | null)[] = [];\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.array = ['1', '2'];\r\n\t}\r\n\r\n\trender() {\r\n\t\tthis.refs = [];\r\n\t\treturn (\r\n\t\t\t<div jsx>\r\n\t\t\t\t{this.array.map(el => (\r\n\t\t\t\t\t<span ref={this.setRef}>{el}</span>\r\n\t\t\t\t))}\r\n\r\n\t\t\t\t{/* Can specify Preact attributes on a component */}\r\n\t\t\t\t<DummyComponent initialInput=\"1\" key=\"1\" ref={this.setRef} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tprivate setRef = (el: Element | null) => {\r\n\t\tthis.refs.push(el);\r\n\t};\r\n}\r\n\r\n// using lifecycles\r\nclass ComponentWithLifecycle extends Component<DummyProps, DummyState> {\r\n\trender() {\r\n\t\treturn <div>Hi</div>;\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\tconsole.log('componentWillMount');\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconsole.log('componentDidMount');\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tconsole.log('componentWillUnmount');\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps: DummyProps, nextCtx: any) {\r\n\t\tconst { initialInput } = nextProps;\r\n\t\tconsole.log('componentWillReceiveProps', initialInput, nextCtx);\r\n\t}\r\n\r\n\tshouldComponentUpdate(\r\n\t\tnextProps: DummyProps,\r\n\t\tnextState: DummyState,\r\n\t\tnextContext: any\r\n\t) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tcomponentWillUpdate(\r\n\t\tnextProps: DummyProps,\r\n\t\tnextState: DummyState,\r\n\t\tnextContext: any\r\n\t) {\r\n\t\tconsole.log('componentWillUpdate', nextProps, nextState, nextContext);\r\n\t}\r\n\r\n\tcomponentDidUpdate(\r\n\t\tpreviousProps: DummyProps,\r\n\t\tpreviousState: DummyState,\r\n\t\tpreviousContext: any\r\n\t) {\r\n\t\tconsole.log(\r\n\t\t\t'componentDidUpdate',\r\n\t\t\tpreviousProps,\r\n\t\t\tpreviousState,\r\n\t\t\tpreviousContext\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// Default props: JSX.LibraryManagedAttributes\r\n\r\nclass DefaultProps extends Component<{ text: string; bool: boolean }> {\r\n\tstatic defaultProps = {\r\n\t\ttext: 'hello'\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn <div>{this.props.text}</div>;\r\n\t}\r\n}\r\n\r\nconst d1 = <DefaultProps bool={false} text=\"foo\" />;\r\nconst d2 = <DefaultProps bool={false} />;\r\n\r\nclass DefaultPropsWithUnion extends Component<\r\n\t{ default: boolean } & (\r\n\t\t| {\r\n\t\t\t\ttype: 'string';\r\n\t\t\t\tstr: string;\r\n\t\t  }\r\n\t\t| {\r\n\t\t\t\ttype: 'number';\r\n\t\t\t\tnum: number;\r\n\t\t  }\r\n\t)\r\n> {\r\n\tstatic defaultProps = {\r\n\t\tdefault: true\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn <div />;\r\n\t}\r\n}\r\n\r\nconst d3 = <DefaultPropsWithUnion type=\"string\" str={'foo'} />;\r\nconst d4 = <DefaultPropsWithUnion type=\"number\" num={0xf00} />;\r\nconst d5 = <DefaultPropsWithUnion type=\"string\" str={'foo'} default={false} />;\r\nconst d6 = <DefaultPropsWithUnion type=\"number\" num={0xf00} default={false} />;\r\n\r\nclass DefaultUnion extends Component<\r\n\t| {\r\n\t\t\ttype: 'number';\r\n\t\t\tnum: number;\r\n\t  }\r\n\t| {\r\n\t\t\ttype: 'string';\r\n\t\t\tstr: string;\r\n\t  }\r\n> {\r\n\tstatic defaultProps = {\r\n\t\ttype: 'number',\r\n\t\tnum: 1\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn <div />;\r\n\t}\r\n}\r\n\r\nconst d7 = <DefaultUnion />;\r\nconst d8 = <DefaultUnion num={1} />;\r\nconst d9 = <DefaultUnion type=\"number\" />;\r\nconst d10 = <DefaultUnion type=\"string\" str=\"foo\" />;\r\n\r\nclass ComponentWithDefaultProps extends Component<{ value: string }> {\r\n\tstatic defaultProps = { value: '' };\r\n\trender() {\r\n\t\treturn <div>{this.props.value}</div>;\r\n\t}\r\n}\r\n\r\nconst withDefaultProps = <ComponentWithDefaultProps />;\r\n\r\ninterface PartialState {\r\n\tfoo: string;\r\n\tbar: number;\r\n}\r\n\r\nclass ComponentWithPartialSetState extends Component<{}, PartialState> {\r\n\trender({}, { foo, bar }: PartialState) {\r\n\t\treturn (\r\n\t\t\t<button onClick={() => this.handleClick('foo')}>\r\n\t\t\t\t{foo}-{bar}\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n\thandleClick = (value: keyof PartialState) => {\r\n\t\tthis.setState({ [value]: 'updated' });\r\n\t};\r\n}\r\n\r\nconst withPartialSetState = <ComponentWithPartialSetState />;\r\n\r\nlet functionalProps: ComponentProps<typeof DummerComponent> = {\r\n\tinitialInput: '',\r\n\tinput: ''\r\n};\r\n\r\nlet classProps: ComponentProps<typeof DummyComponent> = {\r\n\tinitialInput: ''\r\n};\r\n\r\nlet elementProps: ComponentProps<'button'> = {\r\n\ttype: 'button'\r\n};\r\n\r\n// Typing of style property\r\nconst acceptsNumberAsLength = <div style={{ marginTop: 20 }} />;\r\nconst acceptsStringAsLength = <div style={{ marginTop: '20px' }} />;\r\n\r\nconst ReturnNull: FunctionalComponent = () => null;\r\n\r\n// Refs should work on elements\r\nconst ref = createRef<HTMLDivElement>();\r\ncreateElement('div', { ref: ref }, 'hi');\r\nh('div', { ref: ref }, 'hi');\r\n\r\n// Refs should work on functions\r\nconst functionRef = createRef();\r\nconst RefComponentTest = () => <p>hi</p>;\r\ncreateElement(RefComponentTest, { ref: functionRef }, 'hi');\r\nh(RefComponentTest, { ref: functionRef }, 'hi');\r\n\r\n// Should accept onInput\r\nconst onInput = (e: h.JSX.TargetedEvent<HTMLInputElement>) => {};\r\n<input onInput={onInput} />;\r\ncreateElement('input', { onInput: onInput });\r\nh('input', { onInput: onInput });\r\n"
        ],
        [
            "test/ts/refs.tsx",
            "import {\r\n\tcreateElement,\r\n\tComponent,\r\n\tcreateRef,\r\n\tFunctionalComponent,\r\n\tFragment,\r\n\tRefObject,\r\n\tRefCallback\r\n} from '../../';\r\n\r\n// Test Fixtures\r\nconst Foo: FunctionalComponent = () => <span>Foo</span>;\r\nclass Bar extends Component {\r\n\trender() {\r\n\t\treturn <span>Bar</span>;\r\n\t}\r\n}\r\n\r\n// Using Refs\r\nclass CallbackRef extends Component {\r\n\tdivRef: RefCallback<HTMLDivElement> = div => {\r\n\t\tif (div !== null) {\r\n\t\t\tconsole.log(div.tagName);\r\n\t\t}\r\n\t};\r\n\tfooRef: RefCallback<Component> = foo => {\r\n\t\tif (foo !== null) {\r\n\t\t\tconsole.log(foo.base);\r\n\t\t}\r\n\t};\r\n\tbarRef: RefCallback<Bar> = bar => {\r\n\t\tif (bar !== null) {\r\n\t\t\tconsole.log(bar.base);\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<div ref={this.divRef} />\r\n\t\t\t\t<Foo ref={this.fooRef} />\r\n\t\t\t\t<Bar ref={this.barRef} />\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass CreateRefComponent extends Component {\r\n\tprivate divRef: RefObject<HTMLDivElement> = createRef();\r\n\tprivate fooRef: RefObject<Component> = createRef();\r\n\tprivate barRef: RefObject<Bar> = createRef();\r\n\r\n\tcomponentDidMount() {\r\n\t\tif (this.divRef.current != null) {\r\n\t\t\tconsole.log(this.divRef.current.tagName);\r\n\t\t}\r\n\r\n\t\tif (this.fooRef.current != null) {\r\n\t\t\tconsole.log(this.fooRef.current.base);\r\n\t\t}\r\n\r\n\t\tif (this.barRef.current != null) {\r\n\t\t\tconsole.log(this.barRef.current.base);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<div ref={this.divRef} />\r\n\t\t\t\t<Foo ref={this.fooRef} />\r\n\t\t\t\t<Bar ref={this.barRef} />\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n"
        ],
        [
            "test/ts/VNode-test.tsx",
            "import 'mocha';\r\nimport { expect } from 'chai';\r\nimport {\r\n\tcreateElement,\r\n\tComponent,\r\n\ttoChildArray,\r\n\tFunctionalComponent,\r\n\tComponentConstructor,\r\n\tComponentFactory,\r\n\tVNode,\r\n\tComponentChildren,\r\n\tcloneElement\r\n} from '../../';\r\n\r\nfunction getDisplayType(vnode: VNode | string | number) {\r\n\tif (typeof vnode === 'string' || typeof vnode == 'number') {\r\n\t\treturn vnode.toString();\r\n\t} else if (typeof vnode.type == 'string') {\r\n\t\treturn vnode.type;\r\n\t} else {\r\n\t\treturn vnode.type.displayName;\r\n\t}\r\n}\r\n\r\nclass SimpleComponent extends Component<{}, {}> {\r\n\trender() {\r\n\t\treturn <div>{this.props.children}</div>;\r\n\t}\r\n}\r\n\r\nconst SimpleFunctionalComponent = () => <div />;\r\n\r\nconst a: ComponentFactory = SimpleComponent;\r\nconst b: ComponentFactory = SimpleFunctionalComponent;\r\n\r\ndescribe('VNode TS types', () => {\r\n\tit('is returned by h', () => {\r\n\t\tconst actual = <div className=\"wow\" />;\r\n\t\texpect(actual).to.include.all.keys('type', 'props', 'key');\r\n\t});\r\n\r\n\tit('is returned by h', () => {\r\n\t\tconst actual = <div className=\"wow\" />;\r\n\t\texpect(actual).to.include.all.keys('type', 'props', 'key');\r\n\t});\r\n\r\n\tit('createElement conforms to the VNode type', () => {\r\n\t\tconst arr: VNode[] = [];\r\n\t\tarr.push(createElement('div', null));\r\n\t\texpect(true).to.be.true;\r\n\t});\r\n\r\n\tit('has a nodeName equal to the construction function when SFC', () => {\r\n\t\tconst sfc = <SimpleFunctionalComponent />;\r\n\t\texpect(sfc.type).to.be.instanceOf(Function);\r\n\t\tconst constructor = sfc.type as FunctionalComponent<any>;\r\n\t\texpect(constructor.name).to.eq('SimpleFunctionalComponent');\r\n\t});\r\n\r\n\tit('has a nodeName equal to the constructor of a component', () => {\r\n\t\tconst sfc = <SimpleComponent />;\r\n\t\texpect(sfc.type).to.be.instanceOf(Function);\r\n\t\tconst constructor = sfc.type as ComponentConstructor<any>;\r\n\t\texpect(constructor.name).to.eq('SimpleComponent');\r\n\t});\r\n\r\n\tit('has children which is an array of string or other vnodes', () => {\r\n\t\tconst comp = (\r\n\t\t\t<SimpleComponent>\r\n\t\t\t\t<SimpleComponent>child1</SimpleComponent>\r\n\t\t\t\tchild2\r\n\t\t\t</SimpleComponent>\r\n\t\t);\r\n\r\n\t\texpect(comp.props.children).to.be.instanceOf(Array);\r\n\t\texpect(comp.props.children[1]).to.be.a('string');\r\n\t});\r\n\r\n\tit('children type should work with toChildArray', () => {\r\n\t\tconst comp: VNode = <SimpleComponent>child1 {1}</SimpleComponent>;\r\n\r\n\t\tconst children = toChildArray(comp.props.children);\r\n\t\texpect(children).to.have.lengthOf(2);\r\n\t});\r\n\r\n\tit('toChildArray should filter out some types', () => {\r\n\t\tconst compChild = <SimpleComponent />;\r\n\t\tconst comp: VNode = (\r\n\t\t\t<SimpleComponent>\r\n\t\t\t\ta{null}\r\n\t\t\t\t{true}\r\n\t\t\t\t{false}\r\n\t\t\t\t{2}\r\n\t\t\t\t{undefined}\r\n\t\t\t\t{['b', 'c']}\r\n\t\t\t\t{compChild}\r\n\t\t\t</SimpleComponent>\r\n\t\t);\r\n\r\n\t\tconst children = toChildArray(comp.props.children);\r\n\t\texpect(children).to.deep.equal(['a', 2, 'b', 'c', compChild]);\r\n\t});\r\n\r\n\tit('functions like getDisplayType should work', () => {\r\n\t\tfunction TestComp(props: { children?: ComponentChildren }) {\r\n\t\t\treturn <div>{props.children}</div>;\r\n\t\t}\r\n\t\tTestComp.displayName = 'TestComp';\r\n\r\n\t\tconst compChild = <TestComp />;\r\n\t\tconst comp: VNode = (\r\n\t\t\t<SimpleComponent>\r\n\t\t\t\ta{null}\r\n\t\t\t\t{true}\r\n\t\t\t\t{false}\r\n\t\t\t\t{2}\r\n\t\t\t\t{undefined}\r\n\t\t\t\t{['b', 'c']}\r\n\t\t\t\t{compChild}\r\n\t\t\t</SimpleComponent>\r\n\t\t);\r\n\r\n\t\tconst types = toChildArray(comp.props.children).map(getDisplayType);\r\n\t\texpect(types).to.deep.equal(['a', '2', 'b', 'c', 'TestComp']);\r\n\t});\r\n\r\n\tit('component should work with cloneElement', () => {\r\n\t\tconst comp: VNode = (\r\n\t\t\t<SimpleComponent>\r\n\t\t\t\t<div>child 1</div>\r\n\t\t\t</SimpleComponent>\r\n\t\t);\r\n\t\tconst clone: VNode = cloneElement(comp);\r\n\r\n\t\texpect(comp.type).to.equal(clone.type);\r\n\t\texpect(comp.props).not.to.equal(clone.props);\r\n\t\texpect(comp.props).to.deep.equal(clone.props);\r\n\t});\r\n\r\n\tit('component should work with cloneElement using generics', () => {\r\n\t\tconst comp: VNode<string> = <SimpleComponent></SimpleComponent>;\r\n\t\tconst clone: VNode<string> = cloneElement<string>(comp);\r\n\r\n\t\texpect(comp.type).to.equal(clone.type);\r\n\t\texpect(comp.props).not.to.equal(clone.props);\r\n\t\texpect(comp.props).to.deep.equal(clone.props);\r\n\t});\r\n});\r\n\r\nclass ComponentWithFunctionChild extends Component<{\r\n\tchildren: (num: number) => string;\r\n}> {\r\n\trender() {\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n<ComponentWithFunctionChild>\r\n\t{num => num.toFixed(2)}\r\n</ComponentWithFunctionChild>;\r\n\r\nclass ComponentWithStringChild extends Component<{ children: string }> {\r\n\trender() {\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n<ComponentWithStringChild>child</ComponentWithStringChild>;\r\n\r\nclass ComponentWithNumberChild extends Component<{ children: number }> {\r\n\trender() {\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n<ComponentWithNumberChild>{1}</ComponentWithNumberChild>;\r\n\r\nclass ComponentWithBooleanChild extends Component<{ children: boolean }> {\r\n\trender() {\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n<ComponentWithBooleanChild>{false}</ComponentWithBooleanChild>;\r\n\r\nclass ComponentWithNullChild extends Component<{ children: null }> {\r\n\trender() {\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n<ComponentWithNullChild>{null}</ComponentWithNullChild>;\r\n\r\nclass ComponentWithNumberChildren extends Component<{ children: number[] }> {\r\n\trender() {\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n<ComponentWithNumberChildren>\r\n\t{1}\r\n\t{2}\r\n</ComponentWithNumberChildren>;\r\n"
        ]
    ],
    "targetFilePath": "LICENSE",
    "commitMessage": "",
    "prevEdits": [
        {
            "beforeEdit": "Permission is hereby granted, free of charge, to any person obtaining a copy",
            "afterEdit": "Permission is thereby granted, free of charge, to any person obtaining a copy"
        }
    ]
}
